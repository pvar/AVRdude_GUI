<?xml version="1.0" encoding="utf-8"?>
<AVRPART>
  <MODULE_LIST>[ADMIN:MEMORY:INTERRUPT_VECTOR:FUSE:LOCKBIT:PACKAGE:POWER:CORE:PROGRAMMING:IO_MODULE:ICE_SETTINGS]</MODULE_LIST>
  <ADMIN>
    <PART_NAME>AT90SCR100H</PART_NAME>
    <SPEED>20MHZ</SPEED>
    <BUILD>1</BUILD>
    <RELEASE_STATUS>RELEASED</RELEASE_STATUS>
    <SIGNATURE>
      <ADDR000>$1E</ADDR000>
      <ADDR001>$96</ADDR001>
      <ADDR002>$C1</ADDR002>
    </SIGNATURE>
  </ADMIN>
  <MEMORY>
    <ID>AVRSimMemory8bit.SimMemory8bit</ID>
    <PROG_FLASH>65536</PROG_FLASH>
    <EEPROM>4096</EEPROM>
    <INT_SRAM>
      <SIZE>4096</SIZE>
      <START_ADDR>$100</START_ADDR>
    </INT_SRAM>
    <EXT_SRAM>
      <SIZE>0</SIZE>
      <START_ADDR>$0</START_ADDR>
    </EXT_SRAM>
    <IO_MEMORY>
      <IO_START_ADDR>$00</IO_START_ADDR>
      <IO_STOP_ADDR>$3F</IO_STOP_ADDR>
      <EXT_IO_START_ADDR>$60</EXT_IO_START_ADDR>
      <EXT_IO_STOP_ADDR>$FF</EXT_IO_STOP_ADDR>
      <MEM_START_ADDR>$20</MEM_START_ADDR>
      <MEM_STOP_ADDR>$FF</MEM_STOP_ADDR>
      <SCICR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$FF</MEM_ADDR>
        <CONV_MASK>0x01</CONV_MASK>
        <CREP_MASK>0x02</CREP_MASK>
        <WTEN_MASK>0x04</WTEN_MASK>
        <UART_MASK>0x08</UART_MASK>
        <VCARD0_MASK>0x10</VCARD0_MASK>
        <VCARD1_MASK>0x20</VCARD1_MASK>
        <CARDDET_MASK>0x40</CARDDET_MASK>
        <SCIRESET_MASK>0x80</SCIRESET_MASK>
      </SCICR>
      <SCCON>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$FE</MEM_ADDR>
        <CARDVCC_MASK>0x01</CARDVCC_MASK>
        <CARDRST_MASK>0x02</CARDRST_MASK>
        <CARDCLK_MASK>0x04</CARDCLK_MASK>
        <CARDIO_MASK>0x08</CARDIO_MASK>
        <CARDC4_MASK>0x10</CARDC4_MASK>
        <CARDC8_MASK>0x20</CARDC8_MASK>
        <CLK_MASK>0x80</CLK_MASK>
      </SCCON>
      <SCISR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$FD</MEM_ADDR>
        <SCPE_MASK>0x01</SCPE_MASK>
        <SCRC_MASK>0x02</SCRC_MASK>
        <SCTC_MASK>0x04</SCTC_MASK>
        <SCWTO_MASK>0x08</SCWTO_MASK>
        <VCARDOK_MASK>0x10</VCARDOK_MASK>
        <CARDIN_MASK>0x40</CARDIN_MASK>
        <SCTBE_MASK>0x80</SCTBE_MASK>
      </SCISR>
      <SCIIR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$FC</MEM_ADDR>
        <SCPI_MASK>0x01</SCPI_MASK>
        <SCRI_MASK>0x02</SCRI_MASK>
        <SCTI_MASK>0x04</SCTI_MASK>
        <SCWTI_MASK>0x08</SCWTI_MASK>
        <VCARDERR_MASK>0x10</VCARDERR_MASK>
        <SCTBI_MASK>0x80</SCTBI_MASK>
      </SCIIR>
      <SCIER>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$FB</MEM_ADDR>
        <ESCPI_MASK>0x01</ESCPI_MASK>
        <ESCRI_MASK>0x02</ESCRI_MASK>
        <ESCTI_MASK>0x04</ESCTI_MASK>
        <ESCWTI_MASK>0x08</ESCWTI_MASK>
        <EVCARDER_MASK>0x10</EVCARDER_MASK>
        <CARDINE_MASK>0x40</CARDINE_MASK>
        <ESCTBI_MASK>0x80</ESCTBI_MASK>
      </SCIER>
      <SCSR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$FA</MEM_ADDR>
        <CPRESRES_MASK>0x08</CPRESRES_MASK>
        <CREPSEL_MASK>0x10</CREPSEL_MASK>
        <BGTEN_MASK>0x40</BGTEN_MASK>
      </SCSR>
      <SCIBUF>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F9</MEM_ADDR>
        <SCIBUFD0_MASK>0x01</SCIBUFD0_MASK>
        <SCIBUFD1_MASK>0x02</SCIBUFD1_MASK>
        <SCIBUFD2_MASK>0x04</SCIBUFD2_MASK>
        <SCIBUFD3_MASK>0x08</SCIBUFD3_MASK>
        <SCIBUFD4_MASK>0x10</SCIBUFD4_MASK>
        <SCIBUFD5_MASK>0x20</SCIBUFD5_MASK>
        <SCIBUFD6_MASK>0x40</SCIBUFD6_MASK>
        <SCIBUFD7_MASK>0x80</SCIBUFD7_MASK>
      </SCIBUF>
      <SCETUH>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F8</MEM_ADDR>
        <ETU8_MASK>0x01</ETU8_MASK>
        <ETU9_MASK>0x02</ETU9_MASK>
        <ETU10_MASK>0x04</ETU10_MASK>
        <COMP_MASK>0x80</COMP_MASK>
      </SCETUH>
      <SCETUL>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F7</MEM_ADDR>
        <ETU0_MASK>0x01</ETU0_MASK>
        <ETU1_MASK>0x02</ETU1_MASK>
        <ETU2_MASK>0x04</ETU2_MASK>
        <ETU3_MASK>0x08</ETU3_MASK>
        <ETU4_MASK>0x10</ETU4_MASK>
        <ETU5_MASK>0x20</ETU5_MASK>
        <ETU6_MASK>0x40</ETU6_MASK>
        <ETU7_MASK>0x80</ETU7_MASK>
      </SCETUL>
      <SCGTH>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F6</MEM_ADDR>
        <GT8_MASK>0x01</GT8_MASK>
      </SCGTH>
      <SCGTL>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F5</MEM_ADDR>
        <GT0_MASK>0x01</GT0_MASK>
        <GT1_MASK>0x02</GT1_MASK>
        <GT2_MASK>0x04</GT2_MASK>
        <GT3_MASK>0x08</GT3_MASK>
        <GT4_MASK>0x10</GT4_MASK>
        <GT5_MASK>0x20</GT5_MASK>
        <GT6_MASK>0x40</GT6_MASK>
        <GT7_MASK>0x80</GT7_MASK>
      </SCGTL>
      <SCWT3>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F4</MEM_ADDR>
        <WT24_MASK>0x01</WT24_MASK>
        <WT25_MASK>0x02</WT25_MASK>
        <WT26_MASK>0x04</WT26_MASK>
        <WT27_MASK>0x08</WT27_MASK>
        <WT28_MASK>0x10</WT28_MASK>
        <WT29_MASK>0x20</WT29_MASK>
        <WT30_MASK>0x40</WT30_MASK>
        <WT31_MASK>0x80</WT31_MASK>
      </SCWT3>
      <SCWT2>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F3</MEM_ADDR>
        <WT16_MASK>0x01</WT16_MASK>
        <WT17_MASK>0x02</WT17_MASK>
        <WT18_MASK>0x04</WT18_MASK>
        <WT19_MASK>0x08</WT19_MASK>
        <WT20_MASK>0x10</WT20_MASK>
        <WT21_MASK>0x20</WT21_MASK>
        <WT22_MASK>0x40</WT22_MASK>
        <WT23_MASK>0x80</WT23_MASK>
      </SCWT2>
      <SCWT1>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F2</MEM_ADDR>
        <WT8_MASK>0x01</WT8_MASK>
        <WT9_MASK>0x02</WT9_MASK>
        <WT10_MASK>0x04</WT10_MASK>
        <WT11_MASK>0x08</WT11_MASK>
        <WT12_MASK>0x10</WT12_MASK>
        <WT13_MASK>0x20</WT13_MASK>
        <WT14_MASK>0x40</WT14_MASK>
        <WT15_MASK>0x80</WT15_MASK>
      </SCWT1>
      <SCWT0>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F1</MEM_ADDR>
        <WT0_MASK>0x01</WT0_MASK>
        <WT1_MASK>0x02</WT1_MASK>
        <WT2_MASK>0x04</WT2_MASK>
        <WT3_MASK>0x08</WT3_MASK>
        <WT4_MASK>0x10</WT4_MASK>
        <WT5_MASK>0x20</WT5_MASK>
        <WT6_MASK>0x40</WT6_MASK>
        <WT7_MASK>0x80</WT7_MASK>
      </SCWT0>
      <SCICLK>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F0</MEM_ADDR>
        <SCICLK0_MASK>0x01</SCICLK0_MASK>
        <SCICLK1_MASK>0x02</SCICLK1_MASK>
        <SCICLK2_MASK>0x04</SCICLK2_MASK>
        <SCICLK3_MASK>0x08</SCICLK3_MASK>
        <SCICLK4_MASK>0x10</SCICLK4_MASK>
        <SCICLK5_MASK>0x20</SCICLK5_MASK>
      </SCICLK>
      <DCCR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$EF</MEM_ADDR>
        <DCBUSY_MASK>0x20</DCBUSY_MASK>
        <DCRDY_MASK>0x40</DCRDY_MASK>
        <DCON_MASK>0x80</DCON_MASK>
      </DCCR>
      <USBDMAB>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$ED</MEM_ADDR>
        <USBDMAB0_MASK>0x01</USBDMAB0_MASK>
        <USBDMAB1_MASK>0x02</USBDMAB1_MASK>
        <USBDMAB2_MASK>0x04</USBDMAB2_MASK>
        <USBDMAB3_MASK>0x08</USBDMAB3_MASK>
        <USBDMAB4_MASK>0x10</USBDMAB4_MASK>
        <USBDMAB5_MASK>0x20</USBDMAB5_MASK>
        <USBDMAB6_MASK>0x40</USBDMAB6_MASK>
      </USBDMAB>
      <USBDMADH>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$EC</MEM_ADDR>
        <USBDMAD8_MASK>0x01</USBDMAD8_MASK>
        <USBDMAD9_MASK>0x02</USBDMAD9_MASK>
        <USBDMAD10_MASK>0x04</USBDMAD10_MASK>
        <USBDMAD11_MASK>0x08</USBDMAD11_MASK>
        <USBDMAD12_MASK>0x10</USBDMAD12_MASK>
        <USBDMAD13_MASK>0x20</USBDMAD13_MASK>
      </USBDMADH>
      <USBDMADL>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$EB</MEM_ADDR>
        <USBDMAD0_MASK>0x01</USBDMAD0_MASK>
        <USBDMAD1_MASK>0x02</USBDMAD1_MASK>
        <USBDMAD2_MASK>0x04</USBDMAD2_MASK>
        <USBDMAD3_MASK>0x08</USBDMAD3_MASK>
        <USBDMAD4_MASK>0x10</USBDMAD4_MASK>
        <USBDMAD5_MASK>0x20</USBDMAD5_MASK>
        <USBDMAD6_MASK>0x40</USBDMAD6_MASK>
        <USBDMAD7_MASK>0x80</USBDMAD7_MASK>
      </USBDMADL>
      <USBDMACS>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$EA</MEM_ADDR>
        <USBDMAR_MASK>0x01</USBDMAR_MASK>
        <USBDMADIR_MASK>0x02</USBDMADIR_MASK>
        <USBDMAERR_MASK>0x04</USBDMAERR_MASK>
        <EPS0_MASK>0x10</EPS0_MASK>
        <EPS1_MASK>0x20</EPS1_MASK>
        <EPS2_MASK>0x40</EPS2_MASK>
      </USBDMACS>
      <USBFNH>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E9</MEM_ADDR>
        <FN8_MASK>0x01</FN8_MASK>
        <FN9_MASK>0x02</FN9_MASK>
        <FN10_MASK>0x04</FN10_MASK>
        <FNERR_MASK>0x08</FNERR_MASK>
        <FNEND_MASK>0x10</FNEND_MASK>
      </USBFNH>
      <USBFNL>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E8</MEM_ADDR>
        <FN0_MASK>0x01</FN0_MASK>
        <FN1_MASK>0x02</FN1_MASK>
        <FN2_MASK>0x04</FN2_MASK>
        <FN3_MASK>0x08</FN3_MASK>
        <FN4_MASK>0x10</FN4_MASK>
        <FN5_MASK>0x20</FN5_MASK>
        <FN6_MASK>0x40</FN6_MASK>
        <FN7_MASK>0x80</FN7_MASK>
      </USBFNL>
      <USBFA>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E7</MEM_ADDR>
        <FADD0_MASK>0x01</FADD0_MASK>
        <FADD1_MASK>0x02</FADD1_MASK>
        <FADD2_MASK>0x04</FADD2_MASK>
        <FADD3_MASK>0x08</FADD3_MASK>
        <FADD4_MASK>0x10</FADD4_MASK>
        <FADD5_MASK>0x20</FADD5_MASK>
        <FADD6_MASK>0x40</FADD6_MASK>
      </USBFA>
      <USBGS>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E6</MEM_ADDR>
        <FAF_MASK>0x01</FAF_MASK>
        <FCF_MASK>0x02</FCF_MASK>
        <RMWUE_MASK>0x04</RMWUE_MASK>
        <RSMON_MASK>0x08</RSMON_MASK>
      </USBGS>
      <USBRSTE>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E5</MEM_ADDR>
        <RSTE0_MASK>0x01</RSTE0_MASK>
        <RSTE1_MASK>0x02</RSTE1_MASK>
        <RSTE2_MASK>0x04</RSTE2_MASK>
        <RSTE3_MASK>0x08</RSTE3_MASK>
        <RSTE4_MASK>0x10</RSTE4_MASK>
        <RSTE5_MASK>0x20</RSTE5_MASK>
        <RSTE6_MASK>0x40</RSTE6_MASK>
        <RST7_MASK>0x80</RST7_MASK>
      </USBRSTE>
      <USBEIM>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E4</MEM_ADDR>
        <EP0IM_MASK>0x01</EP0IM_MASK>
        <EP1IM_MASK>0x02</EP1IM_MASK>
        <EP2IM_MASK>0x04</EP2IM_MASK>
        <EP3IM_MASK>0x08</EP3IM_MASK>
        <EP4IM_MASK>0x10</EP4IM_MASK>
        <EP5IM_MASK>0x20</EP5IM_MASK>
        <EP6IM_MASK>0x40</EP6IM_MASK>
        <EP7IM_MASK>0x80</EP7IM_MASK>
      </USBEIM>
      <USBEI>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E3</MEM_ADDR>
        <EP0I_MASK>0x01</EP0I_MASK>
        <EP1I_MASK>0x02</EP1I_MASK>
        <EP2I_MASK>0x04</EP2I_MASK>
        <EP3I_MASK>0x08</EP3I_MASK>
        <EP4I_MASK>0x10</EP4I_MASK>
        <EP5I_MASK>0x20</EP5I_MASK>
        <EP6I_MASK>0x40</EP6I_MASK>
        <EP7I_MASK>0x80</EP7I_MASK>
      </USBEI>
      <USBPIM>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E2</MEM_ADDR>
        <SUSIM_MASK>0x01</SUSIM_MASK>
        <RESIM_MASK>0x02</RESIM_MASK>
        <RMWUIM_MASK>0x04</RMWUIM_MASK>
        <SOFIM_MASK>0x08</SOFIM_MASK>
      </USBPIM>
      <USBPI>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E1</MEM_ADDR>
        <SUSI_MASK>0x01</SUSI_MASK>
        <RESI_MASK>0x02</RESI_MASK>
        <RMWUI_MASK>0x04</RMWUI_MASK>
        <SOFI_MASK>0x08</SOFI_MASK>
        <FEURI_MASK>0x10</FEURI_MASK>
      </USBPI>
      <USBCR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E0</MEM_ADDR>
        <USBE_MASK>0x02</USBE_MASK>
        <UPUC_MASK>0x20</UPUC_MASK>
        <URMWU_MASK>0x80</URMWU_MASK>
      </USBCR>
      <HSSPIDMAB>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$DF</MEM_ADDR>
        <HSSPIDMAB0_MASK>0x01</HSSPIDMAB0_MASK>
        <HSSPIDMAB1_MASK>0x02</HSSPIDMAB1_MASK>
        <HSSPIDMAB2_MASK>0x04</HSSPIDMAB2_MASK>
        <HSSPIDMAB3_MASK>0x08</HSSPIDMAB3_MASK>
        <HSSPIDMAB4_MASK>0x10</HSSPIDMAB4_MASK>
      </HSSPIDMAB>
      <HSSPIDMADH>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$DE</MEM_ADDR>
        <HSSPIDMAD8_MASK>0x01</HSSPIDMAD8_MASK>
        <HSSPIDMAD9_MASK>0x02</HSSPIDMAD9_MASK>
        <HSSPIDMAD10_MASK>0x04</HSSPIDMAD10_MASK>
        <HSSPIDMAD11_MASK>0x08</HSSPIDMAD11_MASK>
        <HSSPIDMAD12_MASK>0x10</HSSPIDMAD12_MASK>
        <HSSPIDMAD13_MASK>0x20</HSSPIDMAD13_MASK>
      </HSSPIDMADH>
      <HSSPIDMADL>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$DD</MEM_ADDR>
        <HSSPIDMAD0_MASK>0x01</HSSPIDMAD0_MASK>
        <HSSPIDMAD1_MASK>0x02</HSSPIDMAD1_MASK>
        <HSSPIDMAD2_MASK>0x04</HSSPIDMAD2_MASK>
        <HSSPIDMAD3_MASK>0x08</HSSPIDMAD3_MASK>
        <HSSPIDMAD4_MASK>0x10</HSSPIDMAD4_MASK>
        <HSSPIDMAD5_MASK>0x20</HSSPIDMAD5_MASK>
        <HSSPIDMAD6_MASK>0x40</HSSPIDMAD6_MASK>
        <HSSPIDMAD7_MASK>0x80</HSSPIDMAD7_MASK>
      </HSSPIDMADL>
      <HSSPIDMACS>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$DC</MEM_ADDR>
        <HSSPIDMAR_MASK>0x01</HSSPIDMAR_MASK>
        <HSSPIDMADIR_MASK>0x02</HSSPIDMADIR_MASK>
        <HSSPIDMAERR_MASK>0x04</HSSPIDMAERR_MASK>
      </HSSPIDMACS>
      <HSSPICR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$DB</MEM_ADDR>
        <CS_MASK>0x01</CS_MASK>
        <RETTO_MASK>0x02</RETTO_MASK>
        <STTTO_MASK>0x04</STTTO_MASK>
      </HSSPICR>
      <HSSPIIR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$DA</MEM_ADDR>
        <NSSFE_MASK>0x08</NSSFE_MASK>
        <NSSRE_MASK>0x10</NSSRE_MASK>
        <RCVOF_MASK>0x20</RCVOF_MASK>
        <BTD_MASK>0x40</BTD_MASK>
        <TIMEOUT_MASK>0x80</TIMEOUT_MASK>
      </HSSPIIR>
      <HSSPICFG>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D9</MEM_ADDR>
        <HSSPIEN_MASK>0x01</HSSPIEN_MASK>
        <HSMSTR_MASK>0x02</HSMSTR_MASK>
        <HSCPOL_MASK>0x04</HSCPOL_MASK>
        <HSCPHA_MASK>0x08</HSCPHA_MASK>
        <DPRAM_MASK>0x10</DPRAM_MASK>
        <SPICKDIV0_MASK>0x20</SPICKDIV0_MASK>
        <SPICKDIV1_MASK>0x40</SPICKDIV1_MASK>
        <SPICKDIV2_MASK>0x80</SPICKDIV2_MASK>
      </HSSPICFG>
      <HSSPISR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D8</MEM_ADDR>
        <SPICKRDY_MASK>0x01</SPICKRDY_MASK>
        <TXBUFE_MASK>0x02</TXBUFE_MASK>
        <RXBUFF_MASK>0x04</RXBUFF_MASK>
        <NSS_MASK>0x08</NSS_MASK>
        <DPRAMRDY_MASK>0x10</DPRAMRDY_MASK>
      </HSSPISR>
      <HSSPITDR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D7</MEM_ADDR>
        <HSSPITDD0_MASK>0x01</HSSPITDD0_MASK>
        <HSSPITDD1_MASK>0x02</HSSPITDD1_MASK>
        <HSSPITDD2_MASK>0x04</HSSPITDD2_MASK>
        <HSSPITDD3_MASK>0x08</HSSPITDD3_MASK>
        <HSSPITDD4_MASK>0x10</HSSPITDD4_MASK>
        <HSSPITDD5_MASK>0x20</HSSPITDD5_MASK>
        <HSSPITDD6_MASK>0x40</HSSPITDD6_MASK>
        <HSSPITDD7_MASK>0x80</HSSPITDD7_MASK>
      </HSSPITDR>
      <HSSPIRDR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D6</MEM_ADDR>
        <HSSPIRDD0_MASK>0x01</HSSPIRDD0_MASK>
        <HSSPIRDD1_MASK>0x02</HSSPIRDD1_MASK>
        <HSSPIRDD2_MASK>0x04</HSSPIRDD2_MASK>
        <HSSPIRDD3_MASK>0x08</HSSPIRDD3_MASK>
        <HSSPIRDD4_MASK>0x10</HSSPIRDD4_MASK>
        <HSSPIRDD5_MASK>0x20</HSSPIRDD5_MASK>
        <HSSPIRDD6_MASK>0x40</HSSPIRDD6_MASK>
        <HSSPIRDD7_MASK>0x80</HSSPIRDD7_MASK>
      </HSSPIRDR>
      <HSSPIGTR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D5</MEM_ADDR>
        <HSSPIGTD0_MASK>0x01</HSSPIGTD0_MASK>
        <HSSPIGTD1_MASK>0x02</HSSPIGTD1_MASK>
        <HSSPIGTD2_MASK>0x04</HSSPIGTD2_MASK>
        <HSSPIGTD3_MASK>0x08</HSSPIGTD3_MASK>
        <HSSPIGTD4_MASK>0x10</HSSPIGTD4_MASK>
        <HSSPIGTD5_MASK>0x20</HSSPIGTD5_MASK>
        <HSSPIGTD6_MASK>0x40</HSSPIGTD6_MASK>
        <HSSPIGTD7_MASK>0x80</HSSPIGTD7_MASK>
      </HSSPIGTR>
      <HSSPIIER>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D4</MEM_ADDR>
        <NSSIE_MASK>0x10</NSSIE_MASK>
        <RCVOFIE_MASK>0x20</RCVOFIE_MASK>
        <BTDIE_MASK>0x40</BTDIE_MASK>
        <TIMEOUTIE_MASK>0x80</TIMEOUTIE_MASK>
      </HSSPIIER>
      <HSSPICNT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D3</MEM_ADDR>
        <HSSPICNTD0_MASK>0x01</HSSPICNTD0_MASK>
        <HSSPICNTD1_MASK>0x02</HSSPICNTD1_MASK>
        <HSSPICNTD2_MASK>0x04</HSSPICNTD2_MASK>
        <HSSPICNTD3_MASK>0x08</HSSPICNTD3_MASK>
        <HSSPICNTD4_MASK>0x10</HSSPICNTD4_MASK>
      </HSSPICNT>
      <HSSPITOH>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D2</MEM_ADDR>
        <HSSPITOD8_MASK>0x01</HSSPITOD8_MASK>
        <HSSPITOD9_MASK>0x02</HSSPITOD9_MASK>
        <HSSPITOD10_MASK>0x04</HSSPITOD10_MASK>
        <HSSPITOD11_MASK>0x08</HSSPITOD11_MASK>
        <HSSPITOD12_MASK>0x10</HSSPITOD12_MASK>
        <HSSPITOD13_MASK>0x20</HSSPITOD13_MASK>
        <HSSPITOD14_MASK>0x40</HSSPITOD14_MASK>
        <HSSPITOD15_MASK>0x80</HSSPITOD15_MASK>
      </HSSPITOH>
      <HSSPITOL>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D1</MEM_ADDR>
        <HSSPITOD0_MASK>0x01</HSSPITOD0_MASK>
        <HSSPITOD1_MASK>0x02</HSSPITOD1_MASK>
        <HSSPITOD2_MASK>0x04</HSSPITOD2_MASK>
        <HSSPITOD3_MASK>0x08</HSSPITOD3_MASK>
        <HSSPITOD4_MASK>0x10</HSSPITOD4_MASK>
        <HSSPITOD5_MASK>0x20</HSSPITOD5_MASK>
        <HSSPITOD6_MASK>0x40</HSSPITOD6_MASK>
        <HSSPITOD7_MASK>0x80</HSSPITOD7_MASK>
      </HSSPITOL>
      <USBFCEX>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$CD</MEM_ADDR>
        <EPTYP0_MASK>0x01</EPTYP0_MASK>
        <EPTYP1_MASK>0x02</EPTYP1_MASK>
        <EPDIR_MASK>0x04</EPDIR_MASK>
        <EPE_MASK>0x80</EPE_MASK>
      </USBFCEX>
      <USBDBCEX>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$CC</MEM_ADDR>
        <BCT0_MASK>0x01</BCT0_MASK>
        <BCT1_MASK>0x02</BCT1_MASK>
        <BCT2_MASK>0x04</BCT2_MASK>
        <BCT3_MASK>0x08</BCT3_MASK>
        <BCT4_MASK>0x10</BCT4_MASK>
        <BCT5_MASK>0x20</BCT5_MASK>
        <BCT6_MASK>0x40</BCT6_MASK>
        <BCT7_MASK>0x80</BCT7_MASK>
      </USBDBCEX>
      <USBCSEX>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$CB</MEM_ADDR>
        <TXC_MASK>0x01</TXC_MASK>
        <RCVD_MASK>0x02</RCVD_MASK>
        <RXSETUP_MASK>0x04</RXSETUP_MASK>
        <STSENT_MASK>0x08</STSENT_MASK>
        <TXPB_MASK>0x10</TXPB_MASK>
        <FSTALL_MASK>0x20</FSTALL_MASK>
        <IERR_MASK>0x40</IERR_MASK>
      </USBCSEX>
      <USBENUM>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$CA</MEM_ADDR>
        <USBENUM0_MASK>0x01</USBENUM0_MASK>
        <USBENUM1_MASK>0x02</USBENUM1_MASK>
        <USBENUM2_MASK>0x04</USBENUM2_MASK>
      </USBENUM>
      <UDR0>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$C6</MEM_ADDR>
        <UDR00_MASK>0x01</UDR00_MASK>
        <UDR01_MASK>0x02</UDR01_MASK>
        <UDR02_MASK>0x04</UDR02_MASK>
        <UDR03_MASK>0x08</UDR03_MASK>
        <UDR04_MASK>0x10</UDR04_MASK>
        <UDR05_MASK>0x20</UDR05_MASK>
        <UDR06_MASK>0x40</UDR06_MASK>
        <UDR07_MASK>0x80</UDR07_MASK>
      </UDR0>
      <UBRR0H>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$C5</MEM_ADDR>
        <UBRR08_MASK>0x01</UBRR08_MASK>
        <UBRR09_MASK>0x02</UBRR09_MASK>
        <UBRR010_MASK>0x04</UBRR010_MASK>
        <UBRR011_MASK>0x08</UBRR011_MASK>
      </UBRR0H>
      <UBRR0L>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$C4</MEM_ADDR>
        <UBRR00_MASK>0x01</UBRR00_MASK>
        <UBRR01_MASK>0x02</UBRR01_MASK>
        <UBRR02_MASK>0x04</UBRR02_MASK>
        <UBRR03_MASK>0x08</UBRR03_MASK>
        <UBRR04_MASK>0x10</UBRR04_MASK>
        <UBRR05_MASK>0x20</UBRR05_MASK>
        <UBRR06_MASK>0x40</UBRR06_MASK>
        <UBRR07_MASK>0x80</UBRR07_MASK>
      </UBRR0L>
      <UCSR0C>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$C2</MEM_ADDR>
        <UCPOL0_MASK>0x01</UCPOL0_MASK>
        <UCSZ00_MASK>0x02</UCSZ00_MASK>
        <UCSZ01_MASK>0x04</UCSZ01_MASK>
        <USBS0_MASK>0x08</USBS0_MASK>
        <UPM00_MASK>0x10</UPM00_MASK>
        <UPM01_MASK>0x20</UPM01_MASK>
        <UMSEL00_MASK>0x40</UMSEL00_MASK>
        <UMSEL01_MASK>0x80</UMSEL01_MASK>
      </UCSR0C>
      <UCSR0B>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$C1</MEM_ADDR>
        <TXB80_MASK>0x01</TXB80_MASK>
        <RXB80_MASK>0x02</RXB80_MASK>
        <UCSZ02_MASK>0x04</UCSZ02_MASK>
        <TXEN0_MASK>0x08</TXEN0_MASK>
        <RXEN0_MASK>0x10</RXEN0_MASK>
        <UDRIE0_MASK>0x20</UDRIE0_MASK>
        <TXCIE0_MASK>0x40</TXCIE0_MASK>
        <RXCIE0_MASK>0x80</RXCIE0_MASK>
      </UCSR0B>
      <UCSR0A>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$C0</MEM_ADDR>
        <MPCM0_MASK>0x01</MPCM0_MASK>
        <U2X0_MASK>0x02</U2X0_MASK>
        <UPE0_MASK>0x04</UPE0_MASK>
        <DOR0_MASK>0x08</DOR0_MASK>
        <FE0_MASK>0x10</FE0_MASK>
        <UDRE0_MASK>0x20</UDRE0_MASK>
        <TXC0_MASK>0x40</TXC0_MASK>
        <RXC0_MASK>0x80</RXC0_MASK>
      </UCSR0A>
      <TWAMR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$BD</MEM_ADDR>
        <TWAM0_MASK>0x02</TWAM0_MASK>
        <TWAM1_MASK>0x04</TWAM1_MASK>
        <TWAM2_MASK>0x08</TWAM2_MASK>
        <TWAM3_MASK>0x10</TWAM3_MASK>
        <TWAM4_MASK>0x20</TWAM4_MASK>
        <TWAM5_MASK>0x40</TWAM5_MASK>
        <TWAM6_MASK>0x80</TWAM6_MASK>
      </TWAMR>
      <TWCR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$BC</MEM_ADDR>
        <TWIE_MASK>0x01</TWIE_MASK>
        <TWEN_MASK>0x04</TWEN_MASK>
        <TWWC_MASK>0x08</TWWC_MASK>
        <TWSTO_MASK>0x10</TWSTO_MASK>
        <TWSTA_MASK>0x20</TWSTA_MASK>
        <TWEA_MASK>0x40</TWEA_MASK>
        <TWINT_MASK>0x80</TWINT_MASK>
      </TWCR>
      <TWDR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$BB</MEM_ADDR>
        <TWD0_MASK>0x01</TWD0_MASK>
        <TWD1_MASK>0x02</TWD1_MASK>
        <TWD2_MASK>0x04</TWD2_MASK>
        <TWD3_MASK>0x08</TWD3_MASK>
        <TWD4_MASK>0x10</TWD4_MASK>
        <TWD5_MASK>0x20</TWD5_MASK>
        <TWD6_MASK>0x40</TWD6_MASK>
        <TWD7_MASK>0x80</TWD7_MASK>
      </TWDR>
      <TWAR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$BA</MEM_ADDR>
        <TWGCE_MASK>0x01</TWGCE_MASK>
        <TWA0_MASK>0x02</TWA0_MASK>
        <TWA1_MASK>0x04</TWA1_MASK>
        <TWA2_MASK>0x08</TWA2_MASK>
        <TWA3_MASK>0x10</TWA3_MASK>
        <TWA4_MASK>0x20</TWA4_MASK>
        <TWA5_MASK>0x40</TWA5_MASK>
        <TWA6_MASK>0x80</TWA6_MASK>
      </TWAR>
      <TWSR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B9</MEM_ADDR>
        <TWPS0_MASK>0x01</TWPS0_MASK>
        <TWPS1_MASK>0x02</TWPS1_MASK>
        <TWS3_MASK>0x08</TWS3_MASK>
        <TWS4_MASK>0x10</TWS4_MASK>
        <TWS5_MASK>0x20</TWS5_MASK>
        <TWS6_MASK>0x40</TWS6_MASK>
        <TWS7_MASK>0x80</TWS7_MASK>
      </TWSR>
      <TWBR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B8</MEM_ADDR>
        <TWBR0_MASK>0x01</TWBR0_MASK>
        <TWBR1_MASK>0x02</TWBR1_MASK>
        <TWBR2_MASK>0x04</TWBR2_MASK>
        <TWBR3_MASK>0x08</TWBR3_MASK>
        <TWBR4_MASK>0x10</TWBR4_MASK>
        <TWBR5_MASK>0x20</TWBR5_MASK>
        <TWBR6_MASK>0x40</TWBR6_MASK>
        <TWBR7_MASK>0x80</TWBR7_MASK>
      </TWBR>
      <ASSR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B6</MEM_ADDR>
        <TCR2BUB_MASK>0x01</TCR2BUB_MASK>
        <TCR2AUB_MASK>0x02</TCR2AUB_MASK>
        <OCR2BUB_MASK>0x04</OCR2BUB_MASK>
        <OCR2AUB_MASK>0x08</OCR2AUB_MASK>
        <TCN2UB_MASK>0x10</TCN2UB_MASK>
        <AS2_MASK>0x20</AS2_MASK>
        <EXCLK_MASK>0x40</EXCLK_MASK>
      </ASSR>
      <OCR2B>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B4</MEM_ADDR>
        <OCR2B0_MASK>0x01</OCR2B0_MASK>
        <OCR2B1_MASK>0x02</OCR2B1_MASK>
        <OCR2B2_MASK>0x04</OCR2B2_MASK>
        <OCR2B3_MASK>0x08</OCR2B3_MASK>
        <OCR2B4_MASK>0x10</OCR2B4_MASK>
        <OCR2B5_MASK>0x20</OCR2B5_MASK>
        <OCR2B6_MASK>0x40</OCR2B6_MASK>
        <OCR2B7_MASK>0x80</OCR2B7_MASK>
      </OCR2B>
      <OCR2A>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B3</MEM_ADDR>
        <OCR2A0_MASK>0x01</OCR2A0_MASK>
        <OCR2A1_MASK>0x02</OCR2A1_MASK>
        <OCR2A2_MASK>0x04</OCR2A2_MASK>
        <OCR2A3_MASK>0x08</OCR2A3_MASK>
        <OCR2A4_MASK>0x10</OCR2A4_MASK>
        <OCR2A5_MASK>0x20</OCR2A5_MASK>
        <OCR2A6_MASK>0x40</OCR2A6_MASK>
        <OCR2A7_MASK>0x80</OCR2A7_MASK>
      </OCR2A>
      <TCNT2>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B2</MEM_ADDR>
        <TCNT2_0_MASK>0x01</TCNT2_0_MASK>
        <TCNT2_1_MASK>0x02</TCNT2_1_MASK>
        <TCNT2_2_MASK>0x04</TCNT2_2_MASK>
        <TCNT2_3_MASK>0x08</TCNT2_3_MASK>
        <TCNT2_4_MASK>0x10</TCNT2_4_MASK>
        <TCNT2_5_MASK>0x20</TCNT2_5_MASK>
        <TCNT2_6_MASK>0x40</TCNT2_6_MASK>
        <TCNT2_7_MASK>0x80</TCNT2_7_MASK>
      </TCNT2>
      <TCCR2B>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B1</MEM_ADDR>
        <CS20_MASK>0x01</CS20_MASK>
        <CS21_MASK>0x02</CS21_MASK>
        <CS22_MASK>0x04</CS22_MASK>
        <WGM22_MASK>0x08</WGM22_MASK>
        <FOC2B_MASK>0x40</FOC2B_MASK>
        <FOC2A_MASK>0x80</FOC2A_MASK>
      </TCCR2B>
      <TCCR2A>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B0</MEM_ADDR>
        <WGM20_MASK>0x01</WGM20_MASK>
        <WGM21_MASK>0x02</WGM21_MASK>
        <COM2B0_MASK>0x10</COM2B0_MASK>
        <COM2B1_MASK>0x20</COM2B1_MASK>
        <COM2A0_MASK>0x40</COM2A0_MASK>
        <COM2A1_MASK>0x80</COM2A1_MASK>
      </TCCR2A>
      <UPDATX>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$AF</MEM_ADDR>
        <PDAT0_MASK>0x01</PDAT0_MASK>
        <PDAT1_MASK>0x02</PDAT1_MASK>
        <PDAT2_MASK>0x04</PDAT2_MASK>
        <PDAT3_MASK>0x08</PDAT3_MASK>
        <PDAT4_MASK>0x10</PDAT4_MASK>
        <PDAT5_MASK>0x20</PDAT5_MASK>
        <PDAT6_MASK>0x40</PDAT6_MASK>
        <PDAT7_MASK>0x80</PDAT7_MASK>
      </UPDATX>
      <UPIENX>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$AE</MEM_ADDR>
        <RXINE_MASK>0x01</RXINE_MASK>
        <RXSTALLE_MASK>0x02</RXSTALLE_MASK>
        <TXOUTE_MASK>0x04</TXOUTE_MASK>
        <TXSTPE_MASK>0x08</TXSTPE_MASK>
        <PERRE_MASK>0x10</PERRE_MASK>
        <NAKEDE_MASK>0x40</NAKEDE_MASK>
        <FLERRE_MASK>0x80</FLERRE_MASK>
      </UPIENX>
      <UPCFG2X>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$AD</MEM_ADDR>
        <INTFRQ0_MASK>0x01</INTFRQ0_MASK>
        <INTFRQ1_MASK>0x02</INTFRQ1_MASK>
        <INTFRQ2_MASK>0x04</INTFRQ2_MASK>
        <INTFRQ3_MASK>0x08</INTFRQ3_MASK>
        <INTFRQ4_MASK>0x10</INTFRQ4_MASK>
        <INTFRQ5_MASK>0x20</INTFRQ5_MASK>
        <INTFRQ6_MASK>0x40</INTFRQ6_MASK>
        <INTFRQ7_MASK>0x80</INTFRQ7_MASK>
      </UPCFG2X>
      <UPSTAX>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$AC</MEM_ADDR>
        <NBUSYBK0_MASK>0x01</NBUSYBK0_MASK>
        <NBUSYBK1_MASK>0x02</NBUSYBK1_MASK>
        <DTSEQ0_MASK>0x04</DTSEQ0_MASK>
        <DTSEQ1_MASK>0x08</DTSEQ1_MASK>
        <UNDERFI_MASK>0x20</UNDERFI_MASK>
        <OVERFI_MASK>0x40</OVERFI_MASK>
        <CFGOK_MASK>0x80</CFGOK_MASK>
      </UPSTAX>
      <UPCFG1X>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$AB</MEM_ADDR>
        <ALLOC_MASK>0x02</ALLOC_MASK>
        <PBK0_MASK>0x04</PBK0_MASK>
        <PBK1_MASK>0x08</PBK1_MASK>
        <PSIZE0_MASK>0x10</PSIZE0_MASK>
        <PSIZE1_MASK>0x20</PSIZE1_MASK>
        <PSIZE2_MASK>0x40</PSIZE2_MASK>
      </UPCFG1X>
      <UPCFG0X>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$AA</MEM_ADDR>
        <PEPNUM0_MASK>0x01</PEPNUM0_MASK>
        <PEPNUM1_MASK>0x02</PEPNUM1_MASK>
        <PEPNUM2_MASK>0x04</PEPNUM2_MASK>
        <PEPNUM3_MASK>0x08</PEPNUM3_MASK>
        <PTOKEN0_MASK>0x10</PTOKEN0_MASK>
        <PTOKEN1_MASK>0x20</PTOKEN1_MASK>
        <PTYPE0_MASK>0x40</PTYPE0_MASK>
        <PTYPE1_MASK>0x80</PTYPE1_MASK>
      </UPCFG0X>
      <UPCRX>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A9</MEM_ADDR>
        <PEN_MASK>0x01</PEN_MASK>
        <RSTDT_MASK>0x08</RSTDT_MASK>
        <INMODE_MASK>0x20</INMODE_MASK>
        <PFREEZE_MASK>0x40</PFREEZE_MASK>
      </UPCRX>
      <UPRST>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A8</MEM_ADDR>
        <P0RST_MASK>0x01</P0RST_MASK>
        <P1RST_MASK>0x02</P1RST_MASK>
        <P2RST_MASK>0x04</P2RST_MASK>
        <P3RST_MASK>0x08</P3RST_MASK>
      </UPRST>
      <UPNUM>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A7</MEM_ADDR>
        <PNUM0_MASK>0x01</PNUM0_MASK>
        <PNUM1_MASK>0x02</PNUM1_MASK>
      </UPNUM>
      <UPINTX>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A6</MEM_ADDR>
        <RXINI_MASK>0x01</RXINI_MASK>
        <RXSTALLI_MASK>0x02</RXSTALLI_MASK>
        <TXOUTI_MASK>0x04</TXOUTI_MASK>
        <TXSTPI_MASK>0x08</TXSTPI_MASK>
        <PERRI_MASK>0x10</PERRI_MASK>
        <RWAL_MASK>0x20</RWAL_MASK>
        <NAKEDI_MASK>0x40</NAKEDI_MASK>
        <FIFOCON_MASK>0x80</FIFOCON_MASK>
      </UPINTX>
      <UPINRQX>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A5</MEM_ADDR>
        <INRQ0_MASK>0x01</INRQ0_MASK>
        <INRQ1_MASK>0x02</INRQ1_MASK>
        <INRQ2_MASK>0x04</INRQ2_MASK>
        <INRQ3_MASK>0x08</INRQ3_MASK>
        <INRQ4_MASK>0x10</INRQ4_MASK>
        <INRQ5_MASK>0x20</INRQ5_MASK>
        <INRQ6_MASK>0x40</INRQ6_MASK>
        <INRQ7_MASK>0x80</INRQ7_MASK>
      </UPINRQX>
      <UHFLEN>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A4</MEM_ADDR>
        <FLEN0_MASK>0x01</FLEN0_MASK>
        <FLEN1_MASK>0x02</FLEN1_MASK>
        <FLEN2_MASK>0x04</FLEN2_MASK>
        <FLEN3_MASK>0x08</FLEN3_MASK>
        <FLEN4_MASK>0x10</FLEN4_MASK>
        <FLEN5_MASK>0x20</FLEN5_MASK>
        <FLEN6_MASK>0x40</FLEN6_MASK>
        <FLEN7_MASK>0x80</FLEN7_MASK>
      </UHFLEN>
      <UHFNUMH>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A3</MEM_ADDR>
        <FNUM8_MASK>0x01</FNUM8_MASK>
        <FNUM9_MASK>0x02</FNUM9_MASK>
        <FNUM10_MASK>0x04</FNUM10_MASK>
      </UHFNUMH>
      <UHFNUML>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A2</MEM_ADDR>
        <FNUM0_MASK>0x01</FNUM0_MASK>
        <FNUM1_MASK>0x02</FNUM1_MASK>
        <FNUM2_MASK>0x04</FNUM2_MASK>
        <FNUM3_MASK>0x08</FNUM3_MASK>
        <FNUM4_MASK>0x10</FNUM4_MASK>
        <FNUM5_MASK>0x20</FNUM5_MASK>
        <FNUM6_MASK>0x40</FNUM6_MASK>
        <FNUM7_MASK>0x80</FNUM7_MASK>
      </UHFNUML>
      <UHADDR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A1</MEM_ADDR>
        <HADDR0_MASK>0x01</HADDR0_MASK>
        <HADDR1_MASK>0x02</HADDR1_MASK>
        <HADDR2_MASK>0x04</HADDR2_MASK>
        <HADDR3_MASK>0x08</HADDR3_MASK>
        <HADDR4_MASK>0x10</HADDR4_MASK>
        <HADDR5_MASK>0x20</HADDR5_MASK>
        <HADDR6_MASK>0x40</HADDR6_MASK>
      </UHADDR>
      <UHIEN>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A0</MEM_ADDR>
        <DCONNE_MASK>0x01</DCONNE_MASK>
        <DDISCE_MASK>0x02</DDISCE_MASK>
        <RSTE_MASK>0x04</RSTE_MASK>
        <RSMEDE_MASK>0x08</RSMEDE_MASK>
        <RXRSME_MASK>0x10</RXRSME_MASK>
        <HSOFE_MASK>0x20</HSOFE_MASK>
        <HWUPE_MASK>0x40</HWUPE_MASK>
      </UHIEN>
      <UHINT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$9F</MEM_ADDR>
        <DCONNI_MASK>0x01</DCONNI_MASK>
        <DDISCI_MASK>0x02</DDISCI_MASK>
        <RSTI_MASK>0x04</RSTI_MASK>
        <RSMEDI_MASK>0x08</RSMEDI_MASK>
        <RXRSMI_MASK>0x10</RXRSMI_MASK>
        <HSOFI_MASK>0x20</HSOFI_MASK>
        <HWUPI_MASK>0x40</HWUPI_MASK>
      </UHINT>
      <UHCR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$9E</MEM_ADDR>
        <SOFEN_MASK>0x01</SOFEN_MASK>
        <RESET_MASK>0x02</RESET_MASK>
        <RESUME_MASK>0x04</RESUME_MASK>
        <FRZCLK_MASK>0x10</FRZCLK_MASK>
        <PAD0_MASK>0x20</PAD0_MASK>
        <PAD1_MASK>0x40</PAD1_MASK>
        <UHEN_MASK>0x80</UHEN_MASK>
      </UHCR>
      <UPERRX>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$9D</MEM_ADDR>
        <DATATGL_MASK>0x01</DATATGL_MASK>
        <DATAPID_MASK>0x02</DATAPID_MASK>
        <PID_MASK>0x04</PID_MASK>
        <PTIMEOUT_MASK>0x08</PTIMEOUT_MASK>
        <CRC16_MASK>0x10</CRC16_MASK>
        <COUNTER0_MASK>0x20</COUNTER0_MASK>
        <COUNTER1_MASK>0x40</COUNTER1_MASK>
      </UPERRX>
      <UPBCXH>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$9C</MEM_ADDR>
        <PBYTCT8_MASK>0x01</PBYTCT8_MASK>
        <PBYTCT9_MASK>0x02</PBYTCT9_MASK>
        <PBYTCT10_MASK>0x04</PBYTCT10_MASK>
      </UPBCXH>
      <UPBCXL>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$9B</MEM_ADDR>
        <PBYTCT0_MASK>0x01</PBYTCT0_MASK>
        <PBYTCT1_MASK>0x02</PBYTCT1_MASK>
        <PBYTCT2_MASK>0x04</PBYTCT2_MASK>
        <PBYTCT3_MASK>0x08</PBYTCT3_MASK>
        <PBYTCT4_MASK>0x10</PBYTCT4_MASK>
        <PBYTCT5_MASK>0x20</PBYTCT5_MASK>
        <PBYTCT6_MASK>0x40</PBYTCT6_MASK>
        <PBYTCT7_MASK>0x80</PBYTCT7_MASK>
      </UPBCXL>
      <UPINT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$9A</MEM_ADDR>
        <PINT0_MASK>0x01</PINT0_MASK>
        <PINT1_MASK>0x02</PINT1_MASK>
        <PINT2_MASK>0x04</PINT2_MASK>
        <PINT3_MASK>0x08</PINT3_MASK>
      </UPINT>
      <UHSR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$99</MEM_ADDR>
        <SPEED_MASK>0x08</SPEED_MASK>
      </UHSR>
      <RNGCR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$95</MEM_ADDR>
        <ROSCE_MASK>0x01</ROSCE_MASK>
      </RNGCR>
      <LFSR3>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$94</MEM_ADDR>
        <LFSD24_MASK>0x01</LFSD24_MASK>
        <LFSD25_MASK>0x02</LFSD25_MASK>
        <LFSD26_MASK>0x04</LFSD26_MASK>
        <LFSD27_MASK>0x08</LFSD27_MASK>
        <LFSD28_MASK>0x10</LFSD28_MASK>
        <LFSD29_MASK>0x20</LFSD29_MASK>
        <LFSD30_MASK>0x40</LFSD30_MASK>
        <LFSD31_MASK>0x80</LFSD31_MASK>
      </LFSR3>
      <LFSR2>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$93</MEM_ADDR>
        <LFSD16_MASK>0x01</LFSD16_MASK>
        <LFSD17_MASK>0x02</LFSD17_MASK>
        <LFSD18_MASK>0x04</LFSD18_MASK>
        <LFSD19_MASK>0x08</LFSD19_MASK>
        <LFSD20_MASK>0x10</LFSD20_MASK>
        <LFSD21_MASK>0x20</LFSD21_MASK>
        <LFSD22_MASK>0x40</LFSD22_MASK>
        <LFSD23_MASK>0x80</LFSD23_MASK>
      </LFSR2>
      <LFSR1>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$92</MEM_ADDR>
        <LFSD8_MASK>0x01</LFSD8_MASK>
        <LFSD9_MASK>0x02</LFSD9_MASK>
        <LFSD10_MASK>0x04</LFSD10_MASK>
        <LFSD11_MASK>0x08</LFSD11_MASK>
        <LFSD12_MASK>0x10</LFSD12_MASK>
        <LFSD13_MASK>0x20</LFSD13_MASK>
        <LFSD14_MASK>0x40</LFSD14_MASK>
        <LFSD15_MASK>0x80</LFSD15_MASK>
      </LFSR1>
      <LFSR0>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$91</MEM_ADDR>
        <LFSD0_MASK>0x01</LFSD0_MASK>
        <LFSD1_MASK>0x02</LFSD1_MASK>
        <LFSD2_MASK>0x04</LFSD2_MASK>
        <LFSD3_MASK>0x08</LFSD3_MASK>
        <LFSD4_MASK>0x10</LFSD4_MASK>
        <LFSD5_MASK>0x20</LFSD5_MASK>
        <LFSD6_MASK>0x40</LFSD6_MASK>
        <LFSD7_MASK>0x80</LFSD7_MASK>
      </LFSR0>
      <RDWDR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$90</MEM_ADDR>
        <RDD0_MASK>0x01</RDD0_MASK>
        <RDD1_MASK>0x02</RDD1_MASK>
        <RDD2_MASK>0x04</RDD2_MASK>
        <RDD3_MASK>0x08</RDD3_MASK>
        <RDD4_MASK>0x10</RDD4_MASK>
        <RDD5_MASK>0x20</RDD5_MASK>
        <RDD6_MASK>0x40</RDD6_MASK>
        <RDD7_MASK>0x80</RDD7_MASK>
      </RDWDR>
      <KBFR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$8F</MEM_ADDR>
        <KBF0_MASK>0x01</KBF0_MASK>
        <KBF1_MASK>0x02</KBF1_MASK>
        <KBF2_MASK>0x04</KBF2_MASK>
        <KBF3_MASK>0x08</KBF3_MASK>
        <KBF4_MASK>0x10</KBF4_MASK>
        <KBF5_MASK>0x20</KBF5_MASK>
        <KBF6_MASK>0x40</KBF6_MASK>
        <KBF7_MASK>0x80</KBF7_MASK>
      </KBFR>
      <KBER>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$8E</MEM_ADDR>
        <KBE0_MASK>0x01</KBE0_MASK>
        <KBE1_MASK>0x02</KBE1_MASK>
        <KBE2_MASK>0x04</KBE2_MASK>
        <KBE3_MASK>0x08</KBE3_MASK>
        <KBE4_MASK>0x10</KBE4_MASK>
        <KBE5_MASK>0x20</KBE5_MASK>
        <KBE6_MASK>0x40</KBE6_MASK>
        <KBE7_MASK>0x80</KBE7_MASK>
      </KBER>
      <KBLSR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$8D</MEM_ADDR>
        <KBLS0_MASK>0x01</KBLS0_MASK>
        <KBLS1_MASK>0x02</KBLS1_MASK>
        <KBLS2_MASK>0x04</KBLS2_MASK>
        <KBLS3_MASK>0x08</KBLS3_MASK>
        <KBLS4_MASK>0x10</KBLS4_MASK>
        <KBLS5_MASK>0x20</KBLS5_MASK>
        <KBLS6_MASK>0x40</KBLS6_MASK>
        <KBLS7_MASK>0x80</KBLS7_MASK>
      </KBLSR>
      <OCR1BH>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$8B</MEM_ADDR>
        <OCR1BH0_MASK>0x01</OCR1BH0_MASK>
        <OCR1BH1_MASK>0x02</OCR1BH1_MASK>
        <OCR1BH2_MASK>0x04</OCR1BH2_MASK>
        <OCR1BH3_MASK>0x08</OCR1BH3_MASK>
        <OCR1BH4_MASK>0x10</OCR1BH4_MASK>
        <OCR1BH5_MASK>0x20</OCR1BH5_MASK>
        <OCR1BH6_MASK>0x40</OCR1BH6_MASK>
        <OCR1BH7_MASK>0x80</OCR1BH7_MASK>
      </OCR1BH>
      <OCR1BL>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$8A</MEM_ADDR>
        <OCR1BL0_MASK>0x01</OCR1BL0_MASK>
        <OCR1BL1_MASK>0x02</OCR1BL1_MASK>
        <OCR1BL2_MASK>0x04</OCR1BL2_MASK>
        <OCR1BL3_MASK>0x08</OCR1BL3_MASK>
        <OCR1BL4_MASK>0x10</OCR1BL4_MASK>
        <OCR1BL5_MASK>0x20</OCR1BL5_MASK>
        <OCR1BL6_MASK>0x40</OCR1BL6_MASK>
        <OCR1BL7_MASK>0x80</OCR1BL7_MASK>
      </OCR1BL>
      <OCR1AH>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$89</MEM_ADDR>
        <OCR1AH0_MASK>0x01</OCR1AH0_MASK>
        <OCR1AH1_MASK>0x02</OCR1AH1_MASK>
        <OCR1AH2_MASK>0x04</OCR1AH2_MASK>
        <OCR1AH3_MASK>0x08</OCR1AH3_MASK>
        <OCR1AH4_MASK>0x10</OCR1AH4_MASK>
        <OCR1AH5_MASK>0x20</OCR1AH5_MASK>
        <OCR1AH6_MASK>0x40</OCR1AH6_MASK>
        <OCR1AH7_MASK>0x80</OCR1AH7_MASK>
      </OCR1AH>
      <OCR1AL>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$88</MEM_ADDR>
        <OCR1AL0_MASK>0x01</OCR1AL0_MASK>
        <OCR1AL1_MASK>0x02</OCR1AL1_MASK>
        <OCR1AL2_MASK>0x04</OCR1AL2_MASK>
        <OCR1AL3_MASK>0x08</OCR1AL3_MASK>
        <OCR1AL4_MASK>0x10</OCR1AL4_MASK>
        <OCR1AL5_MASK>0x20</OCR1AL5_MASK>
        <OCR1AL6_MASK>0x40</OCR1AL6_MASK>
        <OCR1AL7_MASK>0x80</OCR1AL7_MASK>
      </OCR1AL>
      <ICR1H>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$87</MEM_ADDR>
        <ICR1H0_MASK>0x01</ICR1H0_MASK>
        <ICR1H1_MASK>0x02</ICR1H1_MASK>
        <ICR1H2_MASK>0x04</ICR1H2_MASK>
        <ICR1H3_MASK>0x08</ICR1H3_MASK>
        <ICR1H4_MASK>0x10</ICR1H4_MASK>
        <ICR1H5_MASK>0x20</ICR1H5_MASK>
        <ICR1H6_MASK>0x40</ICR1H6_MASK>
        <ICR1H7_MASK>0x80</ICR1H7_MASK>
      </ICR1H>
      <ICR1L>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$86</MEM_ADDR>
        <ICR1L0_MASK>0x01</ICR1L0_MASK>
        <ICR1L1_MASK>0x02</ICR1L1_MASK>
        <ICR1L2_MASK>0x04</ICR1L2_MASK>
        <ICR1L3_MASK>0x08</ICR1L3_MASK>
        <ICR1L4_MASK>0x10</ICR1L4_MASK>
        <ICR1L5_MASK>0x20</ICR1L5_MASK>
        <ICR1L6_MASK>0x40</ICR1L6_MASK>
        <ICR1L7_MASK>0x80</ICR1L7_MASK>
      </ICR1L>
      <TCNT1H>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$85</MEM_ADDR>
        <TCNT1H0_MASK>0x01</TCNT1H0_MASK>
        <TCNT1H1_MASK>0x02</TCNT1H1_MASK>
        <TCNT1H2_MASK>0x04</TCNT1H2_MASK>
        <TCNT1H3_MASK>0x08</TCNT1H3_MASK>
        <TCNT1H4_MASK>0x10</TCNT1H4_MASK>
        <TCNT1H5_MASK>0x20</TCNT1H5_MASK>
        <TCNT1H6_MASK>0x40</TCNT1H6_MASK>
        <TCNT1H7_MASK>0x80</TCNT1H7_MASK>
      </TCNT1H>
      <TCNT1L>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$84</MEM_ADDR>
        <TCNT1L0_MASK>0x01</TCNT1L0_MASK>
        <TCNT1L1_MASK>0x02</TCNT1L1_MASK>
        <TCNT1L2_MASK>0x04</TCNT1L2_MASK>
        <TCNT1L3_MASK>0x08</TCNT1L3_MASK>
        <TCNT1L4_MASK>0x10</TCNT1L4_MASK>
        <TCNT1L5_MASK>0x20</TCNT1L5_MASK>
        <TCNT1L6_MASK>0x40</TCNT1L6_MASK>
        <TCNT1L7_MASK>0x80</TCNT1L7_MASK>
      </TCNT1L>
      <TCCR1C>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$82</MEM_ADDR>
        <FOC1B_MASK>0x40</FOC1B_MASK>
        <FOC1A_MASK>0x80</FOC1A_MASK>
      </TCCR1C>
      <TCCR1B>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$81</MEM_ADDR>
        <CS10_MASK>0x01</CS10_MASK>
        <CS11_MASK>0x02</CS11_MASK>
        <CS12_MASK>0x04</CS12_MASK>
        <WGM12_MASK>0x08</WGM12_MASK>
        <WGM13_MASK>0x10</WGM13_MASK>
        <ICES1_MASK>0x40</ICES1_MASK>
        <ICNC1_MASK>0x80</ICNC1_MASK>
      </TCCR1B>
      <TCCR1A>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$80</MEM_ADDR>
        <WGM10_MASK>0x01</WGM10_MASK>
        <WGM11_MASK>0x02</WGM11_MASK>
        <COM1B0_MASK>0x10</COM1B0_MASK>
        <COM1B1_MASK>0x20</COM1B1_MASK>
        <COM1A0_MASK>0x40</COM1A0_MASK>
        <COM1A1_MASK>0x80</COM1A1_MASK>
      </TCCR1A>
      <AESDR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$7B</MEM_ADDR>
        <DATA0_MASK>0x01</DATA0_MASK>
        <DATA1_MASK>0x02</DATA1_MASK>
        <DATA2_MASK>0x04</DATA2_MASK>
        <DATA3_MASK>0x08</DATA3_MASK>
        <DATA4_MASK>0x10</DATA4_MASK>
        <DATA5_MASK>0x20</DATA5_MASK>
        <DATA6_MASK>0x40</DATA6_MASK>
        <DATA7_MASK>0x80</DATA7_MASK>
      </AESDR>
      <AESADDR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$7A</MEM_ADDR>
        <ADDR0_MASK>0x01</ADDR0_MASK>
        <ADDR1_MASK>0x02</ADDR1_MASK>
        <ADDR2_MASK>0x04</ADDR2_MASK>
        <ADDR3_MASK>0x08</ADDR3_MASK>
        <ADDR4_MASK>0x10</ADDR4_MASK>
        <ADDR5_MASK>0x20</ADDR5_MASK>
        <ADDR6_MASK>0x40</ADDR6_MASK>
        <ADDR7_MASK>0x80</ADDR7_MASK>
      </AESADDR>
      <AESACR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$79</MEM_ADDR>
        <KD_MASK>0x01</KD_MASK>
        <AUTOINC_MASK>0x02</AUTOINC_MASK>
        <MANINC_MASK>0x04</MANINC_MASK>
        <XOR_MASK>0x08</XOR_MASK>
      </AESACR>
      <AESCR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$78</MEM_ADDR>
        <AESGO_MASK>0x01</AESGO_MASK>
        <ENCRYPT_MASK>0x02</ENCRYPT_MASK>
        <KS_MASK>0x08</KS_MASK>
        <KEYGN_MASK>0x10</KEYGN_MASK>
        <AUTOKEY_MASK>0x20</AUTOKEY_MASK>
        <AESIF_MASK>0x40</AESIF_MASK>
        <AESIE_MASK>0x80</AESIE_MASK>
      </AESCR>
      <LEDCR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$75</MEM_ADDR>
        <LED00_MASK>0x01</LED00_MASK>
        <LED01_MASK>0x02</LED01_MASK>
        <LED10_MASK>0x04</LED10_MASK>
        <LED11_MASK>0x08</LED11_MASK>
        <LED20_MASK>0x10</LED20_MASK>
        <LED21_MASK>0x20</LED21_MASK>
        <lED30_MASK>0x40</lED30_MASK>
        <LED31_MASK>0x80</LED31_MASK>
      </LEDCR>
      <PCMSK3>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$73</MEM_ADDR>
      </PCMSK3>
      <TIMSK2>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$70</MEM_ADDR>
        <TOIE2_MASK>0x01</TOIE2_MASK>
        <OCIE2A_MASK>0x02</OCIE2A_MASK>
        <OCIE2B_MASK>0x04</OCIE2B_MASK>
      </TIMSK2>
      <TIMSK1>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$6F</MEM_ADDR>
        <TOIE1_MASK>0x01</TOIE1_MASK>
        <OCIE1A_MASK>0x02</OCIE1A_MASK>
        <OCIE1B_MASK>0x04</OCIE1B_MASK>
        <ICIE1_MASK>0x20</ICIE1_MASK>
      </TIMSK1>
      <TIMSK0>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$6E</MEM_ADDR>
        <TOIE0_MASK>0x01</TOIE0_MASK>
        <OCIE0A_MASK>0x02</OCIE0A_MASK>
        <OCIE0B_MASK>0x04</OCIE0B_MASK>
      </TIMSK0>
      <PCMSK2>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$6D</MEM_ADDR>
        <PCINT16_MASK>0x01</PCINT16_MASK>
        <PCINT17_MASK>0x02</PCINT17_MASK>
        <PCINT18_MASK>0x04</PCINT18_MASK>
        <PCINT19_MASK>0x08</PCINT19_MASK>
        <PCINT20_MASK>0x10</PCINT20_MASK>
        <PCINT21_MASK>0x20</PCINT21_MASK>
        <PCINT22_MASK>0x40</PCINT22_MASK>
        <PCINT23_MASK>0x80</PCINT23_MASK>
      </PCMSK2>
      <PCMSK1>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$6C</MEM_ADDR>
        <PCINT8_MASK>0x01</PCINT8_MASK>
        <PCINT9_MASK>0x02</PCINT9_MASK>
        <PCINT10_MASK>0x04</PCINT10_MASK>
        <PCINT11_MASK>0x08</PCINT11_MASK>
        <PCINT12_MASK>0x10</PCINT12_MASK>
        <PCINT13_MASK>0x20</PCINT13_MASK>
        <PCINT14_MASK>0x40</PCINT14_MASK>
        <PCINT15_MASK>0x80</PCINT15_MASK>
      </PCMSK1>
      <PCMSK0>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$6B</MEM_ADDR>
        <PCINT0_MASK>0x01</PCINT0_MASK>
        <PCINT1_MASK>0x02</PCINT1_MASK>
        <PCINT2_MASK>0x04</PCINT2_MASK>
        <PCINT3_MASK>0x08</PCINT3_MASK>
        <PCINT4_MASK>0x10</PCINT4_MASK>
        <PCINT5_MASK>0x20</PCINT5_MASK>
        <PCINT6_MASK>0x40</PCINT6_MASK>
        <PCINT7_MASK>0x80</PCINT7_MASK>
      </PCMSK0>
      <EICRA>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$69</MEM_ADDR>
        <ISC00_MASK>0x01</ISC00_MASK>
        <ISC01_MASK>0x02</ISC01_MASK>
        <ISC10_MASK>0x04</ISC10_MASK>
        <ISC11_MASK>0x08</ISC11_MASK>
        <ISC20_MASK>0x10</ISC20_MASK>
        <ISC21_MASK>0x20</ISC21_MASK>
        <ISC30_MASK>0x40</ISC30_MASK>
        <ISC31_MASK>0x80</ISC31_MASK>
      </EICRA>
      <PCICR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$68</MEM_ADDR>
        <PCIE0_MASK>0x01</PCIE0_MASK>
        <PCIE1_MASK>0x02</PCIE1_MASK>
        <PCIE2_MASK>0x04</PCIE2_MASK>
        <PCIE3_MASK>0x08</PCIE3_MASK>
      </PCICR>
      <OSCCAL>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$66</MEM_ADDR>
        <CAL0_MASK>0x01</CAL0_MASK>
        <CAL1_MASK>0x02</CAL1_MASK>
        <CAL2_MASK>0x04</CAL2_MASK>
        <CAL3_MASK>0x08</CAL3_MASK>
        <CAL4_MASK>0x10</CAL4_MASK>
        <CAL5_MASK>0x20</CAL5_MASK>
        <CAL6_MASK>0x40</CAL6_MASK>
        <CAL7_MASK>0x80</CAL7_MASK>
      </OSCCAL>
      <PRR1>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$65</MEM_ADDR>
        <PRUSBH_MASK>0x01</PRUSBH_MASK>
        <PRUSB_MASK>0x02</PRUSB_MASK>
        <PRHSSPI_MASK>0x04</PRHSSPI_MASK>
        <PRSCI_MASK>0x08</PRSCI_MASK>
        <PRAES_MASK>0x10</PRAES_MASK>
        <PRKB_MASK>0x20</PRKB_MASK>
      </PRR1>
      <PRR0>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$64</MEM_ADDR>
        <PRUSART0_MASK>0x02</PRUSART0_MASK>
        <PRSPI_MASK>0x04</PRSPI_MASK>
        <PRTIM1_MASK>0x08</PRTIM1_MASK>
        <PRTIM0_MASK>0x20</PRTIM0_MASK>
        <PRTIM2_MASK>0x40</PRTIM2_MASK>
        <PRTWI_MASK>0x80</PRTWI_MASK>
      </PRR0>
      <SMONCR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$63</MEM_ADDR>
        <SMONEN_MASK>0x01</SMONEN_MASK>
        <SMONIE_MASK>0x02</SMONIE_MASK>
        <SMONIF_MASK>0x10</SMONIF_MASK>
      </SMONCR>
      <PLLCR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$62</MEM_ADDR>
        <ON_MASK>0x01</ON_MASK>
        <LOCK_MASK>0x02</LOCK_MASK>
        <PLLMUX_MASK>0x80</PLLMUX_MASK>
      </PLLCR>
      <CLKPR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$61</MEM_ADDR>
        <CLKPS0_MASK>0x01</CLKPS0_MASK>
        <CLKPS1_MASK>0x02</CLKPS1_MASK>
        <CLKPS2_MASK>0x04</CLKPS2_MASK>
        <CLKPS3_MASK>0x08</CLKPS3_MASK>
        <CLKPCE_MASK>0x80</CLKPCE_MASK>
      </CLKPR>
      <WDTCSR>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$60</MEM_ADDR>
        <WDP0_MASK>0x01</WDP0_MASK>
        <WDP1_MASK>0x02</WDP1_MASK>
        <WDP2_MASK>0x04</WDP2_MASK>
        <WDE_MASK>0x08</WDE_MASK>
        <WDCE_MASK>0x10</WDCE_MASK>
        <WDP3_MASK>0x20</WDP3_MASK>
        <WDIE_MASK>0x40</WDIE_MASK>
        <WDIF_MASK>0x80</WDIF_MASK>
      </WDTCSR>
      <SREG>
        <IO_ADDR>$3F</IO_ADDR>
        <MEM_ADDR>$5F</MEM_ADDR>
        <C_MASK>0x01</C_MASK>
        <Z_MASK>0x02</Z_MASK>
        <N_MASK>0x04</N_MASK>
        <V_MASK>0x08</V_MASK>
        <S_MASK>0x10</S_MASK>
        <H_MASK>0x20</H_MASK>
        <T_MASK>0x40</T_MASK>
        <I_MASK>0x80</I_MASK>
      </SREG>
      <SPH>
        <IO_ADDR>$3E</IO_ADDR>
        <MEM_ADDR>$5E</MEM_ADDR>
        <INIT>0x10</INIT>
        <SP8_MASK>0x01</SP8_MASK>
        <SP9_MASK>0x02</SP9_MASK>
        <SP10_MASK>0x04</SP10_MASK>
        <SP11_MASK>0x08</SP11_MASK>
        <SP12_MASK>0x10</SP12_MASK>
      </SPH>
      <SPL>
        <IO_ADDR>$3D</IO_ADDR>
        <MEM_ADDR>$5D</MEM_ADDR>
        <INIT>0xFF</INIT>
        <SP0_MASK>0x01</SP0_MASK>
        <SP1_MASK>0x02</SP1_MASK>
        <SP2_MASK>0x04</SP2_MASK>
        <SP3_MASK>0x08</SP3_MASK>
        <SP4_MASK>0x10</SP4_MASK>
        <SP5_MASK>0x20</SP5_MASK>
        <SP6_MASK>0x40</SP6_MASK>
        <SP7_MASK>0x80</SP7_MASK>
      </SPL>
      <RAMPZ>
        <IO_ADDR>$3B</IO_ADDR>
        <MEM_ADDR>$5B</MEM_ADDR>
        <RAMPZ0_MASK>0x01</RAMPZ0_MASK>
      </RAMPZ>
      <SPMCSR>
        <IO_ADDR>$37</IO_ADDR>
        <MEM_ADDR>$57</MEM_ADDR>
        <SPMEN_MASK>0x01</SPMEN_MASK>
        <PGERS_MASK>0x02</PGERS_MASK>
        <PGWRT_MASK>0x04</PGWRT_MASK>
        <BLBSET_MASK>0x08</BLBSET_MASK>
        <RWWSRE_MASK>0x10</RWWSRE_MASK>
        <SIGRD_MASK>0x20</SIGRD_MASK>
        <RWWSB_MASK>0x40</RWWSB_MASK>
        <SPMIE_MASK>0x80</SPMIE_MASK>
      </SPMCSR>
      <MCUCR>
        <IO_ADDR>$35</IO_ADDR>
        <MEM_ADDR>$55</MEM_ADDR>
        <JTD_MASK>0x80</JTD_MASK>
        <IVCE_MASK>0x01</IVCE_MASK>
        <IVSEL_MASK>0x02</IVSEL_MASK>
        <PUD_MASK>0x10</PUD_MASK>
        <BODSE_MASK>0x20</BODSE_MASK>
        <BODS_MASK>0x40</BODS_MASK>
      </MCUCR>
      <MCUSR>
        <IO_ADDR>$34</IO_ADDR>
        <MEM_ADDR>$54</MEM_ADDR>
        <JTRF_MASK>0x10</JTRF_MASK>
        <PORF_MASK>0x01</PORF_MASK>
        <EXTRF_MASK>0x02</EXTRF_MASK>
        <BORF_MASK>0x04</BORF_MASK>
        <WDRF_MASK>0x08</WDRF_MASK>
      </MCUSR>
      <SMCR>
        <IO_ADDR>$33</IO_ADDR>
        <MEM_ADDR>$53</MEM_ADDR>
        <SE_MASK>0x01</SE_MASK>
        <SM0_MASK>0x02</SM0_MASK>
        <SM1_MASK>0x04</SM1_MASK>
        <SM2_MASK>0x08</SM2_MASK>
      </SMCR>
      <OCDR>
        <IO_ADDR>$31</IO_ADDR>
        <MEM_ADDR>$51</MEM_ADDR>
        <OCDR0_MASK>0x01</OCDR0_MASK>
        <OCDR1_MASK>0x02</OCDR1_MASK>
        <OCDR2_MASK>0x04</OCDR2_MASK>
        <OCDR3_MASK>0x08</OCDR3_MASK>
        <OCDR4_MASK>0x10</OCDR4_MASK>
        <OCDR5_MASK>0x20</OCDR5_MASK>
        <OCDR6_MASK>0x40</OCDR6_MASK>
        <OCDR7_MASK>0x80</OCDR7_MASK>
      </OCDR>
      <SPDR>
        <IO_ADDR>$2E</IO_ADDR>
        <MEM_ADDR>$4E</MEM_ADDR>
        <SPDR0_MASK>0x01</SPDR0_MASK>
        <SPDR1_MASK>0x02</SPDR1_MASK>
        <SPDR2_MASK>0x04</SPDR2_MASK>
        <SPDR3_MASK>0x08</SPDR3_MASK>
        <SPDR4_MASK>0x10</SPDR4_MASK>
        <SPDR5_MASK>0x20</SPDR5_MASK>
        <SPDR6_MASK>0x40</SPDR6_MASK>
        <SPDR7_MASK>0x80</SPDR7_MASK>
      </SPDR>
      <SPSR>
        <IO_ADDR>$2D</IO_ADDR>
        <MEM_ADDR>$4D</MEM_ADDR>
        <SPI2X_MASK>0x01</SPI2X_MASK>
        <WCOL_MASK>0x40</WCOL_MASK>
        <SPIF_MASK>0x80</SPIF_MASK>
      </SPSR>
      <SPCR>
        <IO_ADDR>$2C</IO_ADDR>
        <MEM_ADDR>$4C</MEM_ADDR>
        <SPR0_MASK>0x01</SPR0_MASK>
        <SPR1_MASK>0x02</SPR1_MASK>
        <CPHA_MASK>0x04</CPHA_MASK>
        <CPOL_MASK>0x08</CPOL_MASK>
        <MSTR_MASK>0x10</MSTR_MASK>
        <DORD_MASK>0x20</DORD_MASK>
        <SPE_MASK>0x40</SPE_MASK>
        <SPIE_MASK>0x80</SPIE_MASK>
      </SPCR>
      <GPIOR2>
        <IO_ADDR>$2B</IO_ADDR>
        <MEM_ADDR>$4B</MEM_ADDR>
        <GPIOR20_MASK>0x01</GPIOR20_MASK>
        <GPIOR21_MASK>0x02</GPIOR21_MASK>
        <GPIOR22_MASK>0x04</GPIOR22_MASK>
        <GPIOR23_MASK>0x08</GPIOR23_MASK>
        <GPIOR24_MASK>0x10</GPIOR24_MASK>
        <GPIOR25_MASK>0x20</GPIOR25_MASK>
        <GPIOR26_MASK>0x40</GPIOR26_MASK>
        <GPIOR27_MASK>0x80</GPIOR27_MASK>
      </GPIOR2>
      <GPIOR1>
        <IO_ADDR>$2A</IO_ADDR>
        <MEM_ADDR>$4A</MEM_ADDR>
        <GPIOR10_MASK>0x01</GPIOR10_MASK>
        <GPIOR11_MASK>0x02</GPIOR11_MASK>
        <GPIOR12_MASK>0x04</GPIOR12_MASK>
        <GPIOR13_MASK>0x08</GPIOR13_MASK>
        <GPIOR14_MASK>0x10</GPIOR14_MASK>
        <GPIOR15_MASK>0x20</GPIOR15_MASK>
        <GPIOR16_MASK>0x40</GPIOR16_MASK>
        <GPIOR17_MASK>0x80</GPIOR17_MASK>
      </GPIOR1>
      <OCR0B>
        <IO_ADDR>$28</IO_ADDR>
        <MEM_ADDR>$48</MEM_ADDR>
        <OCR0B_0_MASK>0x01</OCR0B_0_MASK>
        <OCR0B_1_MASK>0x02</OCR0B_1_MASK>
        <OCR0B_2_MASK>0x04</OCR0B_2_MASK>
        <OCR0B_3_MASK>0x08</OCR0B_3_MASK>
        <OCR0B_4_MASK>0x10</OCR0B_4_MASK>
        <OCR0B_5_MASK>0x20</OCR0B_5_MASK>
        <OCR0B_6_MASK>0x40</OCR0B_6_MASK>
        <OCR0B_7_MASK>0x80</OCR0B_7_MASK>
      </OCR0B>
      <OCR0A>
        <IO_ADDR>$27</IO_ADDR>
        <MEM_ADDR>$47</MEM_ADDR>
        <OCR0A_0_MASK>0x01</OCR0A_0_MASK>
        <OCR0A_1_MASK>0x02</OCR0A_1_MASK>
        <OCR0A_2_MASK>0x04</OCR0A_2_MASK>
        <OCR0A_3_MASK>0x08</OCR0A_3_MASK>
        <OCR0A_4_MASK>0x10</OCR0A_4_MASK>
        <OCR0A_5_MASK>0x20</OCR0A_5_MASK>
        <OCR0A_6_MASK>0x40</OCR0A_6_MASK>
        <OCR0A_7_MASK>0x80</OCR0A_7_MASK>
      </OCR0A>
      <TCNT0>
        <IO_ADDR>$26</IO_ADDR>
        <MEM_ADDR>$46</MEM_ADDR>
        <TCNT0_0_MASK>0x01</TCNT0_0_MASK>
        <TCNT0_1_MASK>0x02</TCNT0_1_MASK>
        <TCNT0_2_MASK>0x04</TCNT0_2_MASK>
        <TCNT0_3_MASK>0x08</TCNT0_3_MASK>
        <TCNT0_4_MASK>0x10</TCNT0_4_MASK>
        <TCNT0_5_MASK>0x20</TCNT0_5_MASK>
        <TCNT0_6_MASK>0x40</TCNT0_6_MASK>
        <TCNT0_7_MASK>0x80</TCNT0_7_MASK>
      </TCNT0>
      <TCCR0B>
        <IO_ADDR>$25</IO_ADDR>
        <MEM_ADDR>$45</MEM_ADDR>
        <CS00_MASK>0x01</CS00_MASK>
        <CS01_MASK>0x02</CS01_MASK>
        <CS02_MASK>0x04</CS02_MASK>
        <WGM02_MASK>0x08</WGM02_MASK>
        <FOC0B_MASK>0x40</FOC0B_MASK>
        <FOC0A_MASK>0x80</FOC0A_MASK>
      </TCCR0B>
      <TCCR0A>
        <IO_ADDR>$24</IO_ADDR>
        <MEM_ADDR>$44</MEM_ADDR>
        <WGM00_MASK>0x01</WGM00_MASK>
        <WGM01_MASK>0x02</WGM01_MASK>
        <COM0B0_MASK>0x10</COM0B0_MASK>
        <COM0B1_MASK>0x20</COM0B1_MASK>
        <COM0A0_MASK>0x40</COM0A0_MASK>
        <COM0A1_MASK>0x80</COM0A1_MASK>
      </TCCR0A>
      <GTCCR>
        <IO_ADDR>$23</IO_ADDR>
        <MEM_ADDR>$43</MEM_ADDR>
        <PSRSYNC_MASK>0x01</PSRSYNC_MASK>
        <TSM_MASK>0x80</TSM_MASK>
        <PSRASY_MASK>0x02</PSRASY_MASK>
      </GTCCR>
      <EEARH>
        <IO_ADDR>$22</IO_ADDR>
        <MEM_ADDR>$42</MEM_ADDR>
        <EEAR8_MASK>0x01</EEAR8_MASK>
        <EEAR9_MASK>0x02</EEAR9_MASK>
        <EEAR10_MASK>0x04</EEAR10_MASK>
        <EEAR11_MASK>0x08</EEAR11_MASK>
      </EEARH>
      <EEARL>
        <IO_ADDR>$21</IO_ADDR>
        <MEM_ADDR>$41</MEM_ADDR>
        <EEAR0_MASK>0x01</EEAR0_MASK>
        <EEAR1_MASK>0x02</EEAR1_MASK>
        <EEAR2_MASK>0x04</EEAR2_MASK>
        <EEAR3_MASK>0x08</EEAR3_MASK>
        <EEAR4_MASK>0x10</EEAR4_MASK>
        <EEAR5_MASK>0x20</EEAR5_MASK>
        <EEAR6_MASK>0x40</EEAR6_MASK>
        <EEAR7_MASK>0x80</EEAR7_MASK>
      </EEARL>
      <EEDR>
        <IO_ADDR>$20</IO_ADDR>
        <MEM_ADDR>$40</MEM_ADDR>
        <EEDR0_MASK>0x01</EEDR0_MASK>
        <EEDR1_MASK>0x02</EEDR1_MASK>
        <EEDR2_MASK>0x04</EEDR2_MASK>
        <EEDR3_MASK>0x08</EEDR3_MASK>
        <EEDR4_MASK>0x10</EEDR4_MASK>
        <EEDR5_MASK>0x20</EEDR5_MASK>
        <EEDR6_MASK>0x40</EEDR6_MASK>
        <EEDR7_MASK>0x80</EEDR7_MASK>
      </EEDR>
      <EECR>
        <IO_ADDR>$1F</IO_ADDR>
        <MEM_ADDR>$3F</MEM_ADDR>
        <EERE_MASK>0x01</EERE_MASK>
        <EEPE_MASK>0x02</EEPE_MASK>
        <EEMPE_MASK>0x04</EEMPE_MASK>
        <EERIE_MASK>0x08</EERIE_MASK>
        <EEPM0_MASK>0x10</EEPM0_MASK>
        <EEPM1_MASK>0x20</EEPM1_MASK>
      </EECR>
      <GPIOR0>
        <IO_ADDR>$1E</IO_ADDR>
        <MEM_ADDR>$3E</MEM_ADDR>
        <GPIOR00_MASK>0x01</GPIOR00_MASK>
        <GPIOR01_MASK>0x02</GPIOR01_MASK>
        <GPIOR02_MASK>0x04</GPIOR02_MASK>
        <GPIOR03_MASK>0x08</GPIOR03_MASK>
        <GPIOR04_MASK>0x10</GPIOR04_MASK>
        <GPIOR05_MASK>0x20</GPIOR05_MASK>
        <GPIOR06_MASK>0x40</GPIOR06_MASK>
        <GPIOR07_MASK>0x80</GPIOR07_MASK>
      </GPIOR0>
      <EIMSK>
        <IO_ADDR>$1D</IO_ADDR>
        <MEM_ADDR>$3D</MEM_ADDR>
        <INT0_MASK>0x01</INT0_MASK>
        <INT1_MASK>0x02</INT1_MASK>
        <INT2_MASK>0x04</INT2_MASK>
        <INT3_MASK>0x08</INT3_MASK>
      </EIMSK>
      <EIFR>
        <IO_ADDR>$1C</IO_ADDR>
        <MEM_ADDR>$3C</MEM_ADDR>
        <INTF0_MASK>0x01</INTF0_MASK>
        <INTF1_MASK>0x02</INTF1_MASK>
        <INTF2_MASK>0x04</INTF2_MASK>
        <INTF3_MASK>0x08</INTF3_MASK>
      </EIFR>
      <PCIFR>
        <IO_ADDR>$1B</IO_ADDR>
        <MEM_ADDR>$3B</MEM_ADDR>
        <PCIF0_MASK>0x01</PCIF0_MASK>
        <PCIF1_MASK>0x02</PCIF1_MASK>
        <PCIF2_MASK>0x04</PCIF2_MASK>
        <PCIF3_MASK>0x08</PCIF3_MASK>
      </PCIFR>
      <EIRR>
        <IO_ADDR>$1A</IO_ADDR>
        <MEM_ADDR>$3A</MEM_ADDR>
        <INTD2_MASK>0x04</INTD2_MASK>
        <INTD3_MASK>0x08</INTD3_MASK>
      </EIRR>
      <TIFR2>
        <IO_ADDR>$17</IO_ADDR>
        <MEM_ADDR>$37</MEM_ADDR>
        <TOV2_MASK>0x01</TOV2_MASK>
        <OCF2A_MASK>0x02</OCF2A_MASK>
        <OCF2B_MASK>0x04</OCF2B_MASK>
      </TIFR2>
      <TIFR1>
        <IO_ADDR>$16</IO_ADDR>
        <MEM_ADDR>$36</MEM_ADDR>
        <TOV1_MASK>0x01</TOV1_MASK>
        <OCF1A_MASK>0x02</OCF1A_MASK>
        <OCF1B_MASK>0x04</OCF1B_MASK>
        <ICF1_MASK>0x20</ICF1_MASK>
      </TIFR1>
      <TIFR0>
        <IO_ADDR>$15</IO_ADDR>
        <MEM_ADDR>$35</MEM_ADDR>
        <TOV0_MASK>0x01</TOV0_MASK>
        <OCF0A_MASK>0x02</OCF0A_MASK>
        <OCF0B_MASK>0x04</OCF0B_MASK>
      </TIFR0>
      <PORTE>
        <IO_ADDR>$0E</IO_ADDR>
        <MEM_ADDR>$2E</MEM_ADDR>
        <PORTE0_MASK>0x01</PORTE0_MASK>
        <PORTE1_MASK>0x02</PORTE1_MASK>
        <PORTE2_MASK>0x04</PORTE2_MASK>
        <PORTE3_MASK>0x08</PORTE3_MASK>
        <PORTE4_MASK>0x10</PORTE4_MASK>
        <PORTE5_MASK>0x20</PORTE5_MASK>
        <PORTE6_MASK>0x40</PORTE6_MASK>
        <PORTE7_MASK>0x80</PORTE7_MASK>
      </PORTE>
      <DDRE>
        <IO_ADDR>$0D</IO_ADDR>
        <MEM_ADDR>$2D</MEM_ADDR>
        <DDE0_MASK>0x01</DDE0_MASK>
        <DDE1_MASK>0x02</DDE1_MASK>
        <DDE2_MASK>0x04</DDE2_MASK>
        <DDE3_MASK>0x08</DDE3_MASK>
        <DDE4_MASK>0x10</DDE4_MASK>
        <DDE5_MASK>0x20</DDE5_MASK>
        <DDE6_MASK>0x40</DDE6_MASK>
        <DDE7_MASK>0x80</DDE7_MASK>
      </DDRE>
      <PINE>
        <IO_ADDR>$0C</IO_ADDR>
        <MEM_ADDR>$2C</MEM_ADDR>
        <PINE0_MASK>0x01</PINE0_MASK>
        <PINE1_MASK>0x02</PINE1_MASK>
        <PINE2_MASK>0x04</PINE2_MASK>
        <PINE3_MASK>0x08</PINE3_MASK>
        <PINE4_MASK>0x10</PINE4_MASK>
        <PINE5_MASK>0x20</PINE5_MASK>
        <PINE6_MASK>0x40</PINE6_MASK>
        <PINE7_MASK>0x80</PINE7_MASK>
      </PINE>
      <PORTD>
        <IO_ADDR>$0B</IO_ADDR>
        <MEM_ADDR>$2B</MEM_ADDR>
        <PORTD0_MASK>0x01</PORTD0_MASK>
        <PORTD1_MASK>0x02</PORTD1_MASK>
        <PORTD2_MASK>0x04</PORTD2_MASK>
        <PORTD3_MASK>0x08</PORTD3_MASK>
        <PORTD4_MASK>0x10</PORTD4_MASK>
        <PORTD5_MASK>0x20</PORTD5_MASK>
        <PORTD6_MASK>0x40</PORTD6_MASK>
        <PORTD7_MASK>0x80</PORTD7_MASK>
      </PORTD>
      <DDRD>
        <IO_ADDR>$0A</IO_ADDR>
        <MEM_ADDR>$2A</MEM_ADDR>
        <DDD0_MASK>0x01</DDD0_MASK>
        <DDD1_MASK>0x02</DDD1_MASK>
        <DDD2_MASK>0x04</DDD2_MASK>
        <DDD3_MASK>0x08</DDD3_MASK>
        <DDD4_MASK>0x10</DDD4_MASK>
        <DDD5_MASK>0x20</DDD5_MASK>
        <DDD6_MASK>0x40</DDD6_MASK>
        <DDD7_MASK>0x80</DDD7_MASK>
      </DDRD>
      <PIND>
        <IO_ADDR>$09</IO_ADDR>
        <MEM_ADDR>$29</MEM_ADDR>
        <PIND0_MASK>0x01</PIND0_MASK>
        <PIND1_MASK>0x02</PIND1_MASK>
        <PIND2_MASK>0x04</PIND2_MASK>
        <PIND3_MASK>0x08</PIND3_MASK>
        <PIND4_MASK>0x10</PIND4_MASK>
        <PIND5_MASK>0x20</PIND5_MASK>
        <PIND6_MASK>0x40</PIND6_MASK>
        <PIND7_MASK>0x80</PIND7_MASK>
      </PIND>
      <PORTC>
        <IO_ADDR>$08</IO_ADDR>
        <MEM_ADDR>$28</MEM_ADDR>
        <PORTC0_MASK>0x01</PORTC0_MASK>
        <PORTC1_MASK>0x02</PORTC1_MASK>
        <PORTC2_MASK>0x04</PORTC2_MASK>
        <PORTC3_MASK>0x08</PORTC3_MASK>
        <PORTC4_MASK>0x10</PORTC4_MASK>
        <PORTC5_MASK>0x20</PORTC5_MASK>
        <PORTC6_MASK>0x40</PORTC6_MASK>
        <PORTC7_MASK>0x80</PORTC7_MASK>
      </PORTC>
      <DDRC>
        <IO_ADDR>$07</IO_ADDR>
        <MEM_ADDR>$27</MEM_ADDR>
        <DDC0_MASK>0x01</DDC0_MASK>
        <DDC1_MASK>0x02</DDC1_MASK>
        <DDC2_MASK>0x04</DDC2_MASK>
        <DDC3_MASK>0x08</DDC3_MASK>
        <DDC4_MASK>0x10</DDC4_MASK>
        <DDC5_MASK>0x20</DDC5_MASK>
        <DDC6_MASK>0x40</DDC6_MASK>
        <DDC7_MASK>0x80</DDC7_MASK>
      </DDRC>
      <PINC>
        <IO_ADDR>$06</IO_ADDR>
        <MEM_ADDR>$26</MEM_ADDR>
        <PINC0_MASK>0x01</PINC0_MASK>
        <PINC1_MASK>0x02</PINC1_MASK>
        <PINC2_MASK>0x04</PINC2_MASK>
        <PINC3_MASK>0x08</PINC3_MASK>
        <PINC4_MASK>0x10</PINC4_MASK>
        <PINC5_MASK>0x20</PINC5_MASK>
        <PINC6_MASK>0x40</PINC6_MASK>
        <PINC7_MASK>0x80</PINC7_MASK>
      </PINC>
      <PORTB>
        <IO_ADDR>$05</IO_ADDR>
        <MEM_ADDR>$25</MEM_ADDR>
        <PORTB0_MASK>0x01</PORTB0_MASK>
        <PORTB1_MASK>0x02</PORTB1_MASK>
        <PORTB2_MASK>0x04</PORTB2_MASK>
        <PORTB3_MASK>0x08</PORTB3_MASK>
        <PORTB4_MASK>0x10</PORTB4_MASK>
        <PORTB5_MASK>0x20</PORTB5_MASK>
        <PORTB6_MASK>0x40</PORTB6_MASK>
        <PORTB7_MASK>0x80</PORTB7_MASK>
      </PORTB>
      <DDRB>
        <IO_ADDR>$04</IO_ADDR>
        <MEM_ADDR>$24</MEM_ADDR>
        <DDB0_MASK>0x01</DDB0_MASK>
        <DDB1_MASK>0x02</DDB1_MASK>
        <DDB2_MASK>0x04</DDB2_MASK>
        <DDB3_MASK>0x08</DDB3_MASK>
        <DDB4_MASK>0x10</DDB4_MASK>
        <DDB5_MASK>0x20</DDB5_MASK>
        <DDB6_MASK>0x40</DDB6_MASK>
        <DDB7_MASK>0x80</DDB7_MASK>
      </DDRB>
      <PINB>
        <IO_ADDR>$03</IO_ADDR>
        <MEM_ADDR>$23</MEM_ADDR>
        <PINB0_MASK>0x01</PINB0_MASK>
        <PINB1_MASK>0x02</PINB1_MASK>
        <PINB2_MASK>0x04</PINB2_MASK>
        <PINB3_MASK>0x08</PINB3_MASK>
        <PINB4_MASK>0x10</PINB4_MASK>
        <PINB5_MASK>0x20</PINB5_MASK>
        <PINB6_MASK>0x40</PINB6_MASK>
        <PINB7_MASK>0x80</PINB7_MASK>
      </PINB>
      <PORTA>
        <IO_ADDR>$02</IO_ADDR>
        <MEM_ADDR>$22</MEM_ADDR>
        <PORTA0_MASK>0x01</PORTA0_MASK>
        <PORTA1_MASK>0x02</PORTA1_MASK>
        <PORTA2_MASK>0x04</PORTA2_MASK>
        <PORTA3_MASK>0x08</PORTA3_MASK>
        <PORTA4_MASK>0x10</PORTA4_MASK>
        <PORTA5_MASK>0x20</PORTA5_MASK>
        <PORTA6_MASK>0x40</PORTA6_MASK>
        <PORTA7_MASK>0x80</PORTA7_MASK>
      </PORTA>
      <DDRA>
        <IO_ADDR>$01</IO_ADDR>
        <MEM_ADDR>$21</MEM_ADDR>
        <DDA0_MASK>0x01</DDA0_MASK>
        <DDA1_MASK>0x02</DDA1_MASK>
        <DDA2_MASK>0x04</DDA2_MASK>
        <DDA3_MASK>0x08</DDA3_MASK>
        <DDA4_MASK>0x10</DDA4_MASK>
        <DDA5_MASK>0x20</DDA5_MASK>
        <DDA6_MASK>0x40</DDA6_MASK>
        <DDA7_MASK>0x80</DDA7_MASK>
      </DDRA>
      <PINA>
        <IO_ADDR>$00</IO_ADDR>
        <MEM_ADDR>$20</MEM_ADDR>
        <PINA0_MASK>0x01</PINA0_MASK>
        <PINA1_MASK>0x02</PINA1_MASK>
        <PINA2_MASK>0x04</PINA2_MASK>
        <PINA3_MASK>0x08</PINA3_MASK>
        <PINA4_MASK>0x10</PINA4_MASK>
        <PINA5_MASK>0x20</PINA5_MASK>
        <PINA6_MASK>0x40</PINA6_MASK>
        <PINA7_MASK>0x80</PINA7_MASK>
      </PINA>
    </IO_MEMORY>
    <BOOT_CONFIG>
      <NRWW_START_ADDR>$7000</NRWW_START_ADDR>
      <NRWW_STOP_ADDR>$7FFF</NRWW_STOP_ADDR>
      <RWW_START_ADDR>$0000</RWW_START_ADDR>
      <RWW_STOP_ADDR>$6FFF</RWW_STOP_ADDR>
      <PAGESIZE>128</PAGESIZE>
      <BOOTSZMODE1>
        <BOOTSIZE>512</BOOTSIZE>
        <PAGES>4</PAGES>
        <APPSTART>$0000</APPSTART>
        <BOOTSTART>$7E00</BOOTSTART>
        <BOOTRESET>$7E00</BOOTRESET>
      </BOOTSZMODE1>
      <BOOTSZMODE2>
        <BOOTSIZE>1024</BOOTSIZE>
        <PAGES>8</PAGES>
        <APPSTART>$0000</APPSTART>
        <BOOTSTART>$7C00</BOOTSTART>
        <BOOTRESET>$7C00</BOOTRESET>
      </BOOTSZMODE2>
      <BOOTSZMODE3>
        <BOOTSIZE>2048</BOOTSIZE>
        <PAGES>16</PAGES>
        <APPSTART>$0000</APPSTART>
        <BOOTSTART>$7800</BOOTSTART>
        <BOOTRESET>$7800</BOOTRESET>
      </BOOTSZMODE3>
      <BOOTSZMODE4>
        <BOOTSIZE>4096</BOOTSIZE>
        <PAGES>32</PAGES>
        <APPSTART>$0000</APPSTART>
        <BOOTSTART>$7000</BOOTSTART>
        <BOOTRESET>$7000</BOOTRESET>
      </BOOTSZMODE4>
    </BOOT_CONFIG>
  </MEMORY>
  <INTERRUPT_VECTOR>
    <NMB_VECTORS>38</NMB_VECTORS>
    <VECTOR1>
      <PROGRAM_ADDRESS>$000</PROGRAM_ADDRESS>
      <SOURCE>RESET</SOURCE>
      <DEFINITION>External Pin,Power-on Reset,Brown-out Reset,Watchdog Reset,and JTAG AVR Reset. See Datasheet.     </DEFINITION>
    </VECTOR1>
    <VECTOR2>
      <PROGRAM_ADDRESS>$002</PROGRAM_ADDRESS>
      <SOURCE>INT0</SOURCE>
      <DEFINITION>External Interrupt Request 0</DEFINITION>
    </VECTOR2>
    <VECTOR3>
      <PROGRAM_ADDRESS>$004</PROGRAM_ADDRESS>
      <SOURCE>INT1</SOURCE>
      <DEFINITION>External Interrupt Request 1</DEFINITION>
    </VECTOR3>
    <VECTOR4>
      <PROGRAM_ADDRESS>$006</PROGRAM_ADDRESS>
      <SOURCE>INT2</SOURCE>
      <DEFINITION>External Interrupt Request 2</DEFINITION>
    </VECTOR4>
    <VECTOR5>
      <PROGRAM_ADDRESS>$008</PROGRAM_ADDRESS>
      <SOURCE>INT3</SOURCE>
      <DEFINITION>External Interrupt Request 3</DEFINITION>
    </VECTOR5>
    <VECTOR6>
      <PROGRAM_ADDRESS>$00A</PROGRAM_ADDRESS>
      <SOURCE>PCINT0</SOURCE>
      <DEFINITION>Pin Change Interrupt Request 0</DEFINITION>
    </VECTOR6>
    <VECTOR7>
      <PROGRAM_ADDRESS>$00C</PROGRAM_ADDRESS>
      <SOURCE>PCINT1</SOURCE>
      <DEFINITION>Pin Change Interrupt Request 1</DEFINITION>
    </VECTOR7>
    <VECTOR8>
      <PROGRAM_ADDRESS>$00E</PROGRAM_ADDRESS>
      <SOURCE>PCINT2</SOURCE>
      <DEFINITION>Pin Change Interrupt Request 2</DEFINITION>
    </VECTOR8>
    <VECTOR9>
      <PROGRAM_ADDRESS>$010</PROGRAM_ADDRESS>
      <SOURCE>WDT</SOURCE>
      <DEFINITION>Watchdog Time-out Interrupt</DEFINITION>
    </VECTOR9>
    <VECTOR10>
      <PROGRAM_ADDRESS>$012</PROGRAM_ADDRESS>
      <SOURCE>TIMER2_COMPA</SOURCE>
      <DEFINITION>Timer/Counter2 Compare Match A</DEFINITION>
    </VECTOR10>
    <VECTOR11>
      <PROGRAM_ADDRESS>$014</PROGRAM_ADDRESS>
      <SOURCE>TIMER2_COMPB</SOURCE>
      <DEFINITION>Timer/Counter2 Compare Match B</DEFINITION>
    </VECTOR11>
    <VECTOR12>
      <PROGRAM_ADDRESS>$016</PROGRAM_ADDRESS>
      <SOURCE>TIMER2_OVF</SOURCE>
      <DEFINITION>Timer/Counter2 Overflow</DEFINITION>
    </VECTOR12>
    <VECTOR13>
      <PROGRAM_ADDRESS>$018</PROGRAM_ADDRESS>
      <SOURCE>TIMER1_CAPT</SOURCE>
      <DEFINITION>Timer/Counter1 Capture Event</DEFINITION>
    </VECTOR13>
    <VECTOR14>
      <PROGRAM_ADDRESS>$01A</PROGRAM_ADDRESS>
      <SOURCE>TIMER1_COMPA</SOURCE>
      <DEFINITION>Timer/Counter1 Compare Match A</DEFINITION>
    </VECTOR14>
    <VECTOR15>
      <PROGRAM_ADDRESS>$01C</PROGRAM_ADDRESS>
      <SOURCE>TIMER1_COMPB</SOURCE>
      <DEFINITION>Timer/Counter1 Compare Match B</DEFINITION>
    </VECTOR15>
    <VECTOR16>
      <PROGRAM_ADDRESS>$01E</PROGRAM_ADDRESS>
      <SOURCE>TIMER1_OVF</SOURCE>
      <DEFINITION>Timer/Counter1 Overflow</DEFINITION>
    </VECTOR16>
    <VECTOR17>
      <PROGRAM_ADDRESS>$020</PROGRAM_ADDRESS>
      <SOURCE>TIMER0_COMPA</SOURCE>
      <DEFINITION>Timer/Counter0 Compare Match A</DEFINITION>
    </VECTOR17>
    <VECTOR18>
      <PROGRAM_ADDRESS>$022</PROGRAM_ADDRESS>
      <SOURCE>TIMER0_COMPB</SOURCE>
      <DEFINITION>Timer/Counter0 Compare Match B</DEFINITION>
    </VECTOR18>
    <VECTOR19>
      <PROGRAM_ADDRESS>$024</PROGRAM_ADDRESS>
      <SOURCE>TIMER0_OVF</SOURCE>
      <DEFINITION>Timer/Counter0 Overflow</DEFINITION>
    </VECTOR19>
    <VECTOR20>
      <PROGRAM_ADDRESS>$026</PROGRAM_ADDRESS>
      <SOURCE>SPI_STC</SOURCE>
      <DEFINITION>SPI Serial Transfer Complete</DEFINITION>
    </VECTOR20>
    <VECTOR21>
      <PROGRAM_ADDRESS>$028</PROGRAM_ADDRESS>
      <SOURCE>USART0_RX</SOURCE>
      <DEFINITION>USART0, Rx Complete</DEFINITION>
    </VECTOR21>
    <VECTOR22>
      <PROGRAM_ADDRESS>$02A</PROGRAM_ADDRESS>
      <SOURCE>USART0_UDRE</SOURCE>
      <DEFINITION>USART0 Data register Empty</DEFINITION>
    </VECTOR22>
    <VECTOR23>
      <PROGRAM_ADDRESS>$02C</PROGRAM_ADDRESS>
      <SOURCE>USART0_TX</SOURCE>
      <DEFINITION>USART0, Tx Complete</DEFINITION>
    </VECTOR23>
    <VECTOR24>
      <PROGRAM_ADDRESS>$02E</PROGRAM_ADDRESS>
      <SOURCE>SUPPLY_MON</SOURCE>
      <DEFINITION>Supply Monitor Interruption</DEFINITION>
    </VECTOR24>
    <VECTOR25>
      <PROGRAM_ADDRESS>$030</PROGRAM_ADDRESS>
      <SOURCE>RFU</SOURCE>
      <DEFINITION>Reserved for Future Use</DEFINITION>
    </VECTOR25>
    <VECTOR26>
      <PROGRAM_ADDRESS>$032</PROGRAM_ADDRESS>
      <SOURCE>EE_READY</SOURCE>
      <DEFINITION>EEPROM Ready</DEFINITION>
    </VECTOR26>
    <VECTOR27>
      <PROGRAM_ADDRESS>$034</PROGRAM_ADDRESS>
      <SOURCE>TWI</SOURCE>
      <DEFINITION>2-wire Serial Interface</DEFINITION>
    </VECTOR27>
    <VECTOR28>
      <PROGRAM_ADDRESS>$036</PROGRAM_ADDRESS>
      <SOURCE>SPM_READY</SOURCE>
      <DEFINITION>Store Program Memory Read</DEFINITION>
    </VECTOR28>
    <VECTOR29>
      <PROGRAM_ADDRESS>$038</PROGRAM_ADDRESS>
      <SOURCE>KEYBOARD</SOURCE>
      <DEFINITION>Keyboard Input Changed</DEFINITION>
    </VECTOR29>
    <VECTOR30>
      <PROGRAM_ADDRESS>$03A</PROGRAM_ADDRESS>
      <SOURCE>AES_Operation</SOURCE>
      <DEFINITION>AES Block Operation Ended</DEFINITION>
    </VECTOR30>
    <VECTOR31>
      <PROGRAM_ADDRESS>$03C</PROGRAM_ADDRESS>
      <SOURCE>HSSPI</SOURCE>
      <DEFINITION>High-Speed SPI Interruption</DEFINITION>
    </VECTOR31>
    <VECTOR32>
      <PROGRAM_ADDRESS>$03E</PROGRAM_ADDRESS>
      <SOURCE>USB_Endpoint</SOURCE>
      <DEFINITION>USB Endpoint Related Interruption</DEFINITION>
    </VECTOR32>
    <VECTOR33>
      <PROGRAM_ADDRESS>$040</PROGRAM_ADDRESS>
      <SOURCE>USB_Protocol</SOURCE>
      <DEFINITION>USB Protocol Related Interruption</DEFINITION>
    </VECTOR33>
    <VECTOR34>
      <PROGRAM_ADDRESS>$042</PROGRAM_ADDRESS>
      <SOURCE>SCIB</SOURCE>
      <DEFINITION>Smart Card Reader Interface</DEFINITION>
    </VECTOR34>
    <VECTOR35>
      <PROGRAM_ADDRESS>$044</PROGRAM_ADDRESS>
      <SOURCE>USBHost_Control</SOURCE>
      <DEFINITION>USB Host Controller Interrupt</DEFINITION>
    </VECTOR35>
    <VECTOR36>
      <PROGRAM_ADDRESS>$046</PROGRAM_ADDRESS>
      <SOURCE>USBHost_Pipe</SOURCE>
      <DEFINITION>USB Host Pipe Interrupt</DEFINITION>
    </VECTOR36>
    <VECTOR37>
      <PROGRAM_ADDRESS>$048</PROGRAM_ADDRESS>
      <SOURCE>CPRES</SOURCE>
      <DEFINITION>Card Presence Detection</DEFINITION>
    </VECTOR37>
    <VECTOR38>
      <PROGRAM_ADDRESS>$04A</PROGRAM_ADDRESS>
      <SOURCE>PCINT3</SOURCE>
      <DEFINITION>Pin Change Interrupt Request 3</DEFINITION>
    </VECTOR38>
  </INTERRUPT_VECTOR>
  <FUSE>
    <LIST>[LOW:HIGH:EXTENDED]</LIST>
    <ID />
    <ICON />
    <TEXT />
    <LOW>
      <NMB_FUSE_BITS>5</NMB_FUSE_BITS>
      <FUSE6>
        <NAME>CKOUT</NAME>
        <TEXT>Clock output</TEXT>
        <DEFAULT>1</DEFAULT>
      </FUSE6>
      <FUSE5>
        <NAME>SUT1</NAME>
        <TEXT>Select start-up time</TEXT>
        <DEFAULT>1</DEFAULT>
      </FUSE5>
      <FUSE4>
        <NAME>SUT0</NAME>
        <TEXT>Select start-up time</TEXT>
        <DEFAULT>0</DEFAULT>
      </FUSE4>
      <FUSE3>
        <NAME>CKSEL3</NAME>
        <TEXT>Clock Selection</TEXT>
        <DEFAULT>1</DEFAULT>
      </FUSE3>
      <FUSE0>
        <NAME>CKSEL0</NAME>
        <TEXT>Clock Selection</TEXT>
        <DEFAULT>1</DEFAULT>
      </FUSE0>
      <NMB_TEXT>12</NMB_TEXT>
      <TEXT1>
        <MASK>0x39</MASK>
        <VALUE>0x08</VALUE>
        <TEXT>Low Power Crystal Osc., Start-up time: 14 CK + 4.1 ms [CKSEL=10 SUT=00]</TEXT>
      </TEXT1>
      <TEXT2>
        <MASK>0x39</MASK>
        <VALUE>0x18</VALUE>
        <TEXT>Low Power Crystal Osc., Start-up time: 14 CK + 65 ms [CKSEL=10 SUT=01]</TEXT>
      </TEXT2>
      <TEXT3>
        <MASK>0x39</MASK>
        <VALUE>0x28</VALUE>
        <TEXT>Low Power Crystal Osc., Start-up time: 14 CK [CKSEL=10 SUT=10]</TEXT>
      </TEXT3>
      <TEXT4>
        <MASK>0x39</MASK>
        <VALUE>0x38</VALUE>
        <TEXT>Low Power Crystal Osc., Start-up time: 14 CK + 4.1 ms [CKSEL=10 SUT=11]</TEXT>
      </TEXT4>
      <TEXT5>
        <MASK>0x39</MASK>
        <VALUE>0x09</VALUE>
        <TEXT>Low Power Crystal Osc., Start-up time: 14 CK + 65 ms [CKSEL=11 SUT=00]</TEXT>
      </TEXT5>
      <TEXT6>
        <MASK>0x39</MASK>
        <VALUE>0x19</VALUE>
        <TEXT>Low Power Crystal Osc., Start-up time: 14 CK [CKSEL=11 SUT=01]</TEXT>
      </TEXT6>
      <TEXT7>
        <MASK>0x39</MASK>
        <VALUE>0x29</VALUE>
        <TEXT>Low Power Crystal Osc., Start-up time: 14 CK + 4.1 ms [CKSEL=11 SUT=10]</TEXT>
      </TEXT7>
      <TEXT8>
        <MASK>0x39</MASK>
        <VALUE>0x39</VALUE>
        <TEXT>Low Power Crystal Osc., Start-up time: 14 CK + 65 ms [CKSEL=11 SUT=11]</TEXT>
      </TEXT8>
      <TEXT9>
        <MASK>0x38</MASK>
        <VALUE>0x08</VALUE>
        <TEXT>External Clock, Start-up time: 14 CK [CKSEL=1X SUT=00]</TEXT>
      </TEXT9>
      <TEXT10>
        <MASK>0x38</MASK>
        <VALUE>0x18</VALUE>
        <TEXT>External Clock, Start-up time: 14 CK + 4.1 ms [CKSEL=1X SUT=01]</TEXT>
      </TEXT10>
      <TEXT11>
        <MASK>0x38</MASK>
        <VALUE>0x08</VALUE>
        <TEXT>External Clock, Start-up time: 14 CK + 65 ms [CKSEL=1X SUT=10]</TEXT>
      </TEXT11>
      <TEXT12>
        <MASK>0x40</MASK>
        <VALUE>0x00</VALUE>
        <TEXT>Clock output on PORTB1; [CKOUT=0]</TEXT>
      </TEXT12>
    </LOW>
    <HIGH>
      <NMB_FUSE_BITS>8</NMB_FUSE_BITS>
      <FUSE7>
        <NAME>OCDEN</NAME>
        <TEXT>Enable OCD</TEXT>
        <DEFAULT>1</DEFAULT>
      </FUSE7>
      <FUSE6>
        <NAME>JTAGEN</NAME>
        <TEXT>Enable JTAG</TEXT>
        <DEFAULT>0</DEFAULT>
      </FUSE6>
      <FUSE5>
        <NAME>SPIEN</NAME>
        <TEXT>Enable Serial programming and Data Downloading</TEXT>
        <DEFAULT>0</DEFAULT>
      </FUSE5>
      <FUSE4>
        <NAME>WDTON</NAME>
        <TEXT>Watchdog timer always on</TEXT>
        <DEFAULT>1</DEFAULT>
      </FUSE4>
      <FUSE3>
        <NAME>EESAVE</NAME>
        <TEXT>EEPROM memory is preserved through chip erase</TEXT>
        <DEFAULT>1</DEFAULT>
      </FUSE3>
      <FUSE2>
        <NAME>BOOTSZ1</NAME>
        <TEXT>Select Boot Size</TEXT>
        <DEFAULT>0</DEFAULT>
      </FUSE2>
      <FUSE1>
        <NAME>BOOTSZ0</NAME>
        <TEXT>Select Boot Size</TEXT>
        <DEFAULT>0</DEFAULT>
      </FUSE1>
      <FUSE0>
        <NAME>BOOTRST</NAME>
        <TEXT>Select Reset Vector</TEXT>
        <DEFAULT>1</DEFAULT>
      </FUSE0>
      <NMB_TEXT>10</NMB_TEXT>
      <TEXT1>
        <MASK>0x80</MASK>
        <VALUE>0x00</VALUE>
        <TEXT>On-Chip Debug Enabled; [OCDEN=0]</TEXT>
      </TEXT1>
      <TEXT2>
        <MASK>0x40</MASK>
        <VALUE>0x00</VALUE>
        <TEXT>JTAG Interface Enabled; [JTAGEN=0]</TEXT>
      </TEXT2>
      <TEXT3>
        <MASK>0x20</MASK>
        <VALUE>0x00</VALUE>
        <TEXT>Serial program downloading (SPI) enabled; [SPIEN=0]</TEXT>
      </TEXT3>
      <TEXT4>
        <MASK>0x10</MASK>
        <VALUE>0x00</VALUE>
        <TEXT>Watchdog timer always on; [WDTON=0]</TEXT>
      </TEXT4>
      <TEXT5>
        <MASK>0x08</MASK>
        <VALUE>0x00</VALUE>
        <TEXT>Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]</TEXT>
      </TEXT5>
      <TEXT6>
        <MASK>0x06</MASK>
        <VALUE>0x06</VALUE>
        <TEXT>Boot Flash section size=512 words Boot start address=$7E00; [BOOTSZ=11]</TEXT>
      </TEXT6>
      <TEXT7>
        <MASK>0x06</MASK>
        <VALUE>0x04</VALUE>
        <TEXT>Boot Flash section size=1024 words Boot start address=$7C00; [BOOTSZ=10]</TEXT>
      </TEXT7>
      <TEXT8>
        <MASK>0x06</MASK>
        <VALUE>0x02</VALUE>
        <TEXT>Boot Flash section size=2048 words Boot start address=$7800; [BOOTSZ=01]</TEXT>
      </TEXT8>
      <TEXT9>
        <MASK>0x06</MASK>
        <VALUE>0x00</VALUE>
        <TEXT>Boot Flash section size=4096 words Boot start address=$7000; [BOOTSZ=00] ; default value</TEXT>
      </TEXT9>
      <TEXT10>
        <MASK>0x01</MASK>
        <VALUE>0x00</VALUE>
        <TEXT>Boot Reset vector Enabled (default address=$0000); [BOOTRST=0]</TEXT>
      </TEXT10>
    </HIGH>
    <EXTENDED>
      <NMB_FUSE_BITS>1</NMB_FUSE_BITS>
      <FUSE0>
        <NAME>BODENABLE</NAME>
        <TEXT>Brown-out Detector Enable Signal</TEXT>
        <DEFAULT>1</DEFAULT>
      </FUSE0>
      <NMB_TEXT>2</NMB_TEXT>
      <TEXT1>
        <MASK>0x01</MASK>
        <VALUE>0x01</VALUE>
        <TEXT>Brown-out detection disabled [BODENABLE=0]</TEXT>
      </TEXT1>
      <TEXT2>
        <MASK>0x01</MASK>
        <VALUE>0x00</VALUE>
        <TEXT>Brown-out detection enabled [BODENABLE=1]</TEXT>
      </TEXT2>
    </EXTENDED>
  </FUSE>
  <LOCKBIT>
    <ICON />
    <ID />
    <TEXT>[LB1 = 1 :  LB2 = 1] No memory lock features enabled. [LB1 = 0 :  LB2 = 1] Further programming of Flash and EEPROM is enabled. [LB1 = 0 :  LB2 = 0] Same as previous, but verify is also disabled</TEXT>
    <NMB_LOCK_BITS>6</NMB_LOCK_BITS>
    <NMB_TEXT>11</NMB_TEXT>
    <TEXT1>
      <MASK>0x03</MASK>
      <VALUE>0x03</VALUE>
      <TEXT>Mode 1: No memory lock features enabled</TEXT>
    </TEXT1>
    <TEXT2>
      <MASK>0x03</MASK>
      <VALUE>0x02</VALUE>
      <TEXT>Mode 2: Further programming disabled</TEXT>
    </TEXT2>
    <TEXT3>
      <MASK>0x03</MASK>
      <VALUE>0x00</VALUE>
      <TEXT>Mode 3: Further programming and verification disabled</TEXT>
    </TEXT3>
    <TEXT4>
      <MASK>0x0C</MASK>
      <VALUE>0x0C</VALUE>
      <TEXT>Application Protection Mode 1: No lock on SPM and LPM in Application Section</TEXT>
    </TEXT4>
    <TEXT5>
      <MASK>0x0C</MASK>
      <VALUE>0x08</VALUE>
      <TEXT>Application Protection Mode 2: SPM prohibited in Application Section</TEXT>
    </TEXT5>
    <TEXT6>
      <MASK>0x0C</MASK>
      <VALUE>0x00</VALUE>
      <TEXT>Application Protection Mode 3: LPM and SPM prohibited in Application Section</TEXT>
    </TEXT6>
    <TEXT7>
      <MASK>0x0C</MASK>
      <VALUE>0x04</VALUE>
      <TEXT>Application Protection Mode 4: LPM prohibited in Application Section</TEXT>
    </TEXT7>
    <TEXT8>
      <MASK>0x30</MASK>
      <VALUE>0x30</VALUE>
      <TEXT>Boot Loader Protection Mode 1: No lock on SPM and LPM in Boot Loader Section</TEXT>
    </TEXT8>
    <TEXT9>
      <MASK>0x30</MASK>
      <VALUE>0x20</VALUE>
      <TEXT>Boot Loader Protection Mode 2: SPM prohibited in Boot Loader Section</TEXT>
    </TEXT9>
    <TEXT10>
      <MASK>0x30</MASK>
      <VALUE>0x00</VALUE>
      <TEXT>Boot Loader Protection Mode 3: LPM and SPM prohibited in Boot Loader Section</TEXT>
    </TEXT10>
    <TEXT11>
      <MASK>0x30</MASK>
      <VALUE>0x10</VALUE>
      <TEXT>Boot Loader Protection Mode 4: LPM prohibited in Boot Loader Section</TEXT>
    </TEXT11>
    <LOCKBIT0>
      <NAME>LB1</NAME>
      <TEXT>Lock bit</TEXT>
    </LOCKBIT0>
    <LOCKBIT1>
      <NAME>LB2</NAME>
      <TEXT>Lock bit</TEXT>
    </LOCKBIT1>
    <LOCKBIT2>
      <NAME>BLB01</NAME>
      <TEXT>Boot Lock bit</TEXT>
    </LOCKBIT2>
    <LOCKBIT3>
      <NAME>BLB02</NAME>
      <TEXT>Boot Lock bit</TEXT>
    </LOCKBIT3>
    <LOCKBIT4>
      <NAME>BLB11</NAME>
      <TEXT>Boot lock bit</TEXT>
    </LOCKBIT4>
    <LOCKBIT5>
      <NAME>BLB12</NAME>
      <TEXT>Boot lock bit</TEXT>
    </LOCKBIT5>
  </LOCKBIT>
  <PACKAGE>
    <PACKAGES>[TQFP]</PACKAGES>
    <TQFP>
      <NMB_PIN>44</NMB_PIN>
      <PIN1>
        <NAME>[PB5:MOSI:PCINT13]</NAME>
        <TEXT>MOSI: SPI Master data output, slave data input for SPI channel. When the SPI is enabled as a slave, this pin is configured as an input regardless of the setting of DDB5. When the SPI is enabled as a master, the data direction of this pin is con-trolled by DDB5. When the pin is forced to be an input, the pull-up can still be controlled by the PORTB5 bit. See the description of the SPI port for further details.</TEXT>
      </PIN1>
      <PIN2>
        <NAME>[PB6:MISO:PCINT14]</NAME>
        <TEXT>MISO: Master data input, slave data output pin for SPI channel. When the SPI is enabled as a master, this pin is configured as an input regardless of the setting of DDB6. When the SPI is enabled as a slave, the data direction of this pin is controlled by DDB6. When the pin is forced to be an input, the pull-up can still be controlled by the PORTB6 bit. See the description of the SPI port for further details.</TEXT>
      </PIN2>
      <PIN3>
        <NAME>[PB7:SCK:PCINT15]</NAME>
        <TEXT>SCK: Master clock output, slave clock input pin for SPI channel. When the SPI is enabled as a slave, this pin is configured as an input regardless of the setting of DDB7. When the SPI is enabled as a master, the data direction of this pin is con-trolled by DDB7. When the pin is forced to be an input, the pull-up can still be controlled by the PORTB7 bit. See the description of the SPI port for further details.</TEXT>
      </PIN3>
      <PIN4>
        <NAME>['RESET]</NAME>
        <TEXT />
      </PIN4>
      <PIN5>
        <NAME>[VCC]</NAME>
        <TEXT />
      </PIN5>
      <PIN6>
        <NAME>[GND]</NAME>
        <TEXT />
      </PIN6>
      <PIN7>
        <NAME>[XTAL2]</NAME>
        <TEXT />
      </PIN7>
      <PIN8>
        <NAME>[XTAL1]</NAME>
        <TEXT />
      </PIN8>
      <PIN9>
        <NAME>[PD0:RXD:PCINT24]</NAME>
        <TEXT>Receive Data (data input pin for the UART). When the UART Receiver is enabled, this pin is configured as an input, regard-less of the value of DDD0. When the UART forces this pin to be an input, a logical “1” in PORTD0 will turn on the internal pull-up.</TEXT>
      </PIN9>
      <PIN10>
        <NAME>[PD1:TXD:PCINT25]</NAME>
        <TEXT>Transmit Data (data output pin for the UART). When the UART Transmitter is enabled, this pin is configured as an output, regardless of the value of DDD1.</TEXT>
      </PIN10>
      <PIN11>
        <NAME>[PD2:INT0:RDX1:PCINT26]</NAME>
        <TEXT>INT0, External Interrupt source 0: The PD2 pin can serve as an external interrupt source to the MCU. See the interrupt description for further details and how to enable the source.</TEXT>
      </PIN11>
      <PIN12>
        <NAME>[PD3:INT1:TXD1:PCINT27]</NAME>
        <TEXT>INT1, External Interrupt source 1: The PD3 pin can serve as an external interrupt source to the MCU. See the interrupt description for further details and how to enable the source.</TEXT>
      </PIN12>
      <PIN13>
        <NAME>[PD4:OC1B:XCK1:PCINT28]</NAME>
        <TEXT>OC1B, Output compare matchB output: The PD4 pin can serve as an external output for the Timer/Counter1 output com-pareB. The pin has to be configured as an output (DDD4 set [one]) to serve this function. See the timer description on how to enable this function. The OC1B pin is also the output pin for the PWM mode timer function.</TEXT>
      </PIN13>
      <PIN14>
        <NAME>[PD5:OC1A:PCINT29]</NAME>
        <TEXT>OC1A, Output compare matchA output: The PD5 pin can serve as an external output for the Timer/Counter1 output com-pareA. The pin has to be configured as an output (DDD5 set [one]) to serve this function. See the timer description on how to enable this function. The OC1A pin is also the output pin for the PWM mode timer function.</TEXT>
      </PIN14>
      <PIN15>
        <NAME>[PD6:ICP:OC2B:PCINT30]</NAME>
        <TEXT>ICP – Input Capture Pin: The PD6 pin can act as an input capture pin for Timer/Counter1. The pin has to be configured as an input (DDD6 cleared [zero]) to serve this function. See the timer description on how to enable this function.</TEXT>
      </PIN15>
      <PIN16>
        <NAME>[PD7:OC2A:PCINT31]</NAME>
        <TEXT>OC2, Timer/Counter2 output compare match output: The PD7 pin can serve as an external output for the Timer/Counter2 output compare. The pin has to be configured as an output (DDD7 set [one]) to serve this function. See the timer descrip-tion on how to enable this function. The OC2 pin is also the output pin for the PWM mode timer function.</TEXT>
      </PIN16>
      <PIN17>
        <NAME>[VCC]</NAME>
        <TEXT />
      </PIN17>
      <PIN18>
        <NAME>[GND]</NAME>
        <TEXT />
      </PIN18>
      <PIN19>
        <NAME>[PC0:SCL:PCINT16]</NAME>
        <TEXT>SCL, 2-wire Serial Interface Clock: When the TWEN bit in TWCR is set (one) to enable the 2-wire Serial Interface, pin PC1 is disconnected from the port and becomes the Serial Clock I/O pin for the 2-wire Serial Interface. In this mode, there is a spike filter on the pin to capture spikes shorter than 50 ns on the input signal.</TEXT>
      </PIN19>
      <PIN20>
        <NAME>[PC1:SDA:PCINT17]</NAME>
        <TEXT>SDA, 2-wire Serial Bus Data: When the TWEN bit in TWCR is set (one) to enable the 2-wire Serial Interface, pin PC1 is dis-connected from the port and becomes the Serial Data I/O pin for the 2-wire Serial Interface. In this mode, there is a spike filter on the pin to capture spikes shorter than 50 ns on the input signal, and the pin is driven by an open collector driver with slew rate limitation.</TEXT>
      </PIN20>
      <PIN21>
        <NAME>[PC2:TCK:PCINT18]</NAME>
        <TEXT>TCK, JTAG Test Clock: JTAG operation is synchronous to TCK. When the JTAG interface is enabled, this pin can not be used as an I/O pin. Refer to the section “JTAG Interface and the On-Chip Debug System” on page 130 for details on operation of the JTAG interface</TEXT>
      </PIN21>
      <PIN22>
        <NAME>[PC3:TMS:PCINT19]</NAME>
        <TEXT>TMS, JTAG Test Mode Select: This pin is used for navigating through the TAP-controller state machine. When the JTAG interface is enabled, this pin can not be used as an I/O pin. Refer to the section “JTAG Interface and the On-Chip Debug System” on page 130 for details on operation of the JTAG interface.</TEXT>
      </PIN22>
      <PIN23>
        <NAME>[PC4:TDO:PCINT20]</NAME>
        <TEXT>TDO, JTAG Test Data Out: Serial output data from Instruction register or Data Register. When the JTAG interface is enabled, this pin can not be used as an I/O pin. Refer to the section “JTAG Interface and the On-Chip Debug System” on page 130 for details on operation of the JTAG interface.</TEXT>
      </PIN23>
      <PIN24>
        <NAME>[PC5:TDI:PCINT21]</NAME>
        <TEXT>TDI, JTAG Test Data In: Serial input data to be shifted in to the Instruction Register or Data Register (scan chains). When the JTAG interface is enabled, this pin can not be used as an I/O pin. Refer to the section “JTAG Interface and the On-Chip Debug System” on page 130 for details on operation of the JTAG interface.</TEXT>
      </PIN24>
      <PIN25>
        <NAME>[PC6:TOSC1:PCINT22]</NAME>
        <TEXT>TOSC1, Timer Oscillator pin 1: When the AS2 bit in ASSR is set (one) to enable asynchronous clocking of Timer/Counter1, pin PC6 is disconnected from the port, and becomes the input of the inverting oscillator amplifier. In this mode, a crystal oscillator is connected to this pin, and the pin can not be used as an I/O pin.</TEXT>
      </PIN25>
      <PIN26>
        <NAME>[PC7:TOSC2:PCINT23]</NAME>
        <TEXT>TOSC2, Timer Oscillator pin 2: When the AS2 bit in ASSR is set (one) to enable asynchronous clocking of Timer/Counter2, pin PC7 is disconnected from the port, and becomes the inverting output of the oscillator amplifier. In this mode, a crystal oscillator is connected to this pin, and the pin can not be used as an I/O pin.</TEXT>
      </PIN26>
      <PIN27>
        <NAME>[AVCC]</NAME>
        <TEXT />
      </PIN27>
      <PIN28>
        <NAME>[AGND]</NAME>
        <TEXT />
      </PIN28>
      <PIN29>
        <NAME>[AREF]</NAME>
        <TEXT />
      </PIN29>
      <PIN30>
        <NAME>[PA7:ADC7:PCINT7]</NAME>
        <TEXT />
      </PIN30>
      <PIN31>
        <NAME>[PA6:ADC6:PCINT6]</NAME>
        <TEXT />
      </PIN31>
      <PIN32>
        <NAME>[PA5:ADC5:PCINT5]</NAME>
        <TEXT />
      </PIN32>
      <PIN33>
        <NAME>[PA4:ADC4:PCINT4]</NAME>
        <TEXT />
      </PIN33>
      <PIN34>
        <NAME>[PA3:ADC3:PCINT3]</NAME>
        <TEXT />
      </PIN34>
      <PIN35>
        <NAME>[PA2:ADC2:PCINT2]</NAME>
        <TEXT />
      </PIN35>
      <PIN36>
        <NAME>[PA1:ADC1:PCINT1]</NAME>
        <TEXT />
      </PIN36>
      <PIN37>
        <NAME>[PA0:ADC0:PCINT0]</NAME>
        <TEXT />
      </PIN37>
      <PIN38>
        <NAME>[VCC]</NAME>
        <TEXT />
      </PIN38>
      <PIN39>
        <NAME>[GND]</NAME>
        <TEXT />
      </PIN39>
      <PIN40>
        <NAME>[PB0:XCK:T0:PCINT9]</NAME>
        <TEXT>T0, Timer/Counter0 counter source. See the timer description for further details. XCK, USART external clock. See the USART description for further details.</TEXT>
      </PIN40>
      <PIN41>
        <NAME>[PB1:T1:CLKO:PCINT9]</NAME>
        <TEXT>T1: Timer/Counter1 counter source. See the timer description for further details</TEXT>
      </PIN41>
      <PIN42>
        <NAME>[PB2:AIN0:INT2:PCINT10]</NAME>
        <TEXT>AIN0, Analog Comparator Positive Input. When configured as an input (DDB2 is cleared (zero)) and with the internal MOS pull up resistor switched off (PB2 is cleared (zero)), this pin also serves as the positive input of the on-chip analog compar-ator. During power down mode, the schmitt trigger of the digital input is disconnected if INT2 is not enabled. This allows analog signals which are close to V CC /2 to be present during power down without causing excessive power consumption. INT2, External Interrupt source 2: The PB2 pin can serve as an external interrupt source to the MCU. See “MCU Control and Status Register - MCUCSR” for further detail</TEXT>
      </PIN42>
      <PIN43>
        <NAME>[PB3:AIN1:OC0A:PCINT11]</NAME>
        <TEXT>AIN1, Analog Comparator Negative Input. When configured as an input (DDB3 is cleared (zero)) and with the internal MOS pull up resistor switched off (PB3 is cleared (zero)), this pin also serves as the negative input of the on-chip analog compar-ator. During power down mode, the schmitt trigger of the digital input is disconnected. This allows analog signals which are close to V CC /2 to be present during power down without causing excessive power consumption. OC0, Output compare match output: The PB3 pin can serve as an external output for the Timer/Counter0 compare match. The PB3 pin has to be configured as an output (DDB3 set (one)) to serve this function. See “8-bit Timers/Counters T/C0 and T/C2” for further details, and how to enable the output. The OC0 pin is also the output pin for the PWM mode timer funct</TEXT>
      </PIN43>
      <PIN44>
        <NAME>[PB4:'SS:OC0B:PCINT12]</NAME>
        <TEXT>SS: Slave port select input. When the SPI is enabled as a slave, this pin is configured as an input regardless of the setting of DDB4. As a slave, the SPI is activated when this pin is driven low. When the SPI is enabled as a master, the data direc-tion of this pin is controlled by DDB4. When the pin is forced to be an input, the pull-up can still be controlled by the PORTB4 bit. See the description of the SPI port for further details.</TEXT>
      </PIN44>
    </TQFP>
  </PACKAGE>
  <POWER>
    <CLOCK>8MHz</CLOCK>
    <TEMP>25C</TEMP>
    <ACTIVE>TBD</ACTIVE>
    <IDLE>TBD</IDLE>
    <POWER_DOWN>&lt;300uA</POWER_DOWN>
  </POWER>
  <CORE>
    <CORE_VERSION>V2E</CORE_VERSION>
    <ID>AVRSimCoreV2.SimCoreV2</ID>
    <NEW_INSTRUCTIONS>[]</NEW_INSTRUCTIONS>
    <INSTRUCTIONS_NOT_SUPPORTED>[]</INSTRUCTIONS_NOT_SUPPORTED>
    <RAMP_REGISTERS>[]</RAMP_REGISTERS>
    <GP_REG_FILE>
      <NMB_REG>32</NMB_REG>
      <START_ADDR>$00</START_ADDR>
      <X_REG_HIGH>$1B</X_REG_HIGH>
      <X_REG_LOW>$1A</X_REG_LOW>
      <Y_REG_HIGH>$1D</Y_REG_HIGH>
      <Y_REG_LOW>$1C</Y_REG_LOW>
      <Z_REG_HIGH>$1F</Z_REG_HIGH>
      <Z_REG_LOW>$1E</Z_REG_LOW>
    </GP_REG_FILE>
  </CORE>
  <PROGRAMMING>
    <ISPInterface>
      <FuseReadMask>0xff,0xdf</FuseReadMask>
      <FuseProgMask>0xff,0xdf</FuseProgMask>
      <FuseWarning>1,0x40,0x40,WARNING! These fuse settings will disable the JTAG interface!</FuseWarning>
      <FuseWarning>1,0x20,0x20,WARNING! These fuse settings will disable the ISP interface!</FuseWarning>
    </ISPInterface>
    <HVInterface>
      <FuseWarning>1,0x40,0x40,WARNING! These fuse settings will disable the JTAG interface!</FuseWarning>
      <FuseWarning>1,0x20,0x20,WARNING! These fuse settings will disable the ISP interface!</FuseWarning>
    </HVInterface>
    <JTAGInterface>
      <FuseWarning>1,0x40,0x40,WARNING! These fuse settings will disable the JTAG interface!</FuseWarning>
      <FuseWarning>1,0x20,0x20,WARNING! These fuse settings will disable the ISP interface!</FuseWarning>
    </JTAGInterface>
    <OscCal>
      <OCEntry>0x00,8.0 MHz</OCEntry>
    </OscCal>
    <FlashPageSize>128</FlashPageSize>
    <EepromPageSize>4</EepromPageSize>
  </PROGRAMMING>
  <IO_MODULE>
    <MODULE_LIST>[USB_DEVICE:USART0:PORTA:PORTB:PORTC:PORTD:TIMER_COUNTER_0:TIMER_COUNTER_2:WATCHDOG:JTAG:BOOT_LOAD:EXTERNAL_INTERRUPT:SCIB:TIMER_COUNTER_1:EEPROM:TWI:HSSPI:CPU:SPI:AES:KB:RNG:USB_HOST:LED:Supply_Monitor:PORTE]</MODULE_LIST>
    <USB_DEVICE>
      <LIST>[USBCR:USBPI:USBPIM:USBEI:USBEIM:USBENUM:USBCSEX:USBDBCEX:USBFCEX:USBRSTE:USBGS:USBFA:USBFNH:USBFNL:USBDMACS:USBDMADH:USBDMADL:USBDMAB]</LIST>
      <LINK>[USBFNH:USBFNL];[USBDMADH:USBDMADL]</LINK>
      <ICON>io_com.bmp</ICON>
      <ID>SCR_Usb_device_00</ID>
      <TEXT />
      <USBCR>
        <NAME>USBCR</NAME>
        <DESCRIPTION>USB Control Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E0</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>URMWU</NAME>
          <DESCRIPTION>USB Remote Wake-Up Signal Generation</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT5>
          <NAME>UPUC</NAME>
          <DESCRIPTION>Attachment pullup control</DESCRIPTION>
          <TEXT>1: Attachment pullup connected; 0: Attachment pullup disconnected</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT1>
          <NAME>USBE</NAME>
          <DESCRIPTION>USB Module enable</DESCRIPTION>
          <TEXT>Set to enable the module</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
      </USBCR>
      <USBPI>
        <NAME>USBPI</NAME>
        <DESCRIPTION>USB Protocol Interrupt Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E1</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT4>
          <NAME>FEURI</NAME>
          <DESCRIPTION>This bit indicates the end of the USB Bus Reset</DESCRIPTION>
          <TEXT>Not maskable interrupt</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>SOFI</NAME>
          <DESCRIPTION>Start Of Frame Interrupt</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>RMWUI</NAME>
          <DESCRIPTION>Remote Wake Up Interrupt</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>RESI</NAME>
          <DESCRIPTION>Resume Interrupt Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>SUSI</NAME>
          <DESCRIPTION>Suspend Interrupt Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBPI>
      <USBPIM>
        <NAME>USBPIM</NAME>
        <DESCRIPTION>USB Protocol Interrupt Mask Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E2</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT3>
          <NAME>SOFIM</NAME>
          <DESCRIPTION>Start Of Frame Interrupt Mask</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>RMWUIM</NAME>
          <DESCRIPTION>Remote Wake Up Interrupt Mask</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>RESIM</NAME>
          <DESCRIPTION>Resume Interrupt Mask</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>SUSIM</NAME>
          <DESCRIPTION>Suspend Interrupt Mask</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBPIM>
      <USBEI>
        <NAME>USBEI</NAME>
        <DESCRIPTION>USB Endpoint Interrupt Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E3</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>EP7I</NAME>
          <DESCRIPTION>Endpoint 7 Interrupt Flag</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>EP6I</NAME>
          <DESCRIPTION>Endpoint 6 Interrupt Flag</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>EP5I</NAME>
          <DESCRIPTION>Endpoint 5 Interrupt Flag</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>EP4I</NAME>
          <DESCRIPTION>Endpoint 4 Interrupt Flag</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>EP3I</NAME>
          <DESCRIPTION>Endpoint 3 Interrupt Flag</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>EP2I</NAME>
          <DESCRIPTION>Endpoint 2 Interrupt Flag</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>EP1I</NAME>
          <DESCRIPTION>Endpoint 1 Interrupt Flag</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>EP0I</NAME>
          <DESCRIPTION>Endpoint 0 Interrupt Flag</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBEI>
      <USBEIM>
        <NAME>USBEIM</NAME>
        <DESCRIPTION>USB Endpoint Interrupt Mask Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E4</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>EP7IM</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>EP6IM</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>EP5IM</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>EP4IM</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>EP3IM</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>EP2IM</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>EP1IM</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>EP0IM</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBEIM>
      <USBENUM>
        <NAME>USBENUM</NAME>
        <DESCRIPTION>Select an endpoint to control, using USB..X registers</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$CA</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT2>
          <NAME>USBENUM2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>USBENUM1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>USBENUM0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBENUM>
      <USBCSEX>
        <NAME>USBCSEX</NAME>
        <DESCRIPTION>USB Control and Status register for Endpoint X</DESCRIPTION>
        <TEXT>The endpoint must be selected using USBENUM previously of accessing this register</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$CB</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT6>
          <NAME>IERR</NAME>
          <DESCRIPTION>Isochronous Error Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>FSTALL</NAME>
          <DESCRIPTION>Force Stall Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>TXPB</NAME>
          <DESCRIPTION>Tx Packet Busy Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>STSENT</NAME>
          <DESCRIPTION>Stall Sent Bit</DESCRIPTION>
          <TEXT>Status bit</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>RXSETUP</NAME>
          <DESCRIPTION>Rx Setup Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>RCVD</NAME>
          <DESCRIPTION>Received Data Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TXC</NAME>
          <DESCRIPTION>Tx Complete Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBCSEX>
      <USBDBCEX>
        <NAME>USBDBCEX</NAME>
        <DESCRIPTION>USB Data Byte Count Register for Endpoint X</DESCRIPTION>
        <TEXT>The endpoint must be selected using USBENUM previously of accessing this register</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$CC</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>BCT7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>BCT6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>BCT5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>BCT4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>BCT3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>BCT2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>BCT1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>BCT0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBDBCEX>
      <USBFCEX>
        <NAME>USBFCEX</NAME>
        <DESCRIPTION>USB Function Control Register for Endpoint X</DESCRIPTION>
        <TEXT>The endpoint must be selected using USBENUM previously of accessing this register</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$CD</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>EPE</NAME>
          <DESCRIPTION>Endpoint Enable BIt</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT2>
          <NAME>EPDIR</NAME>
          <DESCRIPTION>Endpoint Direction Bit</DESCRIPTION>
          <TEXT>1: IN; 0: OUT</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>EPTYP1</NAME>
          <DESCRIPTION>Endpoint Type bit 1</DESCRIPTION>
          <TEXT>00: Control; 01: Isochronous; 10: Bulk; 11: Interrupt</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>EPTYP0</NAME>
          <DESCRIPTION>Endpoint Type Bit 0</DESCRIPTION>
          <TEXT>00: Control; 01: Isochronous; 10: Bulk; 11: Interrupt</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBFCEX>
      <USBRSTE>
        <NAME>USBRSTE</NAME>
        <DESCRIPTION>USB Reset Endpoint Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E5</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>RST7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>RSTE6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>RSTE5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>RSTE4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>RSTE3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>RSTE2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>RSTE1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>RSTE0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBRSTE>
      <USBGS>
        <NAME>USBGS</NAME>
        <DESCRIPTION>USB Global State Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E6</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT3>
          <NAME>RSMON</NAME>
          <DESCRIPTION>Resume Is Currently ON</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>RMWUE</NAME>
          <DESCRIPTION>Remote Wake Up Feature Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>FCF</NAME>
          <DESCRIPTION>Function Configured Flag Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>FAF</NAME>
          <DESCRIPTION>Function Addressed Flag Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBGS>
      <USBFA>
        <NAME>USBFA</NAME>
        <DESCRIPTION>USB Function Address Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E7</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT6>
          <NAME>FADD6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>FADD5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>FADD4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>FADD3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>FADD2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>FADD1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>FADD0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBFA>
      <USBFNH>
        <NAME>USBFNH</NAME>
        <DESCRIPTION>USB Frame Number Register High</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E9</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT4>
          <NAME>FNEND</NAME>
          <DESCRIPTION>Frame Number End Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>FNERR</NAME>
          <DESCRIPTION>Frame Number Error Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>FN10</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>FN9</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>FN8</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBFNH>
      <USBFNL>
        <NAME>USBFNL</NAME>
        <DESCRIPTION>USB Frame Number Register Low</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$E8</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>FN7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>FN6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>FN5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>FN4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>FN3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>FN2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>FN1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>FN0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBFNL>
      <USBDMACS>
        <NAME>USBDMACS</NAME>
        <DESCRIPTION>USB DMA Control and Status Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$EA</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT6>
          <NAME>EPS2</NAME>
          <DESCRIPTION>Endpoint Selection Bit2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>EPS1</NAME>
          <DESCRIPTION>Endpoint Selection Bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>EPS0</NAME>
          <DESCRIPTION>Endpoint Selection 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT2>
          <NAME>USBDMAERR</NAME>
          <DESCRIPTION>DMA Error Flag</DESCRIPTION>
          <TEXT>This bit generates an interrupt. This bit must be cleared by software</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>USBDMADIR</NAME>
          <DESCRIPTION>DMA Direction Bit</DESCRIPTION>
          <TEXT>1: From RAM to Endpoint; 0: From Endpoint to RAM</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>USBDMAR</NAME>
          <DESCRIPTION>DMA Run Bit</DESCRIPTION>
          <TEXT>Set by software to start the copy and cleared by hardware when the copy is finished</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBDMACS>
      <USBDMADH>
        <NAME>USBDMADH</NAME>
        <DESCRIPTION>USB DMA Address register High</DESCRIPTION>
        <TEXT>Set RAM Address where to point to copy from or to</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$EC</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT5>
          <NAME>USBDMAD13</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>USBDMAD12</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>USBDMAD11</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>USBDMAD10</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>USBDMAD9</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>USBDMAD8</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT0>
      </USBDMADH>
      <USBDMADL>
        <NAME>USBDMADL</NAME>
        <DESCRIPTION>USB DMA Address register Low</DESCRIPTION>
        <TEXT>Set RAM Address where to point to copy from or to</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$EB</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>USBDMAD7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>USBDMAD6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>USBDMAD5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>USBDMAD4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>USBDMAD3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>USBDMAD2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>USBDMAD1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>USBDMAD0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBDMADL>
      <USBDMAB>
        <NAME>USBDMAB</NAME>
        <DESCRIPTION>USB DMA Amount of Byte Register</DESCRIPTION>
        <TEXT>Indicates the amount of byte to copy using DMA process</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$ED</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT6>
          <NAME>USBDMAB6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>USBDMAB5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>USBDMAB4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>USBDMAB3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>USBDMAB2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>USBDMAB1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>USBDMAB0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </USBDMAB>
    </USB_DEVICE>
    <USART0>
      <LIST>[UDR0:UCSR0A:UCSR0B:UCSR0C:UBRR0H:UBRR0L]</LIST>
      <LINK>[UBRR0H:UBRR0L]</LINK>
      <ICON>io_com.bmp</ICON>
      <ID />
      <TEXT>The Universal Synchronous and Asynchronous serial Receiver and Transmitter (USART) is a highly flexible serial communication device. The main features are: • Full Duplex Operation (Independent Serial Receive and Transmit Registers) • Asynchronous or Synchronous Operation • Master or Slave Clocked Synchronous Operation • High Resolution Baud Rate Generator • Supports Serial Frames with 5, 6, 7, 8 or 9 Data Bits and 1 or 2 Stop Bits • Odd or Even Parity Generation and Parity Check Supported by Hardware • Data OverRun Detection • Framing Error Detection • Noise Filtering Includes False Start Bit Detection and Digital Low Pass Filter • Three Separate Interrupts on TX Complete, TX Data Register Empty and RX Complete • Multi-processor Communication Mode • Double Speed Asynchronous Communica</TEXT>
      <UDR0>
        <NAME>UDR0</NAME>
        <DESCRIPTION>USART I/O Data Register</DESCRIPTION>
        <TEXT>The UDR0 register is actually two physically separate registers sharing the same I/O address. When writing to the register, the USART Transmit Data register is written. When reading from UDR0, the USART Receive Data register is read.</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$C6</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>UDR07</NAME>
          <DESCRIPTION>USART I/O Data Register bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>UDR06</NAME>
          <DESCRIPTION>USART I/O Data Register bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>UDR05</NAME>
          <DESCRIPTION>USART I/O Data Register bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>UDR04</NAME>
          <DESCRIPTION>USART I/O Data Register bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>UDR03</NAME>
          <DESCRIPTION>USART I/O Data Register bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>UDR02</NAME>
          <DESCRIPTION>USART I/O Data Register bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>UDR01</NAME>
          <DESCRIPTION>USART I/O Data Register bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>UDR00</NAME>
          <DESCRIPTION>USART I/O Data Register bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UDR0>
      <UCSR0A>
        <NAME>UCSR0A</NAME>
        <DESCRIPTION>USART Control and Status Register A</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$C0</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>RXC0</NAME>
          <DESCRIPTION>USART Receive Complete</DESCRIPTION>
          <TEXT>This bit is set (one) when a received character is transferred from the Receiver Shift register to UDR0. The bit is set regard-less of any detected framing errors. When the RXCIE bit in UCR is set, the USART Receive Complete interrupt will be executed when RXC is set(one). RXC is cleared by reading UDR0. When interrupt-driven data reception is used, the USART Receive Complete Interrupt routine must read UDRin order to clear RXC, otherwise a new interrupt will occur once the interrupt routine terminates.</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>TXC0</NAME>
          <DESCRIPTION>USART Transmitt Complete</DESCRIPTION>
          <TEXT>This bit is set (one) when the entire character (including the stop bit) in the Transmit Shift register has been shifted out and no new data has been written to UDR0. This flag is especially useful in half-duplex communications interfaces, where a transmitting application must enter receive mode and free the communications bus immediately after completing the transmission. When the TXCIE bit in UCR is set, setting of TXC causes the USART Transmit Complete interrupt to be executed. TXC is cleared by hardware when executing the corresponding interrupt handling vector. Alternatively, the TXC bit is cleared (zero) by writing a logical one to the b</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>UDRE0</NAME>
          <DESCRIPTION>USART Data Register Empty</DESCRIPTION>
          <TEXT>This bit is set (one) when a character written to UDRis transferred to the Transmit shift register. Setting of this bit indicates that the transmitter is ready to receive a new character for transmission. When the UDR0IE bit in UCR is set, the USART Transmit Complete interrupt to be executed as long as UDR0E is set. UDR0E is cleared by writing UDR0. When interrupt-driven data transmittal is used, the USART Data Register Empty Interrupt routine must write UDRin order to clear UDR0E, otherwise a new interrupt will occur once the interrupt routine terminates. UDR0E is set (one) during reset to indicate that the transmitter is re</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>FE0</NAME>
          <DESCRIPTION>Framing Error</DESCRIPTION>
          <TEXT>This bit is set if a Framing Error condition is detected, i.e. when the stop bit of an incoming character is zero. The FE bit is cleared when the stop bit of received data is one.</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>DOR0</NAME>
          <DESCRIPTION>Data overRun</DESCRIPTION>
          <TEXT>This bit is set if an Overrun condition is detected, i.e. when a character already present in the UDRregister is not read before the next character has been shifted into the Receiver Shift register. The OR bit is buffered, which means that it will be set once the valid data still in UDR0E is read. The OR bit is cleared (zero) when data is received and transferred to UDR0. </TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>UPE0</NAME>
          <DESCRIPTION>Parity Error</DESCRIPTION>
          <TEXT>This bit is set if the next character in the receive buffer had a Parity Error when received and the parity checking was enabled at that point (UPM1 = 1). This bit is valid until the receive buffer (UDR0) is read. Always set this bit to zero when writing to UCSR0A.</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>U2X0</NAME>
          <DESCRIPTION>Double the USART transmission speed</DESCRIPTION>
          <TEXT>This bit only has effect for the asynchronous operation. Write this bit to zero when using synchronous operation. Writing this bit to one will reduce the divisor of the baud rate divider from 16 to 8 effectively doubling the transfer rate for asynchronous communication.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>MPCM0</NAME>
          <DESCRIPTION>Multi-processor Communication Mode</DESCRIPTION>
          <TEXT>This bit enables the Multi-processor Communication Mode. When the MPCM bit is written to one, all the incoming frames received by the USART receiver that do not contain address information will be ignored. The transmitter is unaffected by the MPCM setting. For more detailed information see “Multi-processor Communication Mode” on page 152.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UCSR0A>
      <UCSR0B>
        <NAME>UCSR0B</NAME>
        <DESCRIPTION>USART Control and Status Register B</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$C1</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>RXCIE0</NAME>
          <DESCRIPTION>RX Complete Interrupt Enable</DESCRIPTION>
          <TEXT>Writing this bit to one enables interrupt on the RXC flag. A USART Receive Complete interrupt will be generated only if the RXCIE bit is written to one, the global interrupt flag in SREG is written to one and the RXC bit in UCSR0A is set.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>TXCIE0</NAME>
          <DESCRIPTION>TX Complete Interrupt Enable</DESCRIPTION>
          <TEXT>Writing this bit to one enables interrupt on the TXC flag. A USART Transmit Complete interrupt will be generated only if the TXCIE bit is written to one, the global interrupt flag in SREG is written to one and the TXC bit in UCSR0A is set.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>UDRIE0</NAME>
          <DESCRIPTION>USART Data register Empty Interrupt Enable</DESCRIPTION>
          <TEXT>Writing this bit to one enables interrupt on the UDR0E flag. A Data Register Empty interrupt will be generated only if the UDR0IE bit is written to one, the global interrupt flag in SREG is written to one and the UDR0E bit in UCSR0A is set.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>RXEN0</NAME>
          <DESCRIPTION>Receiver Enable</DESCRIPTION>
          <TEXT>Writing this bit to one enables the USART receiver. The receiver will override normal port operation for the RxD pin when enabled. Disabling the receiver will flush the receive buffer invalidating the FE, DOR and PE flags.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>TXEN0</NAME>
          <DESCRIPTION>Transmitter Enable</DESCRIPTION>
          <TEXT>Writing this bit to one enables the USART transmitter. The transmitter will override normal port operation for the TxD pin when enabled. The disabling of the transmitter (writing TXEN to zero) will not become effective until ongoing and pending transmissions are completed, i.e. when the transmit shift register and transmit buffer register does not contain data to be transmitted. When disabled, the transmitter will no longer override the TxD port.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>UCSZ02</NAME>
          <DESCRIPTION>Character Size</DESCRIPTION>
          <TEXT>The UCSZ2 bits combined with the UCSZ1:0 bit in UCSR0C sets the number of data bits (character size) in a frame the receiver and transmitter use.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>RXB80</NAME>
          <DESCRIPTION>Receive Data Bit 8</DESCRIPTION>
          <TEXT>RXB8 is the 9th data bit of the received character when operating with serial frames with 9 data bits. Must be read before reading the low bits from UDR0.</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TXB80</NAME>
          <DESCRIPTION>Transmit Data Bit 8</DESCRIPTION>
          <TEXT>TXB8 is the 9th data bit in the character to be transmitted when operating with serial frames with 9 data bits. Must be writ-ten before writing the low bits to UDR0.</TEXT>
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UCSR0B>
      <UCSR0C>
        <NAME>UCSR0C</NAME>
        <DESCRIPTION>USART Control and Status Register C</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$C2</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>UMSEL01</NAME>
          <ALIAS>UMSEL1</ALIAS>
          <DESCRIPTION>USART Mode Select</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>UMSEL00</NAME>
          <ALIAS>UMSEL0</ALIAS>
          <DESCRIPTION>USART Mode Select</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <ENUM>COMM_USART_MODE</ENUM>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>UPM01</NAME>
          <DESCRIPTION>Parity Mode Bit 1</DESCRIPTION>
          <TEXT>This bit enable and set type of parity generation and check. If enabled, the transmitter will automatically generate and send the parity of the transmitted data bits within each frame. The receiver will generate a parity value for the incoming data and compare it to the UPM0 setting. If a mismatch is detected, the PE flag in UCSR0A will be set.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>UPM00</NAME>
          <DESCRIPTION>Parity Mode Bit 0</DESCRIPTION>
          <TEXT>This bit enable and set type of parity generation and check. If enabled, the transmitter will automatically generate and send the parity of the transmitted data bits within each frame. The receiver will generate a parity value for the incoming data and compare it to the UPM0 setting. If a mismatch is detected, the PE flag in UCSR0A will be set.</TEXT>
          <ACCESS>RW</ACCESS>
          <ENUM>COMM_UPM_PARITY_MODE</ENUM>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>USBS0</NAME>
          <DESCRIPTION>Stop Bit Select</DESCRIPTION>
          <TEXT>0: 1-bit.  1: 2-bit.</TEXT>
          <ACCESS>RW</ACCESS>
          <ENUM>COMM_STOP_BIT_SEL</ENUM>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>UCSZ01</NAME>
          <ALIAS>UDORD0</ALIAS>
          <DESCRIPTION>Character Size</DESCRIPTION>
          <TEXT>Character Size: 0 0 0 = 5-bit. 0 0 1 = 6-bit. 0 1 0 = 7 bit. 0 1 1 = 8-bit. 1 1 1 = 9 bit.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>UCSZ00</NAME>
          <ALIAS>UCPHA0</ALIAS>
          <DESCRIPTION>Character Size</DESCRIPTION>
          <TEXT>Character Size: 0 0 0 = 5-bit. 0 0 1 = 6-bit. 0 1 0 = 7 bit. 0 1 1 = 8-bit. 1 1 1 = 9 bit.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>UCPOL0</NAME>
          <DESCRIPTION>Clock Polarity</DESCRIPTION>
          <TEXT>This bit is used for synchronous mode only. Write this bit to zero when asynchronous mode is used. The UCPOL bit sets the relationship between data output change and data input sample, and the synchronous clock (XCK).</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UCSR0C>
      <UBRR0H>
        <NAME>UBRR0H</NAME>
        <DESCRIPTION>USART Baud Rate Register High Byte</DESCRIPTION>
        <TEXT>This is a 12-bit register which contains the USART baud rate. The UBRR0H contains the 4 most significant bits, and the UBRR0L contains the 8 least significant bits of the USART baud rate. Ongoing transmissions by the transmitter and receiver will be corrupted if the baud rate is changed. Writing UBRR0L will trigger an immediate update of the baud rate prescaler.</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$C5</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT3>
          <NAME>UBRR011</NAME>
          <DESCRIPTION>USART Baud Rate Register bit 11</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>UBRR010</NAME>
          <DESCRIPTION>USART Baud Rate Register bit 10</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>UBRR09</NAME>
          <DESCRIPTION>USART Baud Rate Register bit 9</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>UBRR08</NAME>
          <DESCRIPTION>USART Baud Rate Register bit 8</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UBRR0H>
      <UBRR0L>
        <NAME>UBRR0L</NAME>
        <DESCRIPTION>USART Baud Rate Register Low Byte</DESCRIPTION>
        <TEXT>This is a 12-bit register which contains the USART baud rate. The UBRR0H contains the 4 most significant bits, and the UBRR0L contains the 8 least significant bits of the USART baud rate. Ongoing transmissions by the transmitter and receiver will be corrupted if the baud rate is changed. Writing UBRR0L will trigger an immediate update of the baud rate prescaler.</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$C4</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>UBRR07</NAME>
          <DESCRIPTION>USART Baud Rate Register bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>UBRR06</NAME>
          <DESCRIPTION>USART Baud Rate Register bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>UBRR05</NAME>
          <DESCRIPTION>USART Baud Rate Register bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>UBRR04</NAME>
          <DESCRIPTION>USART Baud Rate Register bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>UBRR03</NAME>
          <DESCRIPTION>USART Baud Rate Register bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>UBRR02</NAME>
          <DESCRIPTION>USART Baud Rate Register bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>UBRR01</NAME>
          <DESCRIPTION>USART Baud Rate Register bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>UBRR00</NAME>
          <DESCRIPTION>USART Baud Rate Register bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UBRR0L>
    </USART0>
    <PORTA>
      <LIST>[PORTA:DDRA:PINA]</LIST>
      <LINK />
      <ICON>io_port.bmp</ICON>
      <ID>AVRSimIOPort.SimIOPort</ID>
      <TEXT />
      <PORTA>
        <NAME>PORTA</NAME>
        <DESCRIPTION>Port A Data Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$02</IO_ADDR>
        <MEM_ADDR>$22</MEM_ADDR>
        <ICON>io_port.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>PORTA7</NAME>
          <DESCRIPTION>Port A Data Register bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PORTA6</NAME>
          <DESCRIPTION>Port A Data Register bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PORTA5</NAME>
          <DESCRIPTION>Port A Data Register bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PORTA4</NAME>
          <DESCRIPTION>Port A Data Register bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PORTA3</NAME>
          <DESCRIPTION>Port A Data Register bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PORTA2</NAME>
          <DESCRIPTION>Port A Data Register bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PORTA1</NAME>
          <DESCRIPTION>Port A Data Register bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PORTA0</NAME>
          <DESCRIPTION>Port A Data Register bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PORTA>
      <DDRA>
        <NAME>DDRA</NAME>
        <DESCRIPTION>Port A Data Direction Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$01</IO_ADDR>
        <MEM_ADDR>$21</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>DDA7</NAME>
          <DESCRIPTION>Data Direction Register, Port A, bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>DDA6</NAME>
          <DESCRIPTION>Data Direction Register, Port A, bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>DDA5</NAME>
          <DESCRIPTION>Data Direction Register, Port A, bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>DDA4</NAME>
          <DESCRIPTION>Data Direction Register, Port A, bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>DDA3</NAME>
          <DESCRIPTION>Data Direction Register, Port A, bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>DDA2</NAME>
          <DESCRIPTION>Data Direction Register, Port A, bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>DDA1</NAME>
          <DESCRIPTION>Data Direction Register, Port A, bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>DDA0</NAME>
          <DESCRIPTION>Data Direction Register, Port A, bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </DDRA>
      <PINA>
        <NAME>PINA</NAME>
        <DESCRIPTION>Port A Input Pins</DESCRIPTION>
        <TEXT>The Port A Input Pins address - PINA - is not a register, and this address enables access to the physical value on each Port A pin. When reading PORTA the Port A Data Latch is read, and when reading PINA, the logical values present on the pins are read.</TEXT>
        <IO_ADDR>$00</IO_ADDR>
        <MEM_ADDR>$20</MEM_ADDR>
        <ICON>io_port.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>PINA7</NAME>
          <DESCRIPTION>Input Pins, Port A bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>Hi-Z</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PINA6</NAME>
          <DESCRIPTION>Input Pins, Port A bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>Hi-Z</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PINA5</NAME>
          <DESCRIPTION>Input Pins, Port A bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>Hi-Z</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PINA4</NAME>
          <DESCRIPTION>Input Pins, Port A bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>Hi-Z</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PINA3</NAME>
          <DESCRIPTION>Input Pins, Port A bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>Hi-Z</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PINA2</NAME>
          <DESCRIPTION>Input Pins, Port A bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>Hi-Z</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PINA1</NAME>
          <DESCRIPTION>Input Pins, Port A bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>Hi-Z</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PINA0</NAME>
          <DESCRIPTION>Input Pins, Port A bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>Hi-Z</INIT_VAL>
        </BIT0>
      </PINA>
    </PORTA>
    <PORTB>
      <LIST>[PORTB:DDRB:PINB]</LIST>
      <LINK />
      <ICON>io_port.bmp</ICON>
      <ID>AVRSimIOPort.SimIOPort</ID>
      <TEXT />
      <PORTB>
        <NAME>PORTB</NAME>
        <DESCRIPTION>Port B Data Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$05</IO_ADDR>
        <MEM_ADDR>$25</MEM_ADDR>
        <ICON>io_port.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>PORTB7</NAME>
          <DESCRIPTION>Port B Data Register bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PORTB6</NAME>
          <DESCRIPTION>Port B Data Register bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PORTB5</NAME>
          <DESCRIPTION>Port B Data Register bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PORTB4</NAME>
          <DESCRIPTION>Port B Data Register bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PORTB3</NAME>
          <DESCRIPTION>Port B Data Register bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PORTB2</NAME>
          <DESCRIPTION>Port B Data Register bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PORTB1</NAME>
          <DESCRIPTION>Port B Data Register bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PORTB0</NAME>
          <DESCRIPTION>Port B Data Register bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PORTB>
      <DDRB>
        <NAME>DDRB</NAME>
        <DESCRIPTION>Port B Data Direction Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$04</IO_ADDR>
        <MEM_ADDR>$24</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>DDB7</NAME>
          <DESCRIPTION>Port B Data Direction Register bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>DDB6</NAME>
          <DESCRIPTION>Port B Data Direction Register bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>DDB5</NAME>
          <DESCRIPTION>Port B Data Direction Register bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>DDB4</NAME>
          <DESCRIPTION>Port B Data Direction Register bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>DDB3</NAME>
          <DESCRIPTION>Port B Data Direction Register bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>DDB2</NAME>
          <DESCRIPTION>Port B Data Direction Register bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>DDB1</NAME>
          <DESCRIPTION>Port B Data Direction Register bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>DDB0</NAME>
          <DESCRIPTION>Port B Data Direction Register bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </DDRB>
      <PINB>
        <NAME>PINB</NAME>
        <DESCRIPTION>Port B Input Pins</DESCRIPTION>
        <TEXT>The Port B Input Pins address - PINB - is not a register, and this address enables access to the physical value on each Port B pin. When reading PORTB, the Port B Data Latch is read, and when reading PINB, the logical values present on the pins are read.</TEXT>
        <IO_ADDR>$03</IO_ADDR>
        <MEM_ADDR>$23</MEM_ADDR>
        <ICON>io_port.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>PINB7</NAME>
          <DESCRIPTION>Port B Input Pins bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PINB6</NAME>
          <DESCRIPTION>Port B Input Pins bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PINB5</NAME>
          <DESCRIPTION>Port B Input Pins bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PINB4</NAME>
          <DESCRIPTION>Port B Input Pins bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PINB3</NAME>
          <DESCRIPTION>Port B Input Pins bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PINB2</NAME>
          <DESCRIPTION>Port B Input Pins bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PINB1</NAME>
          <DESCRIPTION>Port B Input Pins bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PINB0</NAME>
          <DESCRIPTION>Port B Input Pins bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PINB>
    </PORTB>
    <PORTC>
      <LIST>[PORTC:DDRC:PINC]</LIST>
      <LINK />
      <ICON>io_port.bmp</ICON>
      <ID>AVRSimIOPort.SimIOPort</ID>
      <TEXT />
      <PORTC>
        <NAME>PORTC</NAME>
        <DESCRIPTION>Port C Data Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$08</IO_ADDR>
        <MEM_ADDR>$28</MEM_ADDR>
        <ICON>io_port.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>PORTC7</NAME>
          <DESCRIPTION>Port C Data Register bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PORTC6</NAME>
          <DESCRIPTION>Port C Data Register bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PORTC5</NAME>
          <DESCRIPTION>Port C Data Register bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PORTC4</NAME>
          <DESCRIPTION>Port C Data Register bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PORTC3</NAME>
          <DESCRIPTION>Port C Data Register bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PORTC2</NAME>
          <DESCRIPTION>Port C Data Register bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PORTC1</NAME>
          <DESCRIPTION>Port C Data Register bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PORTC0</NAME>
          <DESCRIPTION>Port C Data Register bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PORTC>
      <DDRC>
        <NAME>DDRC</NAME>
        <DESCRIPTION>Port C Data Direction Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$07</IO_ADDR>
        <MEM_ADDR>$27</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>DDC7</NAME>
          <DESCRIPTION>Port C Data Direction Register bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>DDC6</NAME>
          <DESCRIPTION>Port C Data Direction Register bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>DDC5</NAME>
          <DESCRIPTION>Port C Data Direction Register bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>DDC4</NAME>
          <DESCRIPTION>Port C Data Direction Register bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>DDC3</NAME>
          <DESCRIPTION>Port C Data Direction Register bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>DDC2</NAME>
          <DESCRIPTION>Port C Data Direction Register bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>DDC1</NAME>
          <DESCRIPTION>Port C Data Direction Register bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>DDC0</NAME>
          <DESCRIPTION>Port C Data Direction Register bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </DDRC>
      <PINC>
        <NAME>PINC</NAME>
        <DESCRIPTION>Port C Input Pins</DESCRIPTION>
        <TEXT>The Port C Input Pins address - PINC - is not a register, and this address enables access to the physical value on each Port C pin. When reading PORTC, the Port C Data Latch is read, and when reading PINC, the logical values present on the pins are read.</TEXT>
        <IO_ADDR>$06</IO_ADDR>
        <MEM_ADDR>$26</MEM_ADDR>
        <ICON>io_port.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>PINC7</NAME>
          <DESCRIPTION>Port C Input Pins bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PINC6</NAME>
          <DESCRIPTION>Port C Input Pins bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PINC5</NAME>
          <DESCRIPTION>Port C Input Pins bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PINC4</NAME>
          <DESCRIPTION>Port C Input Pins bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PINC3</NAME>
          <DESCRIPTION>Port C Input Pins bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PINC2</NAME>
          <DESCRIPTION>Port C Input Pins bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PINC1</NAME>
          <DESCRIPTION>Port C Input Pins bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PINC0</NAME>
          <DESCRIPTION>Port C Input Pins bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PINC>
    </PORTC>
    <PORTD>
      <LIST>[PORTD:DDRD:PIND]</LIST>
      <LINK />
      <ICON>io_port.bmp</ICON>
      <ID>AVRSimIOPort.SimIOPort</ID>
      <TEXT />
      <PORTD>
        <NAME>PORTD</NAME>
        <DESCRIPTION>Port D Data Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$0B</IO_ADDR>
        <MEM_ADDR>$2B</MEM_ADDR>
        <ICON>io_port.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>PORTD7</NAME>
          <DESCRIPTION>Port D Data Register bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PORTD6</NAME>
          <DESCRIPTION>Port D Data Register bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PORTD5</NAME>
          <DESCRIPTION>Port D Data Register bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PORTD4</NAME>
          <DESCRIPTION>Port D Data Register bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PORTD3</NAME>
          <DESCRIPTION>Port D Data Register bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PORTD2</NAME>
          <DESCRIPTION>Port D Data Register bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PORTD1</NAME>
          <DESCRIPTION>Port D Data Register bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PORTD0</NAME>
          <DESCRIPTION>Port D Data Register bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PORTD>
      <DDRD>
        <NAME>DDRD</NAME>
        <DESCRIPTION>Port D Data Direction Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$0A</IO_ADDR>
        <MEM_ADDR>$2A</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>DDD7</NAME>
          <DESCRIPTION>Port D Data Direction Register bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>DDD6</NAME>
          <DESCRIPTION>Port D Data Direction Register bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>DDD5</NAME>
          <DESCRIPTION>Port D Data Direction Register bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>DDD4</NAME>
          <DESCRIPTION>Port D Data Direction Register bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>DDD3</NAME>
          <DESCRIPTION>Port D Data Direction Register bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>DDD2</NAME>
          <DESCRIPTION>Port D Data Direction Register bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>DDD1</NAME>
          <DESCRIPTION>Port D Data Direction Register bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>DDD0</NAME>
          <DESCRIPTION>Port D Data Direction Register bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </DDRD>
      <PIND>
        <NAME>PIND</NAME>
        <DESCRIPTION>Port D Input Pins</DESCRIPTION>
        <TEXT>The Port D Input Pins address - PIND - is not a register, and this address enables access to the physical value on each Port D pin. When reading PORTD, the Port D Data Latch is read, and when reading PIND, the logical values present on the pins are read.</TEXT>
        <IO_ADDR>$09</IO_ADDR>
        <MEM_ADDR>$29</MEM_ADDR>
        <ICON>io_port.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>PIND7</NAME>
          <DESCRIPTION>Port D Input Pins bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PIND6</NAME>
          <DESCRIPTION>Port D Input Pins bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PIND5</NAME>
          <DESCRIPTION>Port D Input Pins bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PIND4</NAME>
          <DESCRIPTION>Port D Input Pins bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PIND3</NAME>
          <DESCRIPTION>Port D Input Pins bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PIND2</NAME>
          <DESCRIPTION>Port D Input Pins bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PIND1</NAME>
          <DESCRIPTION>Port D Input Pins bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PIND0</NAME>
          <DESCRIPTION>Port D Input Pins bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PIND>
    </PORTD>
    <TIMER_COUNTER_0>
      <LIST>[TIMSK0:TIFR0:TCCR0A:TCCR0B:TCNT0:OCR0A:OCR0B:GTCCR]</LIST>
      <LINK />
      <ICON>io_timer.bmp</ICON>
      <ID>At8pwm0_01</ID>
      <TEXT />
      <OCR0B>
        <NAME>OCR0B</NAME>
        <DESCRIPTION>Timer/Counter0 Output Compare Register</DESCRIPTION>
        <TEXT>The Output Compare Register contains an 8-bit value that is continuously compared with the counter value (TCNT0). A match can be used to generate an output compare interrupt, or to generate a waveform output on the OC0 pin.</TEXT>
        <IO_ADDR>$28</IO_ADDR>
        <MEM_ADDR>$48</MEM_ADDR>
        <ICON>io_timer.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>OCR0B_7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>OCR0B_6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>OCR0B_5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>OCR0B_4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>OCR0B_3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>OCR0B_2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>OCR0B_1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>OCR0B_0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </OCR0B>
      <OCR0A>
        <NAME>OCR0A</NAME>
        <DESCRIPTION>Timer/Counter0 Output Compare Register</DESCRIPTION>
        <TEXT>The Output Compare Register contains an 8-bit value that is continuously compared with the counter value (TCNT0). A match can be used to generate an output compare interrupt, or to generate a waveform output on the OC0 pin.</TEXT>
        <IO_ADDR>$27</IO_ADDR>
        <MEM_ADDR>$47</MEM_ADDR>
        <ICON>io_timer.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>OCR0A_7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>OCR0A_6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>OCR0A_5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>OCR0A_4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>OCR0A_3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>OCR0A_2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>OCR0A_1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>OCR0A_0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </OCR0A>
      <TCNT0>
        <NAME>TCNT0</NAME>
        <DESCRIPTION>Timer/Counter0</DESCRIPTION>
        <TEXT>The Timer/Counter Register gives direct access, both for read and write operations, to the Timer/Counter unit 8-bit counter. Writing to the TCNT0 register blocks (removes) the compare match on the following timer clock. Modifying the counter (TCNT0) while the counter is running, introduces a risk of missing a compare match between TCNT0 the OCR0 register.</TEXT>
        <IO_ADDR>$26</IO_ADDR>
        <MEM_ADDR>$46</MEM_ADDR>
        <ICON>io_timer.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>TCNT0_7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>TCNT0_6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>TCNT0_5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>TCNT0_4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>TCNT0_3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>TCNT0_2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>TCNT0_1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TCNT0_0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TCNT0>
      <TCCR0B>
        <NAME>TCCR0B</NAME>
        <DESCRIPTION>Timer/Counter Control Register B</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$25</IO_ADDR>
        <MEM_ADDR>$45</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>FOC0A</NAME>
          <DESCRIPTION>Force Output Compare A</DESCRIPTION>
          <TEXT />
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>FOC0B</NAME>
          <DESCRIPTION>Force Output Compare B</DESCRIPTION>
          <TEXT />
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT3>
          <NAME>WGM02</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACESS>RW</ACESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>CS02</NAME>
          <DESCRIPTION>Clock Select</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>CS01</NAME>
          <DESCRIPTION>Clock Select</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>CS00</NAME>
          <DESCRIPTION>Clock Select</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <ENUM>CLK_SEL_3BIT_EXT</ENUM>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TCCR0B>
      <TCCR0A>
        <NAME>TCCR0A</NAME>
        <DESCRIPTION>Timer/Counter  Control Register A</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$24</IO_ADDR>
        <MEM_ADDR>$44</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>COM0A1</NAME>
          <DESCRIPTION>Compare Output Mode, Phase Correct PWM Mode</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>COM0A0</NAME>
          <DESCRIPTION>Compare Output Mode, Phase Correct PWM Mode</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>COM0B1</NAME>
          <DESCRIPTION>Compare Output Mode, Fast PWm</DESCRIPTION>
          <TEXT />
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>COM0B0</NAME>
          <DESCRIPTION>Compare Output Mode, Fast PWm</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT1>
          <NAME>WGM01</NAME>
          <DESCRIPTION>Waveform Generation Mode</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>WGM00</NAME>
          <DESCRIPTION>Waveform Generation Mode</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TCCR0A>
      <TIMSK0>
        <NAME>TIMSK0</NAME>
        <DESCRIPTION>Timer/Counter0 Interrupt Mask Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$6E</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT2>
          <NAME>OCIE0B</NAME>
          <DESCRIPTION>Timer/Counter0 Output Compare Match B Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>OCIE0A</NAME>
          <DESCRIPTION>Timer/Counter0 Output Compare Match A Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TOIE0</NAME>
          <DESCRIPTION>Timer/Counter0 Overflow Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TIMSK0>
      <TIFR0>
        <NAME>TIFR0</NAME>
        <DESCRIPTION>Timer/Counter0 Interrupt Flag register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$15</IO_ADDR>
        <MEM_ADDR>$35</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT2>
          <NAME>OCF0B</NAME>
          <DESCRIPTION>Timer/Counter0 Output Compare Flag 0B</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>OCF0A</NAME>
          <DESCRIPTION>Timer/Counter0 Output Compare Flag 0A</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TOV0</NAME>
          <DESCRIPTION>Timer/Counter0 Overflow Flag</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TIFR0>
      <GTCCR>
        <NAME>GTCCR</NAME>
        <DESCRIPTION>General Timer/Counter Control Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$23</IO_ADDR>
        <MEM_ADDR>$43</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>TSM</NAME>
          <DESCRIPTION>Timer/Counter Synchronization Mode</DESCRIPTION>
          <TEXT>Writing the TSM bit to one activates the Timer/Counter Synchronization mode. In this mode, the value that is written to the PSR2 and PSR10 bits is kept, hence keeping the corresponding prescaler reset signals asserted. This ensures that the corresponding Timer/Counters are halted and can be configured to the same value without the risk of one of them advancing during configuration. When the TSM bit is written to zero, the PSR2 and PSR10 bits are cleared by hardware, and the Timer/Counters start counting simultaneousl</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT0>
          <NAME>PSRSYNC</NAME>
          <ALIAS>PSR10</ALIAS>
          <DESCRIPTION>Prescaler Reset Timer/Counter1 and Timer/Counter0</DESCRIPTION>
          <TEXT>When this bit is one, Timer/Counter1 and Timer/Counter0 prescaler will be Reset. This bit is normally cleared immediately by hardware, except if the TSM bit is set. Note that Timer/Counter1 and Timer/Counter0 share the same prescaler and a reset of this prescaler will affect both timers.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </GTCCR>
    </TIMER_COUNTER_0>
    <TIMER_COUNTER_2>
      <LIST>[TIMSK2:TIFR2:TCCR2A:TCCR2B:TCNT2:OCR2A:OCR2B:ASSR:GTCCR]</LIST>
      <LINK />
      <ICON>io_timer.bmp</ICON>
      <ID>At8pwm2_07</ID>
      <TEXT>The 8-bit Timer/Counter2 can select clock source from CK, prescaled CK, or external crystal input TOSC1. It can also be stopped as described in the section “Timer/Counter2 Control Register - TCCR2”.    The status flags (overflow and compare match) are found in the Timer/Counter Interrupt Flag Register - TIFR. Control signals    are found in the Timer/Counter Control Register TCCR2. The interrupt enable/disable settings are found in “The   Timer/Counter Interrupt Mask Register - TIMSK”.  When Timer/Counter2 is externally clocked, the external signal is synchronized with the oscillator frequency of the CPU. To assure proper sampling of the external clock, the minimum time between two external clock transitions must be at least one  internal CPU clock period. The external clock signal is sampled on the rising edge of the internal CPU clock.   This module features a high resolution and a high accuracy usage with the lower prescaling opportunities. Similarly, the    high prescaling opportunities make this unit useful for lower   speed functions or exact timing functions with infrequent actions. Timer/Counter2 can also be used as an 8-bit Pulse Width Modulator. In this mode, Timer/Counter2 and the output compare register serve as a glitch-free, stand-alone PWM with centered puls</TEXT>
      <TIMSK2>
        <NAME>TIMSK2</NAME>
        <DESCRIPTION>Timer/Counter Interrupt Mask register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$70</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT2>
          <NAME>OCIE2B</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Match B Interrupt Enable</DESCRIPTION>
          <TEXT>When the OCIE2B bit is written to one and the I-bit in the Status Register is set (one), the Timer/Counter2 Compare Match B interrupt is enabled. The corresponding interrupt is executed if a compare match in Timer/Counter2 occurs, i.e., when the OCF2B bit is set in the Timer/Counter 2 Interrupt Flag Register – TIFR2.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>OCIE2A</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Match A Interrupt Enable</DESCRIPTION>
          <TEXT>When the OCIE2A bit is written to one and the I-bit in the Status Register is set (one), the Timer/Counter2 Compare Match A interrupt is enabled. The corresponding interrupt is executed if a compare match in Timer/Counter2 occurs, i.e., when the OCF2A bit is set in the Timer/Counter 2 Interrupt Flag Register – TIFR2.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TOIE2</NAME>
          <ALIAS>TOIE2A</ALIAS>
          <DESCRIPTION>Timer/Counter2 Overflow Interrupt Enable</DESCRIPTION>
          <TEXT>When the TOIE2 bit is written to one and the I-bit in the Status Register is set (one), the Timer/Counter2 Overflow interrupt is enabled. The corresponding interrupt is executed if an overflow in Timer/Counter2 occurs, i.e., when the TOV2 bit is set in the Timer/Counter2 Interrupt Flag Register – TIFR2.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TIMSK2>
      <TIFR2>
        <NAME>TIFR2</NAME>
        <DESCRIPTION>Timer/Counter Interrupt Flag Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$17</IO_ADDR>
        <MEM_ADDR>$37</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT2>
          <NAME>OCF2B</NAME>
          <DESCRIPTION>Output Compare Flag 2B</DESCRIPTION>
          <TEXT>The OCF2B bit is set (one) when a compare match occurs between the Timer/Counter2 and the data in OCR2B – Output Compare Register2. OCF2B is cleared by hardware when executing the corresponding interrupt handling vector. Alternatively, OCF2B is cleared by writing a logic one to the flag. When the I-bit in SREG, OCIE2B (Timer/Counter2 Compare match Interrupt Enable), and OCF2B are set (one), the Timer/Counter2 Compare match Interrupt is executed.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>OCF2A</NAME>
          <DESCRIPTION>Output Compare Flag 2A</DESCRIPTION>
          <TEXT>The OCF2A bit is set (one) when a compare match occurs between the Timer/Counter2 and the data in OCR2A – Output Compare Register2. OCF2A is cleared by hardware when executing the corresponding interrupt handling vector. Alternatively, OCF2A is cleared by writing a logic one to the flag. When the I-bit in SREG, OCIE2A (Timer/Counter2 Compare match Interrupt Enable), and OCF2A are set (one), the Timer/Counter2 Compare match Interrupt is executed.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TOV2</NAME>
          <DESCRIPTION>Timer/Counter2 Overflow Flag</DESCRIPTION>
          <TEXT>The TOV2 bit is set (one) when an overflow occurs in Timer/Counter2. TOV2 is cleared by hardware when executing the corresponding interrupt handling vector. Alternatively, TOV2 is cleared by writing a logic one to the flag. When the SREG I-bit, TOIE2A (Timer/Counter2 Overflow Interrupt Enable), and TOV2 are set (one), the Timer/Counter2 Overflow interrupt is executed. In PWM mode, this bit is set when Timer/Counter2 changes counting direction at 0x00.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TIFR2>
      <TCCR2A>
        <NAME>TCCR2A</NAME>
        <DESCRIPTION>Timer/Counter2 Control Register A</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B0</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>COM2A1</NAME>
          <DESCRIPTION>Compare Output Mode bit 1</DESCRIPTION>
          <TEXT>The COM21 and COM20 control bits determine any output pin action following a compare match in Timer/Counter2. Output pin actions affect pin PD7(OC2). This is an alternative function to an I/O port, and the corresponding direction control bit must be set (one) to control an output pin. (COM21:COM20) description:    (0:0) = Timer/Counter disconnected from output pin OC2. (0:1) = Toggle the OC2 output line. (1:0) = Clear the OC2 output line (to zero). (1:1) = Set the OC2 output line (to one). Note: In PWM mode, these bits have a different function</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>COM2A0</NAME>
          <DESCRIPTION>Compare Output Mode bit 1</DESCRIPTION>
          <TEXT>The COM21 and COM20 control bits determine any output pin action following a compare match in Timer/Counter2. Output pin actions affect pin PD7(OC2). This is an alternative function to an I/O port, and the corresponding direction control bit must be set (one) to control an output pin. (COM21:COM20) description:    (0:0) = Timer/Counter disconnected from output pin OC2. (0:1) = Toggle the OC2 output line. (1:0) = Clear the OC2 output line (to zero). (1:1) = Set the OC2 output line (to one). Note: In PWM mode, these bits have a different function</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>COM2B1</NAME>
          <DESCRIPTION>Compare Output Mode bit 1</DESCRIPTION>
          <TEXT>The COM21 and COM20 control bits determine any output pin action following a compare match in Timer/Counter2. Output pin actions affect pin PD7(OC2). This is an alternative function to an I/O port, and the corresponding direction control bit must be set (one) to control an output pin. (COM21:COM20) description:    (0:0) = Timer/Counter disconnected from output pin OC2. (0:1) = Toggle the OC2 output line. (1:0) = Clear the OC2 output line (to zero). (1:1) = Set the OC2 output line (to one). Note: In PWM mode, these bits have a different function</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>COM2B0</NAME>
          <DESCRIPTION>Compare Output Mode bit 0</DESCRIPTION>
          <TEXT>The COM21 and COM20 control bits determine any output pin action following a compare match in Timer/Counter2. Output pin actions affect pin PD7(OC2). This is an alternative function to an I/O port, and the corresponding direction control bit must be set (one) to control an output pin. (COM21:COM20) description:    (0:0) = Timer/Counter disconnected from output pin OC2. (0:1) = Toggle the OC2 output line. (1:0) = Clear the OC2 output line (to zero). (1:1) = Set the OC2 output line (to one). Note: In PWM mode, these bits have a different functio</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT1>
          <NAME>WGM21</NAME>
          <DESCRIPTION>Waveform Genration Mode</DESCRIPTION>
          <TEXT>These bits control the counting sequence of the counter,the source for hte maximum (TOP)counter value,and what type of waveform generation to be used.Modes of operation supported by the timer/counter unit are:Normal mode (counter), Clear Timer on Compare match (CTC)mode,and two types of Pulse Width Modulation (PWM)modes. Please refer to the manual for more information.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>WGM20</NAME>
          <DESCRIPTION>Waveform Genration Mode</DESCRIPTION>
          <TEXT>These bits control the counting sequence of the counter,the source for hte maximum (TOP)counter value,and what type of waveform generation to be used.Modes of operation supported by the timer/counter unit are:Normal mode (counter), Clear Timer on Compare match (CTC)mode,and two types of Pulse Width Modulation (PWM)modes. Please refer to the manual for more information.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TCCR2A>
      <TCCR2B>
        <NAME>TCCR2B</NAME>
        <DESCRIPTION>Timer/Counter2 Control Register B</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B1</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>FOC2A</NAME>
          <DESCRIPTION>Force Output Compare A</DESCRIPTION>
          <TEXT>Writing a logical one to this bit, forces a change in the compare match output pin PD7 (OC2) according to the values already set in COM21 and COM20. If the COM21 and COM20 bits are written in the same cycle as FOC2, the new settings will not take effect until next compare match or forced output compare match occurs. The Force Output Compare bit can be used to change the output pin without waiting for a compare match in the timer. The automatic action programmed in COM21 and COM20 happens as if a Compare Match had occurred, but no interrupt is generated, and the Timer/Counter will not be cleared even if CTC2 is set. The corresponding I/O pin must be set as an output pin for the FOC2 bit to have effect on the pin. The FOC2 bit will always be read as zero. Setting the FOC2 bit has no effect in PWM mode</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>FOC2B</NAME>
          <DESCRIPTION>Force Output Compare B</DESCRIPTION>
          <TEXT>Writing a logical one to this bit, forces a change in the compare match output pin PD7 (OC2) according to the values already set in COM21 and COM20. If the COM21 and COM20 bits are written in the same cycle as FOC2, the new settings will not take effect until next compare match or forced output compare match occurs. The Force Output Compare bit can be used to change the output pin without waiting for a compare match in the timer. The automatic action programmed in COM21 and COM20 happens as if a Compare Match had occurred, but no interrupt is generated, and the Timer/Counter will not be cleared even if CTC2 is set. The corresponding I/O pin must be set as an output pin for the FOC2 bit to have effect on the pin. The FOC2 bit will always be read as zero. Setting the FOC2 bit has no effect in PWM mode</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT3>
          <NAME>WGM22</NAME>
          <DESCRIPTION>Waveform Generation Mode</DESCRIPTION>
          <TEXT>These bits control the counting sequence of the counter,the source for hte maximum (TOP)counter value,and what type of waveform generation to be used.Modes of operation supported by the timer/counter unit are:Normal mode (counter), Clear Timer on Compare match (CTC)mode,and two types of Pulse Width Modulation (PWM)modes. Please refer to the manual for more information.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>CS22</NAME>
          <DESCRIPTION>Clock Select bit 2</DESCRIPTION>
          <TEXT>The Clock Select bits 2,1, and 0 define the prescaling source of Timer/Counter2. (CS22:CS21:CS20) Description. (0:0:0) Timer/Counter2 is stopped. (0:0:1) PCK2. (0:1:0) PCK2/8. (0:1:1) PCK2/32. (1:0:0) PCK2/64. (1:0:1) PCK2/128. (1:1:0) PCK2/256. (1:1:1) PCK2/1024. The Stop condition provides a Timer Enable/Disable function. The prescaled modes are scaled directly from the PCK2 clock.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>CS21</NAME>
          <DESCRIPTION>Clock Select bit 1</DESCRIPTION>
          <TEXT>The Clock Select bits 2,1, and 0 define the prescaling source of Timer/Counter2. (CS22:CS21:CS20) Description. (0:0:0) Timer/Counter2 is stopped. (0:0:1) PCK2. (0:1:0) PCK2/8. (0:1:1) PCK2/32. (1:0:0) PCK2/64. (1:0:1) PCK2/128. (1:1:0) PCK2/256. (1:1:1) PCK2/1024. The Stop condition provides a Timer Enable/Disable function. The prescaled modes are scaled directly from the PCK2 clock.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>CS20</NAME>
          <DESCRIPTION>Clock Select bit 0</DESCRIPTION>
          <TEXT>The Clock Select bits 2,1, and 0 define the prescaling source of Timer/Counter2. (CS22:CS21:CS20) Description. (0:0:0) Timer/Counter2 is stopped. (0:0:1) PCK2. (0:1:0) PCK2/8. (0:1:1) PCK2/32. (1:0:0) PCK2/64. (1:0:1) PCK2/128. (1:1:0) PCK2/256. (1:1:1) PCK2/1024. The Stop condition provides a Timer Enable/Disable function. The prescaled modes are scaled directly from the PCK2 clock.</TEXT>
          <ACCESS>RW</ACCESS>
          <ENUM>CLK_SEL_3BIT</ENUM>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TCCR2B>
      <TCNT2>
        <NAME>TCNT2</NAME>
        <DESCRIPTION>Timer/Counter2</DESCRIPTION>
        <TEXT>This 8-bit register contains the value of Timer/Counter2. Timer/Counters2 is implemented as an up or up/down (in PWM mode) counter with read and write access. If the Timer/Counter2iswritten to and a clocksourceisselected,it continues counting in the timer clock cycle following the write operation.</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B2</MEM_ADDR>
        <ICON>io_timer.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>TCNT2_7</NAME>
          <DESCRIPTION>Timer/Counter 2 bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>TCNT2_6</NAME>
          <DESCRIPTION>Timer/Counter 2 bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>TCNT2_5</NAME>
          <DESCRIPTION>Timer/Counter 2 bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>TCNT2_4</NAME>
          <DESCRIPTION>Timer/Counter 2 bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>TCNT2_3</NAME>
          <DESCRIPTION>Timer/Counter 2 bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>TCNT2_2</NAME>
          <DESCRIPTION>Timer/Counter 2 bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>TCNT2_1</NAME>
          <DESCRIPTION>Timer/Counter 2 bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TCNT2_0</NAME>
          <DESCRIPTION>Timer/Counter 2 bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TCNT2>
      <OCR2B>
        <NAME>OCR2B</NAME>
        <DESCRIPTION>Timer/Counter2 Output Compare Register B</DESCRIPTION>
        <TEXT>The output compare register is an 8-bit read/write register. The Timer/Counter Output Compare Register contains the data to be continuously compared with Timer/Counter2. Actions on compare matches are specified in TCCR2. A compare match does only occur if Timer/Counter2 counts to the OCR2 value. A software write that sets TCNT2 and OCR2 to the same value does not generate a compare match. A compare match will set the compare interrupt flag in the CPU clock cycle following the compare event. Timer/Counter2 in PWM Mode When PWM mode is selected, the Timer/Counter2 either wraps (overflows) when it reaches $FF or it acts as an up/down counter. If the up/down mode is selected, the Timer/Counter2 and the Output Compare Register - OCR2 form an 8-bit, free-running, glitch-free, and phase correct PWM with outputs on the PD7(OC2) pin. If the overflow mode is selected, the Timer/Counter2 and the Output Compare Register - OCR2 form an 8-bit, free-running, and glitch-free PWM, operating with twice the speed of the up/down  counting mode. PWM Modes (Up/Down and Overflow). The two different PWM modes are selected by the CTC2 bit in the Timer/Counter Control Register - TCCR2. If CTC2 is cleared and PWM mode is selected, the Timer/Counter acts as an up/down counter, counting up from $00 to $FF, where it turns and counts down again to zero before the cycle is repeated. When the counter value matches the con-tents of the Output Compare Register, the PD7(OC2) pin is set or cleared according to the settings of the COM21/COM20 bits in the Timer/Counter Control Register TCCR2. If CTC2 is set and PWM mode is selected, the Timer/Counters will wrap and start counting from $00 after reaching $FF. The PD7(OC2) pin will be set or cleared according to the settings of COM21/COM20 on a Timer/Counter overflow or when the counter value matches the contents of the Output Compare Register. Note that in PWM mode, the value to be written to the Output Compare Register is first transferred to a temporary location, and then latched into OCR2 when the Timer/Counter reaches $FF. This prevents the occurrence of odd-length PWM pulses (glitches) in the event of an unsynchronized OCR2 write. (CTC2:COM21:COM20) Effect on Compare Pin Frequency: (0:0:0) = Not connected. (0:0:1) = Not connected. (0:1:0) = Cleared on compare match, up-counting. Set on compare match, down-counting (non-inverted PWM). f TCK0/2 /510. (0:1:1) = Cleared on compare match, down-counting. Set on compare match, up-counting (inverted PWM). f TCK0/2 /510. (1:0:0) = Not connected. (1:0:1) = Not connected. (1:1:0) = Cleared on compare match, set on overflow. f TCK0/2 /256. (1:1:1) = Set on compare match, cleared on overflow. f TCK0/</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B4</MEM_ADDR>
        <ICON>io_timer.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>OCR2B7</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>OCR2B6</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>OCR2B5</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>OCR2B4</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>OCR2B3</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>OCR2B2</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>OCR2B1</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>OCR2B0</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </OCR2B>
      <OCR2A>
        <NAME>OCR2A</NAME>
        <DESCRIPTION>Timer/Counter2 Output Compare Register A</DESCRIPTION>
        <TEXT>The output compare register is an 8-bit read/write register. The Timer/Counter Output Compare Register contains the data to be continuously compared with Timer/Counter2. Actions on compare matches are specified in TCCR2. A compare match does only occur if Timer/Counter2 counts to the OCR2 value. A software write that sets TCNT2 and OCR2 to the same value does not generate a compare match. A compare match will set the compare interrupt flag in the CPU clock cycle following the compare event. Timer/Counter2 in PWM Mode When PWM mode is selected, the Timer/Counter2 either wraps (overflows) when it reaches $FF or it acts as an up/down counter. If the up/down mode is selected, the Timer/Counter2 and the Output Compare Register - OCR2 form an 8-bit, free-running, glitch-free, and phase correct PWM with outputs on the PD7(OC2) pin. If the overflow mode is selected, the Timer/Counter2 and the Output Compare Register - OCR2 form an 8-bit, free-running, and glitch-free PWM, operating with twice the speed of the up/down  counting mode. PWM Modes (Up/Down and Overflow). The two different PWM modes are selected by the CTC2 bit in the Timer/Counter Control Register - TCCR2. If CTC2 is cleared and PWM mode is selected, the Timer/Counter acts as an up/down counter, counting up from $00 to $FF, where it turns and counts down again to zero before the cycle is repeated. When the counter value matches the con-tents of the Output Compare Register, the PD7(OC2) pin is set or cleared according to the settings of the COM21/COM20 bits in the Timer/Counter Control Register TCCR2. If CTC2 is set and PWM mode is selected, the Timer/Counters will wrap and start counting from $00 after reaching $FF. The PD7(OC2) pin will be set or cleared according to the settings of COM21/COM20 on a Timer/Counter overflow or when the counter value matches the contents of the Output Compare Register. Note that in PWM mode, the value to be written to the Output Compare Register is first transferred to a temporary location, and then latched into OCR2 when the Timer/Counter reaches $FF. This prevents the occurrence of odd-length PWM pulses (glitches) in the event of an unsynchronized OCR2 write. (CTC2:COM21:COM20) Effect on Compare Pin Frequency: (0:0:0) = Not connected. (0:0:1) = Not connected. (0:1:0) = Cleared on compare match, up-counting. Set on compare match, down-counting (non-inverted PWM). f TCK0/2 /510. (0:1:1) = Cleared on compare match, down-counting. Set on compare match, up-counting (inverted PWM). f TCK0/2 /510. (1:0:0) = Not connected. (1:0:1) = Not connected. (1:1:0) = Cleared on compare match, set on overflow. f TCK0/2 /256. (1:1:1) = Set on compare match, cleared on overflow. f TCK0/</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B3</MEM_ADDR>
        <ICON>io_timer.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>OCR2A7</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>OCR2A6</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>OCR2A5</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>OCR2A4</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>OCR2A3</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>OCR2A2</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>OCR2A1</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>OCR2A0</NAME>
          <DESCRIPTION>Timer/Counter2 Output Compare Register Bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </OCR2A>
      <ASSR>
        <NAME>ASSR</NAME>
        <DESCRIPTION>Asynchronous Status Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B6</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT6>
          <NAME>EXCLK</NAME>
          <DESCRIPTION>Enable External Clock Input</DESCRIPTION>
          <TEXT>When EXCLK is written to one, and asynchronous clock is selected, the external clock input buffer is enabled and an external clock can be input on Timer Oscillator 1 (TOSC1) pin instead of a 32 kHz crystal. Writing to EXCLK should be done before asynchronous operation is selected. Note that the crystal Oscillator will only run when this bit is zero.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>AS2</NAME>
          <DESCRIPTION>Asynchronous Timer/Counter2</DESCRIPTION>
          <TEXT>When AS2 is written to zero, Timer/Counter2 is clocked from the I/O clock, clkI/O. When AS2 is written to one, Timer/Counter2 is clocked from a crystal Oscillator connected to the Timer Oscillator 1 (TOSC1) pin. When the value of AS2 is changed, the contents of TCNT2, OCR2A, OCR2B, TCCR2A and TCCR2B might be corrupted.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>TCN2UB</NAME>
          <DESCRIPTION>Timer/Counter2 Update Busy</DESCRIPTION>
          <TEXT>When Timer/Counter2 operates asynchronously and TCNT2 is written, this bit becomes set. When TCNT2 has been updated from the temporary storage register, this bit is cleared by hardware. A logical zero in this bit indicates that TCNT2 is ready to be updated with a new value.</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>OCR2AUB</NAME>
          <DESCRIPTION>Output Compare Register2 Update Busy</DESCRIPTION>
          <TEXT>When Timer/Counter2 operates asynchronously and OCR2A is written, this bit becomes set. When OCR2A has been updated from the temporary storage register, this bit is cleared by hardware. A logical zero in this bit indicates that OCR2A is ready to be updated with a new value.</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>OCR2BUB</NAME>
          <DESCRIPTION>Output Compare Register 2 Update Busy</DESCRIPTION>
          <TEXT>When Timer/Counter2 operates asynchronously and OCR2B is written, this bit becomes set. When OCR2B has been updated from the temporary storage register, this bit is cleared by hardware. A logical zero in this bit indicates that OCR2B is ready to be updated with a new value.</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>TCR2AUB</NAME>
          <DESCRIPTION>Timer/Counter Control Register2 Update Busy</DESCRIPTION>
          <TEXT>When Timer/Counter2 operates asynchronously and TCCR2A is written, this bit becomes set. When TCCR2A has been updated from the temporary storage register, this bit is cleared by hardware. A logical zero in this bit indicates that TCCR2A is ready to be updated with a new value.</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TCR2BUB</NAME>
          <DESCRIPTION>Timer/Counter Control Register2 Update Busy</DESCRIPTION>
          <TEXT>When Timer/Counter2 operates asynchronously and TCCR2B is written, this bit becomes set. When TCCR2B has been updated from the temporary storage register, this bit is cleared by hardware. A logical zero in this bit indicates that TCCR2B is ready to be updated with a new value.</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </ASSR>
      <GTCCR>
        <NAME>GTCCR</NAME>
        <DESCRIPTION>General Timer Counter Control register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$23</IO_ADDR>
        <MEM_ADDR>$43</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>TSM</NAME>
          <DESCRIPTION>Timer/Counter Synchronization Mode</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT1>
          <NAME>PSRASY</NAME>
          <ALIAS>PSR2</ALIAS>
          <DESCRIPTION>Prescaler Reset Timer/Counter2</DESCRIPTION>
          <TEXT>When this bit is one, the Timer/Counter2 prescaler will be reset. This bit is normally cleared immediately by hardware. If the bit is written when Timer/Counter2 is operating in asynchronous mode, the bit will remain one until the prescaler has been reset. The bit will not be cleared by hardware if the TSM bit is set. Refer to the description of the “Bit 7 – TSM: Timer/Counter Synchronization Mode” on page 107 for a description of the Timer/Counter Synchronization mode.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
      </GTCCR>
    </TIMER_COUNTER_2>
    <WATCHDOG>
      <LIST>[WDTCSR]</LIST>
      <LINK />
      <ICON>io_watch.bmp</ICON>
      <ID />
      <TEXT />
      <WDTCSR>
        <NAME>WDTCSR</NAME>
        <DESCRIPTION>Watchdog Timer Control Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$60</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>WDIF</NAME>
          <DESCRIPTION>Watchdog Timeout Interrupt Flag</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>WDIE</NAME>
          <DESCRIPTION>Watchdog Timeout Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>WDP3</NAME>
          <DESCRIPTION>Watchdog Timer Prescaler Bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>WDCE</NAME>
          <DESCRIPTION>Watchdog Change Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>WDE</NAME>
          <DESCRIPTION>Watch Dog Enable</DESCRIPTION>
          <TEXT>When the WDE is set (one) the Watchdog Timer is enabled, and if the WDE is cleared (zero) the Watchdog Timer function is disabled. WDE can only be cleared if the WDTOE bit is set(one). To disable an enabled watchdog timer, the following procedure must be followed: 1. In the same operation, write a logical one to WDTOE and WDE. A logical one must be written to WDE even though it is set to one before the disable operation starts. 2. Within the next four clock cycles, write a logical 0 to WDE. This disables the watchdog</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>WDP2</NAME>
          <DESCRIPTION>Watch Dog Timer Prescaler bit 2</DESCRIPTION>
          <TEXT />
          <ENUM>WDOG_TIMER_PRESCALE_4BITS</ENUM>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>WDP1</NAME>
          <DESCRIPTION>Watch Dog Timer Prescaler bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>WDP0</NAME>
          <DESCRIPTION>Watch Dog Timer Prescaler bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </WDTCSR>
    </WATCHDOG>
    <JTAG>
      <LIST>[OCDR:MCUCR:MCUSR]</LIST>
      <LINK />
      <RULES />
      <ICON>io_com.bmp</ICON>
      <ID>00</ID>
      <TEXT>JTAG Features: JTAG (IEEE std. 1149.1 compliant) Interface. Boundary-Scan Capabilities According to the IEEE std. 1149.1 (JTAG) Standard. Debugger Access to: – All Internal Peripheral Units – Internal and External RAM – The Internal Register File –Program Counter – EEPROM and Flash Memories. Extensive On-Chip Debug Support for Break Conditions, Including: –AVR Break Instruction – Break on Change of Program Memory Flow –Single Step Break –Program Memory Breakpoints on Single Address or Address Range – Data Memory Breakpoints on Single Address or Address Range. Programming of Flash, EEPROM, Fuses, and Lock Bits through the JTAG Interface. On-Chip Debugging Supported by AVR Stu</TEXT>
      <OCDR>
        <NAME>OCDR</NAME>
        <DESCRIPTION>On-Chip Debug Related Register in I/O Memory</DESCRIPTION>
        <TEXT>The OCDR register provides a communication channel from the running program in the microcontroller to the debugger. The CPU can transfer a byte to the debugger by writing to this location. At the same time, an internal flag; I/O Debug Reg-ister Dirty - IDRD - is set to indicate to the debugger that the register has been written. When the CPU reads the OCDR reg-ister the 7 LSB will be from the OCDR register, while the MSB is the IDRD bit. The debugger clears the IDRD bit when it has read the information. In some AVR devices, this register is shared with a standard I/O location. In this case, the OCDR register can only be accessed if the OCDEN fuse is programmed, and the debugger enables access to the OCDR register. In all other cases, the standard I/O location is accessed. Refer to the debugger documentation for further information on how to use this registe</TEXT>
        <IO_ADDR>$31</IO_ADDR>
        <MEM_ADDR>$51</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>OCDR7</NAME>
          <ALIAS>IDRD</ALIAS>
          <DESCRIPTION>On-Chip Debug Register Bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>OCDR6</NAME>
          <DESCRIPTION>On-Chip Debug Register Bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>OCDR5</NAME>
          <DESCRIPTION>On-Chip Debug Register Bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>OCDR4</NAME>
          <DESCRIPTION>On-Chip Debug Register Bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>OCDR3</NAME>
          <DESCRIPTION>On-Chip Debug Register Bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>OCDR2</NAME>
          <DESCRIPTION>On-Chip Debug Register Bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>OCDR1</NAME>
          <DESCRIPTION>On-Chip Debug Register Bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>OCDR0</NAME>
          <DESCRIPTION>On-Chip Debug Register Bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </OCDR>
      <MCUCR>
        <NAME>MCUCR</NAME>
        <DESCRIPTION>MCU Control Register</DESCRIPTION>
        <TEXT>The MCU Control Register contains control bits for general MCU functions.</TEXT>
        <IO_ADDR>$35</IO_ADDR>
        <MEM_ADDR>$55</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>JTD</NAME>
          <DESCRIPTION>JTAG Interface Disable</DESCRIPTION>
          <TEXT>When this bit is written to zero, the JTAG interface is enabled if the JTAGEN fuse is programmed. If this bit is written to one, the JTAG interface is disabled. In order to avoid unintentional disabling or enabling of the JTAG interface, a timed sequence must be followed: The application software must write this to the desired value twice within four cycles to change the bit.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
      </MCUCR>
      <MCUSR>
        <NAME>MCUSR</NAME>
        <DESCRIPTION>MCU Status Register</DESCRIPTION>
        <TEXT>The MCU Status Register provides information on which reset source caused an MCU reset.</TEXT>
        <IO_ADDR>$34</IO_ADDR>
        <MEM_ADDR>$54</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT4>
          <NAME>JTRF</NAME>
          <DESCRIPTION>JTAG Reset Flag</DESCRIPTION>
          <TEXT>This bit is set if a reset is being caused by a logic one in the JTAG Reset Register selected by the JTAG instruction AVR_RESET.This bit is reset by a Power-on reset,or by writing a logic zero to the flag.    </TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
      </MCUSR>
    </JTAG>
    <BOOT_LOAD>
      <LIST>[SPMCSR]</LIST>
      <LINK />
      <RULES />
      <ICON>io_cpu.bmp</ICON>
      <ID>AVRSimIOSPM.SimIOSPM</ID>
      <TEXT>The Boot Loader Support provides a real Read While Write self-programming mechanism for downloading and uploading program code by the MCU itself. This feature allows flexible application software updates controlled by the MCU using a Flash-resident Boot Loader program. The Boot Loader program can use any available data interface and associated proto-col to read code and write (program) that code into the Flash memory, or read the code from the program memory. The program code within the Boot Loader section has the capability to write into the entire Flash, including the Boot Loader Memory. The Boot Loader can thus even modify itself, and it can also erase itself from the code if the feature is not needed anymore. The size of the Boot Loader Memory is configurable with fuses and the Boot Loader has two separate sets of Boot Lock Bits which can be set independently. This gives the user a unique flexibility to select different levels of protection. Boot Loader Features: Read While Write self-programming. Flexibl Boot Memory size. High security (separate Boot Lock bits for a flexible protection).  Separate fuse to select reset vector Optimized page (1) size. Code efficient algorithm Efficient read-modify-write suppor</TEXT>
      <SPMCSR>
        <NAME>SPMCSR</NAME>
        <DESCRIPTION>Store Program Memory Control Register</DESCRIPTION>
        <TEXT>The Store Program Memory Control Register contains the control bits needed to control the Boot Loader operations.</TEXT>
        <IO_ADDR>$37</IO_ADDR>
        <MEM_ADDR>$57</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>SPMIE</NAME>
          <DESCRIPTION>SPM Interrupt Enable</DESCRIPTION>
          <TEXT>When the SPMIE bit is written to one, and the I-bit in the Status Register is set (one), the SPM ready interrupt will be enabled. The SPM ready Interrupt will be executed as long as the SPMEN bit in the SPMCR register is cleared.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>RWWSB</NAME>
          <DESCRIPTION>Read While Write Section Busy</DESCRIPTION>
          <TEXT>When a self-programming (page erase or page write) operation to the RWW section is initiated, the RWWSB will be set (one) by hardware. When the RWWSB bit is set, the RWW section cannot be accessed. The RWWSB bit will be cleared if the RWWSRE bit is written to one after a self-programming operation is completed. Alternatively the RWWSB bit will auto-matically be cleared if a page load operation is initiated.</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>SIGRD</NAME>
          <DESCRIPTION>Signature Row Read</DESCRIPTION>
          <TEXT>If this bit is written to one at the same time as SPMEN, the next LPM instruction within three clock cycles will read a byte from the signature row into the destination register. see “Reading the Signature Row from Software” in the datasheet for details. An SPM instruction within four cycles after SIGRD and SPMEN are set will have no effect. This operation is reserved for future use and should not be used.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>RWWSRE</NAME>
          <DESCRIPTION>Read While Write section read enable</DESCRIPTION>
          <TEXT>When programming (page erase or page write) to the RWW section, the RWW section is blocked for reading (the RWWSB will be set by hardware). To re-enable the RWW section, the user software must wait until the programming is completed (SPMEN will be cleared). Then, if the RWWSRE bit is written to one at the same time as SPMEN, the next SPM instruction within four clock cycles re-enables the RWW section. The RWW section cannot be re-enabled while Flash is busy with a page erase or a page write (SPMEN is set). If the RWWSRE bit is written while the Flash is being loaded, the Flash load operation will abort and the data loaded will be lo</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>BLBSET</NAME>
          <DESCRIPTION>Boot Lock Bit Set</DESCRIPTION>
          <TEXT>If this bit is written to one at the same time as SPMEN, the next SPM instruction within four clock cycles sets Boot Lock bits, according to the data in R0. The data in R1 and the address in the Z pointer are ignored. The BLBSET bit will automatically be cleared upon completion of the lock bit set, or if no SPM instruction is executed within four clock cycles. An LPM instruction within three cycles after BLBSET and SPMEN are set in the SPMCR register, will read either the Lock-bits or the Fuse bits (depending on Z0 in the Z pointer) into the destination register. See “Reading the Fuse and Lock Bits from Software” on page 235 for details</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PGWRT</NAME>
          <DESCRIPTION>Page Write</DESCRIPTION>
          <TEXT>If this bit is written to one at the same time as SPMEN, the next SPM instruction within four clock cycles executes page write, with the data stored in the temporary buffer. The page address is taken from the high part of the Z pointer. The data in R1 and R0 are ignored. The PGWRT bit will auto-clear upon completion of a page write, or if no SPM instruction is exe-cuted within four clock cycles. The CPU is halted during the entire page write operation if the NRWW section is addressed.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PGERS</NAME>
          <DESCRIPTION>Page Erase</DESCRIPTION>
          <TEXT>If this bit is written to one at the same time as SPMEN, the next SPM instruction within four clock cycles executes page erase. The page address is taken from the high part of the Z pointer. The data in R1 and R0 are ignored. The PGERS bit will auto-clear upon completion of a page erase, or if no SPM instruction is executed within four clock cycles. The CPU is halted during the entire page write operation if the NRWW section is addressed.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>SPMEN</NAME>
          <DESCRIPTION>Store Program Memory Enable</DESCRIPTION>
          <TEXT>This bit enables the SPM instruction for the next four clock cycles. If written to one together with either RWWSRE, BLB-SET, PGWRT or PGERS, the following SPM instruction will have a special meaning, see description above. If only SPMEN is written, the following SPM instruction will store the value in R1:R0 in the temporary page buffer addressed by the Z pointer. The LSB of the Z pointer is ignored. The SPMEN bit will auto-clear upon completion of an SPM instruction, or if no SPM instruction is executed within four clock cycles. During page erase and page write, the SPMEN bit remain high until the operation is completed. Writing any other combination than “10001”, "01001", "00101", "00011" or "00001" in the lower five bits will have no effec</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SPMCSR>
    </BOOT_LOAD>
    <EXTERNAL_INTERRUPT>
      <LIST>[EICRA:EIMSK:EIFR:EIRR:PCICR:PCIFR:PCMSK2:PCMSK1:PCMSK0]</LIST>
      <LINK />
      <ICON>io_ext.bmp</ICON>
      <ID />
      <TEXT />
      <EICRA>
        <NAME>EICRA</NAME>
        <DESCRIPTION>External Interrupt Control Register A</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$69</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>ISC31</NAME>
          <DESCRIPTION>External Interrupt Sense Control Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>ISC30</NAME>
          <DESCRIPTION>External Interrupt Sense Control Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>ISC21</NAME>
          <DESCRIPTION>External Interrupt Sense Control Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>ISC20</NAME>
          <DESCRIPTION>External Interrupt Sense Control Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <ENUM>INTERRUPT_SENSE_CONTROL</ENUM>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>ISC11</NAME>
          <DESCRIPTION>External Interrupt Sense Control Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>ISC10</NAME>
          <DESCRIPTION>External Interrupt Sense Control Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <ENUM>INTERRUPT_SENSE_CONTROL</ENUM>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>ISC01</NAME>
          <DESCRIPTION>External Interrupt Sense Control Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>ISC00</NAME>
          <DESCRIPTION>External Interrupt Sense Control Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <ENUM>INTERRUPT_SENSE_CONTROL</ENUM>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </EICRA>
      <EIMSK>
        <NAME>EIMSK</NAME>
        <DESCRIPTION>External Interrupt Mask Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$1D</IO_ADDR>
        <MEM_ADDR>$3D</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT3>
          <NAME>INT3</NAME>
          <DESCRIPTION>External Interrupt Request 3 Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>INT2</NAME>
          <DESCRIPTION>External Interrupt Request 2 Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>INT1</NAME>
          <DESCRIPTION>External Interrupt Request 1 Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>INT0</NAME>
          <DESCRIPTION>External Interrupt Request 0 Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </EIMSK>
      <EIFR>
        <NAME>EIFR</NAME>
        <DESCRIPTION>External Interrupt Flag Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$1C</IO_ADDR>
        <MEM_ADDR>$3C</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT3>
          <NAME>INTF3</NAME>
          <DESCRIPTION>External Interrupt Flag 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>INTF2</NAME>
          <DESCRIPTION>External Interrupt Flag 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>INTF1</NAME>
          <DESCRIPTION>External Interrupt Flag 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>INTF0</NAME>
          <DESCRIPTION>External Interrupt Flag 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </EIFR>
      <EIRR>
        <NAME>EIRR</NAME>
        <DESCRIPTION>External Interrupt Redirection Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$1A</IO_ADDR>
        <MEM_ADDR>$3A</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT3>
          <NAME>INTD3</NAME>
          <DESCRIPTION>External Interrupt 3 Direction</DESCRIPTION>
          <TEXT>0: PB1; 1: PC1</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>INTD2</NAME>
          <DESCRIPTION>External Interrupt 2 Redirection</DESCRIPTION>
          <TEXT>0: PB0; 1: PC0</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
      </EIRR>
      <PCMSK3>
        <NAME>PCMSK3</NAME>
        <DESCRIPTION>Pin Change Mask Register 3</DESCRIPTION>
        <TEXT />
        <IO_ADDR />
        <MEM_ADDR />
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>PCINT31</NAME>
          <DESCRIPTION>Pin Change Enable Mask 31</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PCINT30</NAME>
          <DESCRIPTION>Pin Change Enable Mask 30</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PCINT29</NAME>
          <DESCRIPTION>Pin Change Enable Mask 29</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PCINT28</NAME>
          <DESCRIPTION>Pin Change Enable Mask 28</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PCINT27</NAME>
          <DESCRIPTION>Pin Change Enable Mask 27</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PCINT26</NAME>
          <DESCRIPTION>Pin Change Enable Mask 26</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PCINT25</NAME>
          <DESCRIPTION>Pin Change Enable Mask 25</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PCINT24</NAME>
          <DESCRIPTION>Pin Change Enable Mask 24</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PCMSK3>
      <PCMSK2>
        <NAME>PCMSK2</NAME>
        <DESCRIPTION>Pin Change Mask Register 2</DESCRIPTION>
        <TEXT>Each PCINT23..16 bit selects whether pin change interrupt is enabled on the corresponding I/O pin. If PCINT15..8 is set and the PCIE1 bit in EIMSK is set, pin change interrupt is enabled on the corresponding I/O pin. If PCINT23..16 is cleared, pin change interrupt on the corresponding I/O pin is disabled.</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$6D</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>PCINT23</NAME>
          <DESCRIPTION>Pin Change Enable Mask 23</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PCINT22</NAME>
          <DESCRIPTION>Pin Change Enable Mask 22</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PCINT21</NAME>
          <DESCRIPTION>Pin Change Enable Mask 21</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PCINT20</NAME>
          <DESCRIPTION>Pin Change Enable Mask 20</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PCINT19</NAME>
          <DESCRIPTION>Pin Change Enable Mask 19</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PCINT18</NAME>
          <DESCRIPTION>Pin Change Enable Mask 18</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PCINT17</NAME>
          <DESCRIPTION>Pin Change Enable Mask 17</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PCINT16</NAME>
          <DESCRIPTION>Pin Change Enable Mask 16</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PCMSK2>
      <PCMSK1>
        <NAME>PCMSK1</NAME>
        <DESCRIPTION>Pin Change Mask Register 1</DESCRIPTION>
        <TEXT>Each PCINT15..8 bit selects whether pin change interrupt is enabled on the corresponding I/O pin. If PCINT15..8 is set and the PCIE1 bit in EIMSK is set, pin change interrupt is enabled on the corresponding I/O pin. If PCINT15..8 is cleared, pin change interrupt on the corresponding I/O pin is disabled.</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$6C</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>PCINT15</NAME>
          <DESCRIPTION>Pin Change Enable Mask 15</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PCINT14</NAME>
          <DESCRIPTION>Pin Change Enable Mask 14</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PCINT13</NAME>
          <DESCRIPTION>Pin Change Enable Mask 13</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PCINT12</NAME>
          <DESCRIPTION>Pin Change Enable Mask 12</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PCINT11</NAME>
          <DESCRIPTION>Pin Change Enable Mask 11</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PCINT10</NAME>
          <DESCRIPTION>Pin Change Enable Mask 10</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PCINT9</NAME>
          <DESCRIPTION>Pin Change Enable Mask 9</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PCINT8</NAME>
          <DESCRIPTION>Pin Change Enable Mask 8</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PCMSK1>
      <PCMSK0>
        <NAME>PCMSK0</NAME>
        <DESCRIPTION>Pin Change Mask Register 0</DESCRIPTION>
        <TEXT>Each PCINT bit selects whether pin change interrupt is enabled on the corresponding I/O pin. If PCINT7..0 is set and the PCIE0 bit in EIMSK is set, pin change interrupt is enabled on the corresponding I/O pin. If PCINT7..0 is cleared, pin change interrupt on the corresponding I/O pin is disabled.</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$6B</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>PCINT7</NAME>
          <DESCRIPTION>Pin Change Enable Mask 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PCINT6</NAME>
          <DESCRIPTION>Pin Change Enable Mask 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PCINT5</NAME>
          <DESCRIPTION>Pin Change Enable Mask 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PCINT4</NAME>
          <DESCRIPTION>Pin Change Enable Mask 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PCINT3</NAME>
          <DESCRIPTION>Pin Change Enable Mask 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PCINT2</NAME>
          <DESCRIPTION>Pin Change Enable Mask 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PCINT1</NAME>
          <DESCRIPTION>Pin Change Enable Mask 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PCINT0</NAME>
          <DESCRIPTION>Pin Change Enable Mask 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PCMSK0>
      <PCIFR>
        <NAME>PCIFR</NAME>
        <DESCRIPTION>Pin Change Interrupt Flag Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$1B</IO_ADDR>
        <MEM_ADDR>$3B</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT3>
          <NAME>PCIF3</NAME>
          <DESCRIPTION>Pin Change Interrupt Flag 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PCIF2</NAME>
          <DESCRIPTION>Pin Change Interrupt Flag 2</DESCRIPTION>
          <TEXT>When a logic change on any PCINT23..16 pin triggers an interrupt request, PCIF2 becomes set (one). If the I-bit in SREG and the PCIE2 bit in PCICR are set (one), the MCU will jump to the corresponding Interrupt Vector. The flag is cleared when the interrupt routine is executed. Alternatively, the flag can be cleared by writing a logical one to it.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PCIF1</NAME>
          <DESCRIPTION>Pin Change Interrupt Flag 1</DESCRIPTION>
          <TEXT>When a logic change on any PCINT14..8 pin triggers an interrupt request, PCIF1 becomes set (one). If the I-bit in SREG and the PCIE1 bit in PCICR are set (one), the MCU will jump to the corresponding Interrupt Vector. The flag is cleared when the interrupt routine is executed. Alternatively, the flag can be cleared by writing a logical one to it.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PCIF0</NAME>
          <DESCRIPTION>Pin Change Interrupt Flag 0</DESCRIPTION>
          <TEXT>When a logic change on any PCINT7..0 pin triggers an interrupt request, PCIF0 becomes set (one). If the I-bit in SREG and the PCIE0 bit in PCICR are set (one), the MCU will jump to the corresponding Interrupt Vector. The flag is cleared when the interrupt routine is executed. Alternatively, the flag can be cleared by writing a logical one to it.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PCIFR>
      <PCICR>
        <NAME>PCICR</NAME>
        <DESCRIPTION>Pin Change Interrupt Control Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$68</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT3>
          <NAME>PCIE3</NAME>
          <DESCRIPTION>Pin Change Interrupt Enable 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PCIE2</NAME>
          <DESCRIPTION>Pin Change Interrupt Enable 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PCIE1</NAME>
          <DESCRIPTION>Pin Change Interrupt Enable 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PCIE0</NAME>
          <DESCRIPTION>Pin Change Interrupt Enable 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PCICR>
    </EXTERNAL_INTERRUPT>
    <SCIB>
      <LIST>[SCICR:SCCON:SCISR:SCIIR:SCIER:SCSR:SCIBUF:SCETUH:SCETUL:SCGTH:SCGTL:SCWT3:SCWT2:SCWT1:SCWT0:SCICLK:DCCR]</LIST>
      <LINK>[SCETUH:SCETUL];[SCGTH:SCGTL]</LINK>
      <ICON>io_com.bmp</ICON>
      <ID>SCR_SCI_00</ID>
      <TEXT />
      <SCICR>
        <NAME>SCICR</NAME>
        <DESCRIPTION>Smart Card Interface Control Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$FF</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>SCIRESET</NAME>
          <DESCRIPTION>Reset Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>CARDDET</NAME>
          <DESCRIPTION>Card Presence Detector Sense</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>VCARD1</NAME>
          <DESCRIPTION>Card Voltage Selection 1</DESCRIPTION>
          <TEXT>00: 0V; 01: 1.8V; 10: 3V; 11: 5V</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>VCARD0</NAME>
          <DESCRIPTION>Card Voltage Selection 0</DESCRIPTION>
          <TEXT>00: 0V; 01: 1.8V; 10: 3V; 11: 5V</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>UART</NAME>
          <DESCRIPTION>Card UART Selection</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>WTEN</NAME>
          <DESCRIPTION>Waiting Time Counter Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>CREP</NAME>
          <DESCRIPTION>Character Repetition</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>CONV</NAME>
          <DESCRIPTION>ISO Convention</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SCICR>
      <SCCON>
        <NAME>SCCON</NAME>
        <DESCRIPTION>Smart Card Contacts Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$FE</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>CLK</NAME>
          <DESCRIPTION>Card Clock Selection</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT5>
          <NAME>CARDC8</NAME>
          <DESCRIPTION>Card C8 Pad Control</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>CARDC4</NAME>
          <DESCRIPTION>Card C4 Pad Control</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>CARDIO</NAME>
          <DESCRIPTION>Card I/O Pad Control</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>CARDCLK</NAME>
          <DESCRIPTION>Card CLK</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>CARDRST</NAME>
          <DESCRIPTION>Card RST</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>CARDVCC</NAME>
          <DESCRIPTION>Card Vcc Control</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SCCON>
      <SCISR>
        <NAME>SCISR</NAME>
        <DESCRIPTION>Smart Card UART Interface Status Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$FD</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>SCTBE</NAME>
          <DESCRIPTION>UART Transmit Buffer Empty Status</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>CARDIN</NAME>
          <DESCRIPTION>Card Presence Status</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT4>
          <NAME>VCARDOK</NAME>
          <DESCRIPTION>Card Voltage Correct Status</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>SCWTO</NAME>
          <DESCRIPTION>Waiting Time Counter Timeout Status</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>SCTC</NAME>
          <DESCRIPTION>UART Transmitted Character Status</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>SCRC</NAME>
          <DESCRIPTION>UART Received Character Status</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>SCPE</NAME>
          <DESCRIPTION>Character Reception Parity Error Status</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SCISR>
      <SCIIR>
        <NAME>SCIIR</NAME>
        <DESCRIPTION>Smart Card UART Interrupt Identification Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$FC</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>SCTBI</NAME>
          <DESCRIPTION>UART Transmit Buffer Empty Interrupt</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT4>
          <NAME>VCARDERR</NAME>
          <DESCRIPTION>Card Voltage Error Interrupt</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>SCWTI</NAME>
          <DESCRIPTION>Waiting Time Counter Timeout Interrupt</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>SCTI</NAME>
          <DESCRIPTION>UART Transmitted Character Interrupt</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>SCRI</NAME>
          <DESCRIPTION>UART Received Character Interrupt</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>SCPI</NAME>
          <DESCRIPTION>Character Reception Parity Error Interrupt</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SCIIR>
      <SCIER>
        <NAME>SCIER</NAME>
        <DESCRIPTION>Smart Card UART Interrupt Enable Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$FB</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>ESCTBI</NAME>
          <DESCRIPTION>UART Transmit Buffer Empty Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>CARDINE</NAME>
          <DESCRIPTION>Card In Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT4>
          <NAME>EVCARDER</NAME>
          <DESCRIPTION>Card Voltage Error Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>ESCWTI</NAME>
          <DESCRIPTION>Waiting Time Counter Timeout Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>ESCTI</NAME>
          <DESCRIPTION>UART Transmitted Character Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>ESCRI</NAME>
          <DESCRIPTION>UART Received Character Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>ESCPI</NAME>
          <DESCRIPTION>Character Rception Parity Error Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SCIER>
      <SCSR>
        <NAME>SCSR</NAME>
        <DESCRIPTION>Smart Card Selection Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$FA</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT6>
          <NAME>BGTEN</NAME>
          <DESCRIPTION>Block Guard Time Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT4>
          <NAME>CREPSEL</NAME>
          <DESCRIPTION>Character Repetition Selection</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>CPRESRES</NAME>
          <DESCRIPTION>Card Presence Pull-up Resistor</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
      </SCSR>
      <SCIBUF>
        <NAME>SCIBUF</NAME>
        <DESCRIPTION>Smart Card Transmit/Receive Buffer</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F9</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>SCIBUFD7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>SCIBUFD6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>SCIBUFD5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>SCIBUFD4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>SCIBUFD3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>SCIBUFD2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>SCIBUFD1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>SCIBUFD0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SCIBUF>
      <SCETUH>
        <NAME>SCETUH</NAME>
        <DESCRIPTION>Smart Card ETU Register High</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F8</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>COMP</NAME>
          <DESCRIPTION>Compensation</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT2>
          <NAME>ETU10</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>ETU9</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>ETU8</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT0>
      </SCETUH>
      <SCETUL>
        <NAME>SCETUL</NAME>
        <DESCRIPTION>Smart Card ETU Register Low</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F7</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>ETU7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>ETU6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>ETU5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>ETU4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>ETU3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>ETU2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>ETU1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>ETU0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SCETUL>
      <SCGTH>
        <NAME>SCGTH</NAME>
        <DESCRIPTION>Smart Card Gurad Time Register High</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F6</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT0>
          <NAME>GT8</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SCGTH>
      <SCGTL>
        <NAME>SCGTL</NAME>
        <DESCRIPTION>Smart Card Guard Time Register Low</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F5</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>GT7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>GT6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>GT5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>GT4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>GT3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>GT2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>GT1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>GT0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SCGTL>
      <SCWT3>
        <NAME>SCWT3</NAME>
        <DESCRIPTION>Smart Card Character/Block Waiting Time Register 3</DESCRIPTION>
        <TEXT>Works together with SCWT2, 1 and 0</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F4</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>WT31</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>WT30</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>WT29</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>WT28</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>WT27</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>WT26</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>WT25</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>WT24</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SCWT3>
      <SCWT2>
        <NAME>SCWT2</NAME>
        <DESCRIPTION>Smart Card Character/Block Waiting Time Register 2</DESCRIPTION>
        <TEXT>Works together with SCWT3, 1 and 0</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F3</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>WT23</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>WT22</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>WT21</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>WT20</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>WT19</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>WT18</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>WT17</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>WT16</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SCWT2>
      <SCWT1>
        <NAME>SCWT1</NAME>
        <DESCRIPTION>Smart Card Character/Block Waiting Time Register 1</DESCRIPTION>
        <TEXT>Works together with SCWT3, 2 and 0</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F2</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>WT15</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>WT14</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>WT13</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>WT12</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>WT11</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>WT10</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>WT9</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>WT8</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT0>
      </SCWT1>
      <SCWT0>
        <NAME>SCWT0</NAME>
        <DESCRIPTION>Smart Card Character/Block Waiting Time Register 0</DESCRIPTION>
        <TEXT>Works together with SCWT3, 2 and 1</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F1</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>WT7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>WT6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>WT5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>WT4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>WT3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>WT2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>WT1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>WT0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SCWT0>
      <SCICLK>
        <NAME>SCICLK</NAME>
        <DESCRIPTION>Smart Card Clock Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$F0</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT5>
          <NAME>SCICLK5</NAME>
          <DESCRIPTION>Clock Bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>SCICLK4</NAME>
          <DESCRIPTION>Clock Bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>SCICLK3</NAME>
          <DESCRIPTION>Clock Bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>SCICLK2</NAME>
          <DESCRIPTION>Clock Bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>SCICLK1</NAME>
          <DESCRIPTION>Clock Bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>SCICLK0</NAME>
          <DESCRIPTION>Clock Bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT0>
      </SCICLK>
      <DCCR>
        <NAME>DCCR</NAME>
        <DESCRIPTION>DCDC Converter Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$EF</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>DCON</NAME>
          <DESCRIPTION>DC/DC ON bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>DCRDY</NAME>
          <DESCRIPTION>DC/DC Ready bit</DESCRIPTION>
          <TEXT>Set by hardware when DC/DC is ready to be used</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>DCBUSY</NAME>
          <DESCRIPTION>DC/DC Busy bit</DESCRIPTION>
          <TEXT>Set by hardware when DC/DC is currently loaded. When set, please do not perform any DC/DC configuration</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
      </DCCR>
    </SCIB>
    <TIMER_COUNTER_1>
      <LIST>[TIMSK1:TIFR1:TCCR1A:TCCR1B:TCCR1C:TCNT1H:TCNT1L:OCR1AH:OCR1AL:OCR1BH:OCR1BL:ICR1H:ICR1L]</LIST>
      <LINK>[TCNT1H:TCNT1L];[OCR1AH:OCR1AL];[OCR1BH:OCR1BL];[ICR1H:ICR1L]</LINK>
      <ICON>io_timer.bmp</ICON>
      <ID>t16pwm1_13.xml</ID>
      <TEXT />
      <TIMSK1>
        <NAME>TIMSK1</NAME>
        <DESCRIPTION>Timer/Counter1 Interrupt Mask Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$6F</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT5>
          <NAME>ICIE1</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Interrupt Enable</DESCRIPTION>
          <TEXT>When the TICIE1 bit is set (one) and the I-bit in the Status Register is set (one), the Timer/Counter1 Input Capture Event Interrupt is enabled. The corresponding interrupt (at vector $003) is executed if a capture-triggering event occurs on pin  ICP, i.e., when the ICF1 bit is set in the Timer/Counter Interrupt Flag Register - TIFR.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT2>
          <NAME>OCIE1B</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare B Match Interrupt Enable</DESCRIPTION>
          <TEXT>When the OCIE1B bit is set (one) and the I-bit in the Status Register is set (one), the Timer/Counter1 CompareB Match interrupt is enabled. The corresponding interrupt  is executed if a CompareB match in Timer/Counter1 occurs, i.e., when the OCF1B bit is set in the Timer/Counter Interrupt Flag Register - TIFR.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>OCIE1A</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare A Match Interrupt Enable</DESCRIPTION>
          <TEXT>When the OCIE1A bit is set (one) and the I-bit in the Status Register is set (one), the Timer/Counter1 CompareA Match interrupt is enabled. The corresponding interrupt (at vector $004) is executed if a CompareA match in Timer/Counter1 occurs, i.e., when the OCF1A bit is set in the Timer/Counter Interrupt Flag Register - TIFR.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TOIE1</NAME>
          <DESCRIPTION>Timer/Counter1 Overflow Interrupt Enable</DESCRIPTION>
          <TEXT>When the TOIE1 bit is set (one) and the I-bit in the Status Register is set (one), the Timer/Counter1 Overflow interrupt is enabled. The corresponding interrupt  is executed if an overflow in Timer/Counter1 occurs, i.e., when the TOV1 bit is set in the Timer/Counter Interrupt Flag Register - TIFR.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TIMSK1>
      <TIFR1>
        <NAME>TIFR1</NAME>
        <DESCRIPTION>Timer/Counter Interrupt Flag register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$16</IO_ADDR>
        <MEM_ADDR>$36</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT5>
          <NAME>ICF1</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Flag</DESCRIPTION>
          <TEXT>The ICF1 bit is set (one) to flag an input capture event, indicating that the Timer/Counter1 value has been transferred to the input capture register - ICR1. ICF1 is cleared by hardware when executing the corresponding interrupt handling vector. Alternatively, ICF1 is cleared by writing a logic one to the flag. When the SREG I-bit, and TICIE1 (Timer/Counter1 Input Capture Interrupt Enable), and ICF1 are set (one), the Timer/Counter1 Capture Interrupt is executed. </TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT2>
          <NAME>OCF1B</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare B Match Flag</DESCRIPTION>
          <TEXT>The OCF1B bit is set (one) when compare match occurs between the Timer/Counter1 and the data in OCR1B - Output Compare Register 1B. OCF1B is cleared by hardware when executing the corresponding interrupt handling vector. Alterna-tively, OCF1B is cleared by writing a logic one to the flag. When the I-bit in SREG, and OCIE1A (Timer/Counter1 Compare match InterruptB Enable), and the OCF1B are set (one), the Timer/Counter1 Compare B match Interrupt is executed. </TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>OCF1A</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare A Match Flag</DESCRIPTION>
          <TEXT>The OCF1A bit is set (one) when compare match occurs between the Timer/Counter1 and the data in OCR1A - Output Compare Register 1A. OCF1A is cleared by hardware when executing the corresponding interrupt handling vector. Alterna-tively, OCF1A is cleared by writing a logic one to the flag. When the I-bit in SREG, and OCIE1A (Timer/Counter1 Compare match InterruptA Enable), and the OCF1A are set (one), the Timer/Counter1 Compare A match Interrupt is executed. </TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TOV1</NAME>
          <DESCRIPTION>Timer/Counter1 Overflow Flag</DESCRIPTION>
          <TEXT>The TOV1 is set (one) when an overflow occurs in Timer/Counter1. TOV1 is cleared by hardware when executing the cor-responding interrupt handling vector. Alternatively, TOV1 is cleared by writing a logic one to the flag. When the I-bit in SREG, and TOIE1 (Timer/Counter1 Overflow Interrupt Enable), and TOV1 are set (one), the Timer/Counter1 Overflow Interrupt is executed. In PWM mode, this bit is set when Timer/Counter1 changes counting direction at $0000.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TIFR1>
      <TCCR1A>
        <NAME>TCCR1A</NAME>
        <DESCRIPTION>Timer/Counter1 Control Register A</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$80</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>COM1A1</NAME>
          <DESCRIPTION>Compare Output Mode 1A, bit 1</DESCRIPTION>
          <TEXT>The COM1A1 and COM1A0 control bits determine any output pin action following a compare match in Timer/Counter1. Any output pin actions affect pin OC1A - Output CompareA pin 1. This is an alternative function to an I/O port and the corresponding direction control bit must be set (one) to control the output pin. The control configuration is shown in the databook. </TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>COM1A0</NAME>
          <DESCRIPTION>Comparet Ouput Mode 1A, bit 0</DESCRIPTION>
          <TEXT>The COM1A1 and COM1A0 control bits determine any output pin action following a compare match in Timer/Counter1. Any output pin actions affect pin OC1A - Output CompareA pin 1. This is an alternative function to an I/O port and the corresponding direction control bit must be set (one) to control the output pin. The control configuration is shown in the databook. </TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>COM1B1</NAME>
          <DESCRIPTION>Compare Output Mode 1B, bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>COM1B0</NAME>
          <DESCRIPTION>Comparet Ouput Mode 1B, bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT1>
          <NAME>WGM11</NAME>
          <ALIAS>PWM11</ALIAS>
          <DESCRIPTION>Pulse Width Modulator Select Bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>WGM10</NAME>
          <ALIAS>PWM10</ALIAS>
          <DESCRIPTION>Pulse Width Modulator Select Bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TCCR1A>
      <TCCR1B>
        <NAME>TCCR1B</NAME>
        <DESCRIPTION>Timer/Counter1 Control Register B</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$81</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>ICNC1</NAME>
          <DESCRIPTION>Input Capture 1 Noise Canceler</DESCRIPTION>
          <TEXT>When the ICNC1 bit is cleared (zero), the input capture trigger noise canceler function is disabled. The input capture is triggered at the first rising/falling edge sampled on the ICP - input capture pin - as specified. When the ICNC1 bit is set (one), four successive samples are measures on the ICP - input capture pin, and all samples must be high/low according to the input capture trigger specification in the ICES1 bit. The actual sampling frequency is XTAL clock frequency.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>ICES1</NAME>
          <DESCRIPTION>Input Capture 1 Edge Select</DESCRIPTION>
          <TEXT>While the ICES1 bit is cleared (zero), the Timer/Counter1 contents are transferred to the Input Capture Register - ICR1 - on the falling edge of the input capture pin - ICP. While the ICES1 bit is set (one), the Timer/Counter1 contents are transferred to the Input Capture Register - ICR1 - on the rising edge of the input capture pin - ICP.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT4>
          <NAME>WGM13</NAME>
          <DESCRIPTION>Waveform Generation Mode Bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>WGM12</NAME>
          <ALIAS>CTC1</ALIAS>
          <DESCRIPTION>Waveform Generation Mode Bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>CS12</NAME>
          <DESCRIPTION>Clock Select1 bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>CS11</NAME>
          <DESCRIPTION>Clock Select 1 bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>CS10</NAME>
          <DESCRIPTION>Clock Select bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <ENUM>CLK_SEL_3BIT_EXT</ENUM>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TCCR1B>
      <TCCR1C>
        <NAME>TCCR1C</NAME>
        <DESCRIPTION>Timer/Counter1 Control Register C</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$82</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>FOC1A</NAME>
          <DESCRIPTION>Force Output Compare for Channel A</DESCRIPTION>
          <TEXT>The FOC1A/FOC1B bits are only active when the WGM13:0 bits specifies a non-PWM mode. However, for ensuring compatibility with future devices, these bits must be set to zero when TCCR1A is written when operating in a PWM mode. When writing a logical one to the FOC1A/FOC1B bit, an immediate compare match is forced on the Waveform Generation unit. The OC1A/OC1B output is changed according to its COM1x1:0 bits setting. Note that the FOC1A/FOC1B bits are implemented as strobes. Therefore it is the value present in the COM1x1:0 bits that determine the effect of the forced compare. A FOC1A/FOC1B strobe will not generate any interrupt nor will it clear the timer in Clear Timer on Compare match (CTC) mode using OCR1A as TOP. The FOC1A/FOC1B bits are always read as zero</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>FOC1B</NAME>
          <DESCRIPTION>Force Output Compare for Channel B</DESCRIPTION>
          <TEXT>The FOC1A/FOC1B bits are only active when the WGM13:0 bits specifies a non-PWM mode. However, for ensuring compatibility with future devices, these bits must be set to zero when TCCR1A is written when operating in a PWM mode. When writing a logical one to the FOC1A/FOC1B bit, an immediate compare match is forced on the Waveform Generation unit. The OC1A/OC1B output is changed according to its COM1x1:0 bits setting. Note that the FOC1A/FOC1B bits are implemented as strobes. Therefore it is the value present in the COM1x1:0 bits that determine the effect of the forced compare. A FOC1A/FOC1B strobe will not generate any interrupt nor will it clear the timer in Clear Timer on Compare match (CTC) mode using OCR1A as TOP. The FOC1A/FOC1B bits are always read as zero</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
      </TCCR1C>
      <TCNT1H>
        <NAME>TCNT1H</NAME>
        <DESCRIPTION>Timer/Counter1 High Byte</DESCRIPTION>
        <TEXT>This 16-bit register contains the prescaled value of the 16-bit Timer/Counter1. To ensure that both the high and low bytes are read and written simultaneously when the CPU accesses these registers, the access is performed using an 8-bit temporary register (TEMP). This temporary register is also used when accessing OCR1A, OCR1B and ICR1. If the main program and also interrupt routines perform access to registers using TEMP, interrupts must be disabled during access from the main program (and from interrupt routines if interrupts are allowed from within interrupt ro</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$85</MEM_ADDR>
        <ICON>io_timer.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>TCNT1H7</NAME>
          <DESCRIPTION>Timer/Counter1 High Byte bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>TCNT1H6</NAME>
          <DESCRIPTION>Timer/Counter1 High Byte bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>TCNT1H5</NAME>
          <DESCRIPTION>Timer/Counter1 High Byte bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>TCNT1H4</NAME>
          <DESCRIPTION>Timer/Counter1 High Byte bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>TCNT1H3</NAME>
          <DESCRIPTION>Timer/Counter1 High Byte bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>TCNT1H2</NAME>
          <DESCRIPTION>Timer/Counter1 High Byte bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>TCNT1H1</NAME>
          <DESCRIPTION>Timer/Counter1 High Byte bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TCNT1H0</NAME>
          <DESCRIPTION>Timer/Counter1 High Byte bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TCNT1H>
      <TCNT1L>
        <NAME>TCNT1L</NAME>
        <DESCRIPTION>Timer/Counter1 Low Byte</DESCRIPTION>
        <TEXT>This 16-bit register contains the prescaled value of the 16-bit Timer/Counter1. To ensure that both the high and low bytes are read and written simultaneously when the CPU accesses these registers, the access is performed using an 8-bit temporary register (TEMP). This temporary register is also used when accessing OCR1A, OCR1B and ICR1. If the main program and also interrupt routines perform access to registers using TEMP, interrupts must be disabled during access from the main program (and from interrupt routines if interrupts are allowed from within interrup</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$84</MEM_ADDR>
        <ICON>io_timer.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>TCNT1L7</NAME>
          <DESCRIPTION>Timer/Counter1 Low Byte bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>TCNT1L6</NAME>
          <DESCRIPTION>Timer/Counter1 Low Byte bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>TCNT1L5</NAME>
          <DESCRIPTION>Timer/Counter1 Low Byte bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>TCNT1L4</NAME>
          <DESCRIPTION>Timer/Counter1 Low Byte bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>TCNT1L3</NAME>
          <DESCRIPTION>Timer/Counter1 Low Byte bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>TCNT1L2</NAME>
          <DESCRIPTION>Timer/Counter1 Low Byte bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>TCNT1L1</NAME>
          <DESCRIPTION>Timer/Counter1 Low Byte bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TCNT1L0</NAME>
          <DESCRIPTION>Timer/Counter1 Low Byte bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TCNT1L>
      <OCR1AH>
        <NAME>OCR1AH</NAME>
        <DESCRIPTION>Timer/Counter1 Output Compare Register A High Byte</DESCRIPTION>
        <TEXT>The output compare registers are 16-bit read/write registers. The Timer/Counter1 Output Compare Registers contain the data to be continuously compared with Timer/Counter1. Actions on compare matches are specified in the Timer/Counter1 Control and Status register.A compare match does only occur if Timer/Counter1 counts to the OCR value. A software write that sets TCNT1 and OCR1A or OCR1B to the same value does not generate a compare match. A compare match will set the compare interrupt flag in the CPU clock cycle following the compare event. Since the Output Compare Registers - OCR1A and OCR1B - are 16-bit registers, a temporary register TEMP is used when OCR1A/B are written to ensure that both bytes are updated simultaneously. When the CPU writes the high byte, OCR1AH or OCR1BH, the data is temporarily stored in the TEMP register. When the CPU writes the low byte, OCR1AL or OCR1BL, the TEMP register is simultaneously written to OCR1AH or OCR1BH. Consequently, the high byte OCR1AH or OCR1BH must be written first for a full 16-bit register write operation. The TEMP register is also used when accessing TCNT1, and ICR1. If the main program and also interrupt routines perform access to registers using TEMP, interrupts must be disabled during access from the main program (and from interrupt routines if interrupts are allowed from within interrup</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$89</MEM_ADDR>
        <ICON>io_timer.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>OCR1AH7</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>OCR1AH6</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>OCR1AH5</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>OCR1AH4</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>OCR1AH3</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>OCR1AH2</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>OCR1AH1</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>OCR1AH0</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </OCR1AH>
      <OCR1AL>
        <NAME>OCR1AL</NAME>
        <DESCRIPTION>Timer/Counter1 Output Compare Register A Low Byte</DESCRIPTION>
        <TEXT>The output compare registers are 16-bit read/write registers. The Timer/Counter1 Output Compare Registers contain the data to be continuously compared with Timer/Counter1. Actions on compare matches are specified in the Timer/Counter1 Control and Status register.A compare match does only occur if Timer/Counter1 counts to the OCR value. A software write that sets TCNT1 and OCR1A or OCR1B to the same value does not generate a compare match. A compare match will set the compare interrupt flag in the CPU clock cycle following the compare event. Since the Output Compare Registers - OCR1A and OCR1B - are 16-bit registers, a temporary register TEMP is used when OCR1A/B are written to ensure that both bytes are updated simultaneously. When the CPU writes the high byte, OCR1AH or OCR1BH, the data is temporarily stored in the TEMP register. When the CPU writes the low byte, OCR1AL or OCR1BL, the TEMP register is simultaneously written to OCR1AH or OCR1BH. Consequently, the high byte OCR1AH or OCR1BH must be written first for a full 16-bit register write operation. The TEMP register is also used when accessing TCNT1, and ICR1. If the main program and also interrupt routines perform access to registers using TEMP, interrupts must be disabled during access from the main program (and from interrupt routines if interrupts are allowed from within interru</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$88</MEM_ADDR>
        <ICON>io_timer.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>OCR1AL7</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>OCR1AL6</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>OCR1AL5</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>OCR1AL4</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>OCR1AL3</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>OCR1AL2</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>OCR1AL1</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>OCR1AL0</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </OCR1AL>
      <OCR1BH>
        <NAME>OCR1BH</NAME>
        <DESCRIPTION>Timer/Counter1 Output Compare Register B High Byte</DESCRIPTION>
        <TEXT>The output compare registers are 16-bit read/write registers. The Timer/Counter1 Output Compare Registers contain the data to be continuously compared with Timer/Counter1. Actions on compare matches are specified in the Timer/Counter1 Control and Status register.A compare match does only occur if Timer/Counter1 counts to the OCR value. A software write that sets TCNT1 and OCR1A or OCR1B to the same value does not generate a compare match. A compare match will set the compare interrupt flag in the CPU clock cycle following the compare event. Since the Output Compare Registers - OCR1A and OCR1B - are 16-bit registers, a temporary register TEMP is used when OCR1A/B are written to ensure that both bytes are updated simultaneously. When the CPU writes the high byte, OCR1AH or OCR1BH, the data is temporarily stored in the TEMP register. When the CPU writes the low byte, OCR1AL or OCR1BL, the TEMP register is simultaneously written to OCR1AH or OCR1BH. Consequently, the high byte OCR1AH or OCR1BH must be written first for a full 16-bit register write operation. The TEMP register is also used when accessing TCNT1, and ICR1. If the main program and also interrupt routines perform access to registers using TEMP, interrupts must be disabled during access from the main program (and from interrupt routines if interrupts are allowed from within interrup</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$8B</MEM_ADDR>
        <ICON>io_timer.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>OCR1BH7</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>OCR1BH6</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>OCR1BH5</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>OCR1BH4</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>OCR1BH3</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>OCR1BH2</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>OCR1BH1</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>OCR1BH0</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register High Byte bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </OCR1BH>
      <OCR1BL>
        <NAME>OCR1BL</NAME>
        <DESCRIPTION>Timer/Counter1 Output Compare Register B Low Byte</DESCRIPTION>
        <TEXT>The output compare registers are 16-bit read/write registers. The Timer/Counter1 Output Compare Registers contain the data to be continuously compared with Timer/Counter1. Actions on compare matches are specified in the Timer/Counter1 Control and Status register.A compare match does only occur if Timer/Counter1 counts to the OCR value. A software write that sets TCNT1 and OCR1A or OCR1B to the same value does not generate a compare match. A compare match will set the compare interrupt flag in the CPU clock cycle following the compare event. Since the Output Compare Registers - OCR1A and OCR1B - are 16-bit registers, a temporary register TEMP is used when OCR1A/B are written to ensure that both bytes are updated simultaneously. When the CPU writes the high byte, OCR1AH or OCR1BH, the data is temporarily stored in the TEMP register. When the CPU writes the low byte, OCR1AL or OCR1BL, the TEMP register is simultaneously written to OCR1AH or OCR1BH. Consequently, the high byte OCR1AH or OCR1BH must be written first for a full 16-bit register write operation. The TEMP register is also used when accessing TCNT1, and ICR1. If the main program and also interrupt routines perform access to registers using TEMP, interrupts must be disabled during access from the main program (and from interrupt routines if interrupts are allowed from within interru</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$8A</MEM_ADDR>
        <ICON>io_timer.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>OCR1BL7</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>OCR1BL6</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>OCR1BL5</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>OCR1BL4</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>OCR1BL3</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>OCR1BL2</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>OCR1BL1</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>OCR1BL0</NAME>
          <DESCRIPTION>Timer/Counter1 Output Compare Register Low Byte Bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </OCR1BL>
      <ICR1H>
        <NAME>ICR1H</NAME>
        <DESCRIPTION>Timer/Counter1 Input Capture Register High Byte</DESCRIPTION>
        <TEXT>The input capture register is a 16-bit read-only register. When the rising or falling edge (according to the input capture edge setting - ICES1) of the signal at the input capture pin -ICP - is detected, the current value of the Timer/Counter1 is transferred to the Input Capture Register - ICR1. At the same time, the input capture flag - ICF1 - is set (one). Since the Input Capture Register - ICR1 - is a 16-bit register, a temporary register TEMP is used when ICR1 is read to ensure that both bytes are read simultaneously. When the CPU reads the low byte ICR1L, the data is sent to the CPU and the data of the high byte ICR1H is placed in the TEMP register. When the CPU reads the data in the high byte ICR1H, the CPU receives the data in the TEMP register. Consequently, the low byte ICR1L must be accessed first for a full 16-bit register read operation. The TEMP register is also used when accessing TCNT1, OCR1A and OCR1B. If the main program and also interrupt routines perform access to registers using TEMP, interrupts must be disabled during access from the main program (and from interrupt routines if interrupts are allowed from within interrup</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$87</MEM_ADDR>
        <ICON>io_timer.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>ICR1H7</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register High Byte bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>ICR1H6</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register High Byte bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>ICR1H5</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register High Byte bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>ICR1H4</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register High Byte bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>ICR1H3</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register High Byte bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>ICR1H2</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register High Byte bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>ICR1H1</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register High Byte bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>ICR1H0</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register High Byte bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </ICR1H>
      <ICR1L>
        <NAME>ICR1L</NAME>
        <DESCRIPTION>Timer/Counter1 Input Capture Register Low Byte</DESCRIPTION>
        <TEXT>The input capture register is a 16-bit read-only register. When the rising or falling edge (according to the input capture edge setting - ICES1) of the signal at the input capture pin -ICP - is detected, the current value of the Timer/Counter1 is transferred to the Input Capture Register - ICR1. At the same time, the input capture flag - ICF1 - is set (one). Since the Input Capture Register - ICR1 - is a 16-bit register, a temporary register TEMP is used when ICR1 is read to ensure that both bytes are read simultaneously. When the CPU reads the low byte ICR1L, the data is sent to the CPU and the data of the high byte ICR1H is placed in the TEMP register. When the CPU reads the data in the high byte ICR1H, the CPU receives the data in the TEMP register. Consequently, the low byte ICR1L must be accessed first for a full 16-bit register read operation. The TEMP register is also used when accessing TCNT1, OCR1A and OCR1B. If the main program and also interrupt routines perform access to registers using TEMP, interrupts must be disabled during access from the main program (and from interrupt routines if interrupts are allowed from within inte</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$86</MEM_ADDR>
        <ICON>io_timer.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>ICR1L7</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register Low Byte bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>ICR1L6</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register Low Byte bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>ICR1L5</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register Low Byte bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>ICR1L4</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register Low Byte bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>ICR1L3</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register Low Byte bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>ICR1L2</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register Low Byte bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>ICR1L1</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register Low Byte bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>ICR1L0</NAME>
          <DESCRIPTION>Timer/Counter1 Input Capture Register Low Byte bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </ICR1L>
    </TIMER_COUNTER_1>
    <EEPROM>
      <LIST>[EEARH:EEARL:EEDR:EECR]</LIST>
      <LINK />
      <ICON>io_cpu.bmp</ICON>
      <ID />
      <TEXT>EEPROM Read/Write Access. The EEPROM access registers are accessible in the I/O space. The write access time for the EEPROM is given in Table 1. A self-timing function, however, lets the user software detect when the next byte can be written. If the user code contains instructions that write the EEPROM, some precautions must be taken. In heavily filtered power supplies, V CC is likely to rise or fall slowly on power-up/down. This causes the device for some period of time to run at a voltage lower than specified as minimum for the clock frequency used. See “Preventing EEPROM Corruption” on page 19. for details on how to avoid problems in these situations.In order to prevent unintentional EEPROM writes, a specific write procedure must be followed. Refer to the description of the EEPROM Control Register for details on this. When the EEPROM is read, the CPU is halted for four clock cycles before the next instruction is executed. When theEEPROM is written, the CPU is halted for two clock cycles before the next instruction is execute</TEXT>
      <EEARH>
        <NAME>EEARH</NAME>
        <DESCRIPTION>EEPROM Address Register Low Byte</DESCRIPTION>
        <TEXT>Bits 11..0 - EEAR11..0: EEPROM Address The EEPROM Address Registers - EEARH and EEARL specify the EEPROM address in the 4K bytes EEPROM space. The EEPROM data bytes are addressed linearly between 0 and 4096. The initial value of EEAR is undefined. A proper value must be written before the EEPROM may be accessed. </TEXT>
        <IO_ADDR>$22</IO_ADDR>
        <MEM_ADDR>$42</MEM_ADDR>
        <ICON>io_cpu.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT3>
          <NAME>EEAR11</NAME>
          <DESCRIPTION>EEPROM Read/Write Access Bit 11</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>EEAR10</NAME>
          <DESCRIPTION>EEPROM Read/Write Access Bit 10</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>EEAR9</NAME>
          <DESCRIPTION>EEPROM Read/Write Access Bit 9</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>EEAR8</NAME>
          <DESCRIPTION>EEPROM Read/Write Access Bit 8</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </EEARH>
      <EEARL>
        <NAME>EEARL</NAME>
        <DESCRIPTION>EEPROM Address Register Low Byte</DESCRIPTION>
        <TEXT>Bits 11..0 - EEAR11..0: EEPROM Address The EEPROM Address Registers - EEARH and EEARL specify the EEPROM address in the 4K bytes EEPROM space. The EEPROM data bytes are addressed linearly between 0 and 4096. The initial value of EEAR is undefined. A proper value must be written before the EEPROM may be accessed. </TEXT>
        <IO_ADDR>$21</IO_ADDR>
        <MEM_ADDR>$41</MEM_ADDR>
        <ICON>io_cpu.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>EEAR7</NAME>
          <DESCRIPTION>EEPROM Read/Write Access Bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>EEAR6</NAME>
          <DESCRIPTION>EEPROM Read/Write Access Bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>EEAR5</NAME>
          <DESCRIPTION>EEPROM Read/Write Access Bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>EEAR4</NAME>
          <DESCRIPTION>EEPROM Read/Write Access Bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>EEAR3</NAME>
          <DESCRIPTION>EEPROM Read/Write Access Bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>EEAR2</NAME>
          <DESCRIPTION>EEPROM Read/Write Access Bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>EEAR1</NAME>
          <DESCRIPTION>EEPROM Read/Write Access Bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>EEAR0</NAME>
          <DESCRIPTION>EEPROM Read/Write Access Bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </EEARL>
      <EEDR>
        <NAME>EEDR</NAME>
        <DESCRIPTION>EEPROM Data Register</DESCRIPTION>
        <TEXT>For the EEPROM write operation, the EEDR register contains the data to be written to the EEPROM in the address given by the EEAR register. For the EEPROM read operation, the EEDR contains the data read out from the EEPROM at the address given by EEAR.</TEXT>
        <IO_ADDR>$20</IO_ADDR>
        <MEM_ADDR>$40</MEM_ADDR>
        <ICON>io_cpu.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>EEDR7</NAME>
          <DESCRIPTION>EEPROM Data Register bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>EEDR6</NAME>
          <DESCRIPTION>EEPROM Data Register bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>EEDR5</NAME>
          <DESCRIPTION>EEPROM Data Register bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>EEDR4</NAME>
          <DESCRIPTION>EEPROM Data Register bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>EEDR3</NAME>
          <DESCRIPTION>EEPROM Data Register bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>EEDR2</NAME>
          <DESCRIPTION>EEPROM Data Register bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>EEDR1</NAME>
          <DESCRIPTION>EEPROM Data Register bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>EEDR0</NAME>
          <DESCRIPTION>EEPROM Data Register bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </EEDR>
      <EECR>
        <NAME>EECR</NAME>
        <DESCRIPTION>EEPROM Control Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$1F</IO_ADDR>
        <MEM_ADDR>$3F</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT5>
          <NAME>EEPM1</NAME>
          <DESCRIPTION>EEPROM Programming Mode Bit 1</DESCRIPTION>
          <TEXT>The EEPROM Programming mode bit setting defines which programming action that will be triggered when writing EEPE. It is possible to program data in one atomic operation (erase the old value and program the new value) or to split the Erase and Write operations in two different operations. The Programming times for the different modes are shown in Table 2. While EEPE is set, any write to EEPMn will be ignored. During reset, the EEPMn bits will be reset to 0b00 unless the EEPROM is busy programming.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>X</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>EEPM0</NAME>
          <DESCRIPTION>EEPROM Programming Mode Bit 0</DESCRIPTION>
          <TEXT>The EEPROM Programming mode bit setting defines which programming action that will be triggered when writing EEPE. It is possible to program data in one atomic operation (erase the old value and program the new value) or to split the Erase and Write operations in two different operations. The Programming times for the different modes are shown in Table 2. While EEPE is set, any write to EEPMn will be ignored. During reset, the EEPMn bits will be reset to 0b00 unless the EEPROM is busy programming.</TEXT>
          <ACCESS>RW</ACCESS>
          <ENUM>EEP_MODE</ENUM>
          <INIT_VAL>X</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>EERIE</NAME>
          <DESCRIPTION>EEPROM Ready Interrupt Enable</DESCRIPTION>
          <TEXT>EEPROM Ready Interrupt Enable Writing EERIE to one enables the EEPROM Ready Interrupt if the I bit in SREG is set. Writing EERIE to zero disables the interrupt. The EEPROM Ready interrupt generates a constant interrupt when EEWE is cleared.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>EEMPE</NAME>
          <DESCRIPTION>EEPROM Master Write Enable</DESCRIPTION>
          <TEXT>The EEMWE bit determines whether setting EEWE to one causes the EEPROM to be written. When EEMWE is written to one, writing EEWE to one within 4 clock cycles will write data to the EEPROM at the selected address. If EEMWE is zero, writing EEWE to one will have no effect. When EEMWE has been written to one by software, hardware clears the bit to zero after four clock cycles. See the description of the EEWE bit for an EEPROM write procedure.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>EEPE</NAME>
          <DESCRIPTION>EEPROM Write Enable</DESCRIPTION>
          <TEXT>The EEPROM Write Enable Signal EEWE is the write strobe to the EEPROM. When address and data are correctly set up, the EEWE bit must be set to write the value into the EEPROM. The EEMWE bit must be set when the logical one is written to EEWE, otherwise no EEPROM write takes place. The following procedure should be followed when writing the EEPROM (the order of steps 3 and 4 is not essential): 1. Wait until EEWE becomes zero. 2. Wait until SPMEN in SPMCR becomes zero. 3. Write new EEPROM address to EEAR (optional). 4. Write new EEPROM data to EEDR (optional). 5. Write a logical one to the EEMWE bit while writing a zero to EEWE in EECR. 6. Within four clock cycles after setting EEMWE, write a logical one to EEWE. The EEPROM can not be programmed during a CPU write to the Flash memory. The software must check that the Flash programming is completed before initiating a new EEPROM write. Step 2 is only relevant if the software contains a boot loader allowing the CPU to program the Flash. If the Flash is never being updated by the CPU, step 2 can be omitted. See “Boot Loader Support - Read While Write self-programming” on page 228 for details about boot programming. Caution: An interrupt between step 5 and step 6 will make the write cycle fail, since the EEPROM Master Write Enable will time-out. If an interrupt routine accessing the EEPROM is interrupting another EEPROM access, the EEAR or EEDR regis-ter will be modified, causing the interrupted EEPROM access to fail. It is recommended to have the global interrupt flag cleared during the 4 last steps to avoid these problems. When the write access time has elapsed, the EEWE bit is cleared by hardware. The user software can poll this bit and wait for a zero before writing the next byte. When EEWE has been set, the CPU is halted for two cycles before the next instruc-tion is executed</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>X</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>EERE</NAME>
          <DESCRIPTION>EEPROM Read Enable</DESCRIPTION>
          <TEXT>The EEPROM Read Enable Signal EERE is the read strobe to the EEPROM. When the correct address is set up in the EEAR register, the EERE bit must be written to a logic one to trigger the EEPROM read. The EEPROM read access takes one instruction, and the requested data is available immediately. When the EEPROM is read, the CPU is halted for four cycles before the next instruction is executed. The user should poll the EEWE bit before starting the read operation. If a write operation is in progress, it is neither possible to read the EEPROM, nor to change the EEAR register. The calibrated oscillator is used to time the EEPROM accesses. Table 1 lists the typical programming time for EEPROM access from the CPU</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </EECR>
    </EEPROM>
    <TWI>
      <LIST>[TWAMR:TWBR:TWCR:TWSR:TWDR:TWAR]</LIST>
      <LINK />
      <ICON>io_com.bmp</ICON>
      <ID />
      <TEXT>TWI: Simple yet powerful and flexible communications interface, only two bus lines needed. Both master and slave operation supported. Device can operate as transmitter or receiver. 7-bit address space allows up to 128 different slave addresses.  Multi-master arbitration support  Up to 400 kHz data transfer speed  Slew-rate limited output drivers  Noise suppression circuitry rejects spikes on bus lines  Fully programmable slave address with general call support  Address recognition causes wake-up when AVR is in sleep mode The Two-Wire Serial Interface (TWI) is ideally suited to typical microcontroller applications. The TWI protocol allows the systems designer to interconnect up to 128 different devices using only two bidirectional bus lines, one for clock (SCL) andone for data (SDA). The only external hardware needed to implement the bus is a single pull-up resistor for each of the TWI bus lines. All devices connected to the bus have individual addresses, and mechanisms for resolving bus contention are inherent in the TWI pr</TEXT>
      <TWAMR>
        <NAME>TWAMR</NAME>
        <DESCRIPTION>TWI (Slave) Address Mask Register</DESCRIPTION>
        <TEXT>The TWAMR can be loaded with a 7-bit Salve Address mask. Each of the bits in TWAMR can mask (disable) the corresponding address bits in the TWI Address Register (TWAR). If the mask bit is set to one then the address match logic ingnores the compare between the incomming address bit and the corresponding bit in TWAR.</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$BD</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>TWAM6</NAME>
          <ALIAS>TWAMR6</ALIAS>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>TWAM5</NAME>
          <ALIAS>TWAMR5</ALIAS>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>TWAM4</NAME>
          <ALIAS>TWAMR4</ALIAS>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>TWAM3</NAME>
          <ALIAS>TWAMR3</ALIAS>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>TWAM2</NAME>
          <ALIAS>TWAMR2</ALIAS>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>TWAM1</NAME>
          <ALIAS>TWAMR1</ALIAS>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>TWAM0</NAME>
          <ALIAS>TWAMR0</ALIAS>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
      </TWAMR>
      <TWBR>
        <NAME>TWBR</NAME>
        <DESCRIPTION>TWI Bit Rate register</DESCRIPTION>
        <TEXT>TWBR selects the division factor for the bit rate generator. The bit rate generator is a frequency divider which generates the SCL clock frequency in the master modes. See “Bit Rate Generator Unit” on page 165 for calculating bit rates.</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B8</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>TWBR7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>TWBR6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>TWBR5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>TWBR4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>TWBR3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>TWBR2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>TWBR1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TWBR0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TWBR>
      <TWCR>
        <NAME>TWCR</NAME>
        <DESCRIPTION>TWI Control Register</DESCRIPTION>
        <TEXT>The TWCR is used to control the operation of the TWI. It is used to enable the TWI, to initiate a master access by applying a START condition to the bus, to generate a receiver acknowledge, to generate a stop condition, and to control halting of the bus while the data to be written to the bus are written to the TWDR. It also indicates a write collision if data is attempted written to TWDR while the register is inaccessible.</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$BC</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>TWINT</NAME>
          <DESCRIPTION>TWI Interrupt Flag</DESCRIPTION>
          <TEXT>This bit is set by hardware when the TWI has finished its current job and expects application software response. If the I-bit in SREG and TWIE in TWCR are set, the MCU will jump to the TWI interrupt vector. While the TWINT flag is set, the SCL low period is stretched. The TWINT flag must be cleared by software by writing a logic one to it. Note that this flag is not automatically cleared by hardware when executing the interrupt routine. Also note that clearing this flag starts the operation of the TWI, so all accesses to the TWI Address Register (TWAR), TWI Status Register (TWSR), and TWI Data Register (TWDR) must be complete before clearing this flag</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>TWEA</NAME>
          <DESCRIPTION>TWI Enable Acknowledge Bit</DESCRIPTION>
          <TEXT>The TWEA bit controls the generation of the acknowledge pulse. If the TWEA bit is written to one, the ACK pulse is gener-ated on the TWI bus if the following conditions are met: 1. The device’s own slave address has been received. 2. A general call has been received, while the TWGCE bit in the TWAR is set. 3. A data byte has been received in master receiver or slave receiver mode. By writing the TWEA bit to zero, the device can be virtually disconnected from the 2-wire Serial Bus temporarily. Address recognition can then be resumed by writing the TWEA bit to one again</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>TWSTA</NAME>
          <DESCRIPTION>TWI Start Condition Bit</DESCRIPTION>
          <TEXT>The application writes the TWSTA bit to one when it desires to become a master on the 2-wire Serial Bus. The TWI hard-ware checks if the bus is available, and generates a START condition on the bus if it is free. However, if the bus is not free, the TWI waits until a STOP condition is detected, and then generates a new START condition to claim the bus Master sta-tus. TWSTA is cleared by the TWI hardware when the START condition has been transmitted.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>TWSTO</NAME>
          <DESCRIPTION>TWI Stop Condition Bit</DESCRIPTION>
          <TEXT>Writing the TWSTO bit to one in master mode will generate a STOP condition on the 2-wire Serial Bus. When the STOP condition is executed on the bus, the TWSTO bit is cleared automatically. In slave mode, setting the TWSTO bit can be used to recover from an error condition. This will not generate a STOP condition, but the TWI returns to a well-defined unaddressed slave mode and releases the SCL and SDA lines to a high impedance state.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>TWWC</NAME>
          <DESCRIPTION>TWI Write Collition Flag</DESCRIPTION>
          <TEXT>The TWWC bit is set when attempting to write to the TWI Data Register - TWDR when TWINT is low. This flag is cleared by writing the TWDR register when TWINT is high.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>TWEN</NAME>
          <DESCRIPTION>TWI Enable Bit</DESCRIPTION>
          <TEXT>The TWEN bit enables TWI operation and activates the TWI interface. When TWEN is written to one, the TWI takes control over the I/O pins connected to the SCL and SDA pins, enabling the slew-rate limiters and spike filters. If this bit is written to zero, the TWI is switched off and all TWI transmissions are terminated, regardless of any ongoing operation.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT0>
          <NAME>TWIE</NAME>
          <DESCRIPTION>TWI Interrupt Enable</DESCRIPTION>
          <TEXT>When this bit is written to one, and the I-bit in SREG is set, the TWI interrupt request will be activated for as long as the TWINT flag is high.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TWCR>
      <TWSR>
        <NAME>TWSR</NAME>
        <DESCRIPTION>TWI Status Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$B9</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>TWS7</NAME>
          <DESCRIPTION>TWI Status</DESCRIPTION>
          <TEXT>Bits 7..3: These 5 bits reflect the status of the TWI logic and the 2-Wire Serial Bus. The different status codes are described later in this chapter. Note that the value read from TWSR contains both the 5-bit status value and the 2-bit prescaler value. The application designer should consider masking the prescaler bits to zero when checking the Status bits. This makes status checking independent of prescaler setting. This approach is used in this datasheet, unless otherwise noted. If the prescaler setting remains unchanged in the application, the prescaler bits need not be masked. Instead, bit 1:0 in the values that TWSR is compared to can be modified to match the prescaler setting. This will yield more efficient c</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>TWS6</NAME>
          <DESCRIPTION>TWI Status</DESCRIPTION>
          <TEXT>Bits 7..3: These 5 bits reflect the status of the TWI logic and the 2-Wire Serial Bus. The different status codes are described later in this chapter. Note that the value read from TWSR contains both the 5-bit status value and the 2-bit prescaler value. The application designer should consider masking the prescaler bits to zero when checking the Status bits. This makes status checking independent of prescaler setting. This approach is used in this datasheet, unless otherwise noted. If the prescaler setting remains unchanged in the application, the prescaler bits need not be masked. Instead, bit 1:0 in the values that TWSR is compared to can be modified to match the prescaler setting. This will yield more efficient co</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>TWS5</NAME>
          <DESCRIPTION>TWI Status</DESCRIPTION>
          <TEXT>Bits 7..3: These 5 bits reflect the status of the TWI logic and the 2-Wire Serial Bus. The different status codes are described later in this chapter. Note that the value read from TWSR contains both the 5-bit status value and the 2-bit prescaler value. The application designer should consider masking the prescaler bits to zero when checking the Status bits. This makes status checking independent of prescaler setting. This approach is used in this datasheet, unless otherwise noted. If the prescaler setting remains unchanged in the application, the prescaler bits need not be masked. Instead, bit 1:0 in the values that TWSR is compared to can be modified to match the prescaler setting. This will yield more efficient c</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>TWS4</NAME>
          <DESCRIPTION>TWI Status</DESCRIPTION>
          <TEXT>Bits 7..3: These 5 bits reflect the status of the TWI logic and the 2-Wire Serial Bus. The different status codes are described later in this chapter. Note that the value read from TWSR contains both the 5-bit status value and the 2-bit prescaler value. The application designer should consider masking the prescaler bits to zero when checking the Status bits. This makes status checking independent of prescaler setting. This approach is used in this datasheet, unless otherwise noted. If the prescaler setting remains unchanged in the application, the prescaler bits need not be masked. Instead, bit 1:0 in the values that TWSR is compared to can be modified to match the prescaler setting. This will yield more efficient co</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>TWS3</NAME>
          <DESCRIPTION>TWI Status</DESCRIPTION>
          <TEXT>Bits 7..3: These 5 bits reflect the status of the TWI logic and the 2-Wire Serial Bus. The different status codes are described later in this chapter. Note that the value read from TWSR contains both the 5-bit status value and the 2-bit prescaler value. The application designer should consider masking the prescaler bits to zero when checking the Status bits. This makes status checking independent of prescaler setting. This approach is used in this datasheet, unless otherwise noted. If the prescaler setting remains unchanged in the application, the prescaler bits need not be masked. Instead, bit 1:0 in the values that TWSR is compared to can be modified to match the prescaler setting. This will yield more efficient co</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT1>
          <NAME>TWPS1</NAME>
          <DESCRIPTION>TWI Prescaler</DESCRIPTION>
          <TEXT>Bits 1..0: These bits can be read and written, and control the bit rate prescaler. See “Bit Rate Generator Unit” on page 165 for calculating bit rates.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TWPS0</NAME>
          <DESCRIPTION>TWI Prescaler</DESCRIPTION>
          <TEXT>Bits 1..0: These bits can be read and written, and control the bit rate prescaler. See “Bit Rate Generator Unit” on page 165 for calculating bit rates.</TEXT>
          <ACCESS>RW</ACCESS>
          <ENUM>COMM_TWI_PRESACLE</ENUM>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TWSR>
      <TWDR>
        <NAME>TWDR</NAME>
        <DESCRIPTION>TWI Data register</DESCRIPTION>
        <TEXT>In transmit mode, TWDR contains the next byte to be transmitted. In receive mode, the TWDR contains the last byte received. It is writable while the TWI is not in the process of shifting a byte. This occurs when the TWI interrupt flag (TWINT) is set by hardware. Note that the data register cannot be initialized by the user before the first interrupt occurs. The data in TWDR remains stable as long as TWINT is set. While data is shifted out, data on the bus is simultaneously shifted in. TWDR always contains the last byte present on the bus, except after a wake up from a sleep mode by the TWI interrupt. In this case, the contents of TWDR is undefined. In the case of a lost bus arbitration, no data is lost in the transi-tion from Master to Slave. Handling of the ACK bit is controlled automatically by the TWI logic, the CPU cannot access the ACK bit directl</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$BB</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>TWD7</NAME>
          <DESCRIPTION>TWI Data Register Bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>TWD6</NAME>
          <DESCRIPTION>TWI Data Register Bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>TWD5</NAME>
          <DESCRIPTION>TWI Data Register Bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>TWD4</NAME>
          <DESCRIPTION>TWI Data Register Bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>TWD3</NAME>
          <DESCRIPTION>TWI Data Register Bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>TWD2</NAME>
          <DESCRIPTION>TWI Data Register Bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>TWD1</NAME>
          <DESCRIPTION>TWI Data Register Bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TWD0</NAME>
          <DESCRIPTION>TWI Data Register Bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT0>
      </TWDR>
      <TWAR>
        <NAME>TWAR</NAME>
        <DESCRIPTION>TWI (Slave) Address register</DESCRIPTION>
        <TEXT>The TWAR should be loaded with the 7-bit slave address (in the seven most significant bits of TWAR) to which the TWI will respond when programmed as a slave transmitter or receiver, and not needed in the master modes. In multimaster sys-tems, TWAR must be set in masters which can be addressed as slaves by other masters. The LSB of TWAR is used to enable recognition of the general call address ($00). There is an associated address compar-ator that looks for the slave address (or general call address if enabled) in the received serial address. If a match is found, an interrupt request is genera</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$BA</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>TWA6</NAME>
          <DESCRIPTION>TWI (Slave) Address register Bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>TWA5</NAME>
          <DESCRIPTION>TWI (Slave) Address register Bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>TWA4</NAME>
          <DESCRIPTION>TWI (Slave) Address register Bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>TWA3</NAME>
          <DESCRIPTION>TWI (Slave) Address register Bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>TWA2</NAME>
          <DESCRIPTION>TWI (Slave) Address register Bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>TWA1</NAME>
          <DESCRIPTION>TWI (Slave) Address register Bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>TWA0</NAME>
          <DESCRIPTION>TWI (Slave) Address register Bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>TWGCE</NAME>
          <DESCRIPTION>TWI General Call Recognition Enable Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </TWAR>
    </TWI>
    <HSSPI>
      <LIST>[HSSPICFG:HSSPIIR:HSSPISR:HSSPITDR:HSSPIRDR:HSSPIGTR:HSSPIIER:HSSPICR:HSSPICNT:HSSPITOH:HSSPITOL:HSSPIDMACS:HSSPIDMADH:HSSPIDMADL:HSSPIDMAB]</LIST>
      <LINK>[HSSPITOH:HSSPITOL];[HSSPIDH:HSSPIDMADL]</LINK>
      <ICON>io_com.bmp</ICON>
      <ID>SCR_HSSPI_00</ID>
      <TEXT>High Speed SPI Module</TEXT>
      <HSSPICFG>
        <NAME>HSSPICFG</NAME>
        <DESCRIPTION>HSSPI Config Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D9</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>SPICKDIV2</NAME>
          <DESCRIPTION>SPI Clock Divider Ratio bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>SPICKDIV1</NAME>
          <DESCRIPTION>SPI Clock Divider Ratio bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>SPICKDIV0</NAME>
          <DESCRIPTION>SPI Clock Divider Ratio bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>DPRAM</NAME>
          <DESCRIPTION>DPRAM bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>HSCPHA</NAME>
          <DESCRIPTION>HighSpeed SPI Clock PHAse bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>HSCPOL</NAME>
          <DESCRIPTION>HighSpeed SPI Clock POLarity bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>HSMSTR</NAME>
          <DESCRIPTION>HighSpeed SPI Master/Slave Select bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>HSSPIEN</NAME>
          <DESCRIPTION>HighSpeed SPI Enable bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </HSSPICFG>
      <HSSPIIR>
        <NAME>HSSPIIR</NAME>
        <DESCRIPTION>HSSPI Interrupt Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$DA</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>TIMEOUT</NAME>
          <DESCRIPTION>Timeout Interrupt Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>BTD</NAME>
          <DESCRIPTION>Byte Transfer Done bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>RCVOF</NAME>
          <DESCRIPTION>Receive Overflow Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>NSSRE</NAME>
          <DESCRIPTION>NSS Rising Edge bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>NSSFE</NAME>
          <DESCRIPTION>NSS Failing Edge bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
      </HSSPIIR>
      <HSSPISR>
        <NAME>HSSPISR</NAME>
        <DESCRIPTION>HSSPI Status Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D8</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT4>
          <NAME>DPRAMRDY</NAME>
          <DESCRIPTION>DPRAM Ready bit</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>NSS</NAME>
          <DESCRIPTION>NSS bit</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>RXBUFF</NAME>
          <DESCRIPTION>Reception Buffer Full bit</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>TXBUFE</NAME>
          <DESCRIPTION>Transmission Buffer Empty bit</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>SPICKRDY</NAME>
          <DESCRIPTION>SPI Clock Ready bit</DESCRIPTION>
          <TEXT />
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </HSSPISR>
      <HSSPITDR>
        <NAME>HSSPITDR</NAME>
        <DESCRIPTION>HSSPI Transmit Data Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D7</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>HSSPITDD7</NAME>
          <DESCRIPTION>Transmit Data value bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>HSSPITDD6</NAME>
          <DESCRIPTION>Transmit Data value bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>HSSPITDD5</NAME>
          <DESCRIPTION>Transmit Data value bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>HSSPITDD4</NAME>
          <DESCRIPTION>Transmit Data value bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>HSSPITDD3</NAME>
          <DESCRIPTION>Transmit Data value bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>HSSPITDD2</NAME>
          <DESCRIPTION>Transmit Data value bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>HSSPITDD1</NAME>
          <DESCRIPTION>Transmit Data value bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>HSSPITDD0</NAME>
          <DESCRIPTION>Transmit Data value bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </HSSPITDR>
      <HSSPIRDR>
        <NAME>HSSPIRDR</NAME>
        <DESCRIPTION>HSSPI Received Data Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D6</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>HSSPIRDD7</NAME>
          <DESCRIPTION>Received Data value bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>HSSPIRDD6</NAME>
          <DESCRIPTION>Received Data value bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>HSSPIRDD5</NAME>
          <DESCRIPTION>Received Data value bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>HSSPIRDD4</NAME>
          <DESCRIPTION>Received Data value bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>HSSPIRDD3</NAME>
          <DESCRIPTION>Received Data value bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>HSSPIRDD2</NAME>
          <DESCRIPTION>Received Data value bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>HSSPIRDD1</NAME>
          <DESCRIPTION>Received Data value bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>HSSPIRDD0</NAME>
          <DESCRIPTION>Received Data value bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </HSSPIRDR>
      <HSSPIGTR>
        <NAME>HSSPIGTR</NAME>
        <DESCRIPTION>HSSPI Gaurd Time Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D5</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>HSSPIGTD7</NAME>
          <DESCRIPTION>Guard Time value bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>HSSPIGTD6</NAME>
          <DESCRIPTION>Guard Time value bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>HSSPIGTD5</NAME>
          <DESCRIPTION>Guard Time value bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>HSSPIGTD4</NAME>
          <DESCRIPTION>Guard Time value bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>HSSPIGTD3</NAME>
          <DESCRIPTION>Guard Time value bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>HSSPIGTD2</NAME>
          <DESCRIPTION>Guard Time value bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>HSSPIGTD1</NAME>
          <DESCRIPTION>Guard Time value bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>HSSPIGTD0</NAME>
          <DESCRIPTION>Guard Time value bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </HSSPIGTR>
      <HSSPIIER>
        <NAME>HSSPIIER</NAME>
        <DESCRIPTION>HSSPI Interrupt Enable Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D4</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>TIMEOUTIE</NAME>
          <DESCRIPTION>Timeout Interrupt Enable bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>BTDIE</NAME>
          <DESCRIPTION>Byte Transfer Done Interrupt Enable bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>RCVOFIE</NAME>
          <DESCRIPTION>Receive Overflow Interrupt Enable bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>NSSIE</NAME>
          <DESCRIPTION>NSS Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
      </HSSPIIER>
      <HSSPICR>
        <NAME>HSSPICR</NAME>
        <DESCRIPTION>HSSPI Control Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$DB</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT2>
          <NAME>STTTO</NAME>
          <DESCRIPTION>Start Time-Out bit</DESCRIPTION>
          <TEXT />
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>RETTO</NAME>
          <DESCRIPTION>Rearm Timeout Interrupt Enable bit</DESCRIPTION>
          <TEXT />
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>CS</NAME>
          <DESCRIPTION>HSSPI CS bit</DESCRIPTION>
          <TEXT />
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </HSSPICR>
      <HSSPICNT>
        <NAME>HSSPICNT</NAME>
        <DESCRIPTION>HSSPI Byte Count Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D3</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT4>
          <NAME>HSSPICNTD4</NAME>
          <DESCRIPTION>Number of byte received or to send bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>HSSPICNTD3</NAME>
          <DESCRIPTION>Number of byte received or to send  bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>HSSPICNTD2</NAME>
          <DESCRIPTION>Number of byte received or to send  bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>HSSPICNTD1</NAME>
          <DESCRIPTION>Number of byte received or to send bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>HSSPICNTD0</NAME>
          <DESCRIPTION>Number of byte received or to send bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </HSSPICNT>
      <HSSPITOH>
        <NAME>HSSPITOH</NAME>
        <DESCRIPTION>HSSPI Timeout High Register </DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D2</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>HSSPITOD15</NAME>
          <DESCRIPTION>Communication Timeout bit 15</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>HSSPITOD14</NAME>
          <DESCRIPTION>Communication Timeout bit 14</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>HSSPITOD13</NAME>
          <DESCRIPTION>Communication Timeout bit 13</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>HSSPITOD12</NAME>
          <DESCRIPTION>Communication Timeout bit 12</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>HSSPITOD11</NAME>
          <DESCRIPTION>Communication Timeout bit 11</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>HSSPITOD10</NAME>
          <DESCRIPTION>Communication Timeout bit 10</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>HSSPITOD9</NAME>
          <DESCRIPTION>Communication Timeout bit 9</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>HSSPITOD8</NAME>
          <DESCRIPTION>Guard Time value bit 8</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </HSSPITOH>
      <HSSPITOL>
        <NAME>HSSPITOL</NAME>
        <DESCRIPTION>HSSPI Timeout Low Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$D1</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>HSSPITOD7</NAME>
          <DESCRIPTION>Communication Timeout bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>HSSPITOD6</NAME>
          <DESCRIPTION>Communication Timeout bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>HSSPITOD5</NAME>
          <DESCRIPTION>Communication Timeout bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>HSSPITOD4</NAME>
          <DESCRIPTION>Communication Timeout bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>HSSPITOD3</NAME>
          <DESCRIPTION>Communication Timeout bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>HSSPITOD2</NAME>
          <DESCRIPTION>Communication Timeout bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>HSSPITOD1</NAME>
          <DESCRIPTION>Communication Timeout bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>HSSPITOD0</NAME>
          <DESCRIPTION>Guard Time value bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </HSSPITOL>
      <HSSPIDMACS>
        <NAME>HSSPIDMACS</NAME>
        <DESCRIPTION>HSSPI DMA Control and Status Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$DC</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT2>
          <NAME>HSSPIDMAERR</NAME>
          <DESCRIPTION>DMA Error Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>HSSPIDMADIR</NAME>
          <DESCRIPTION>DMA Direction Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>HSSPIDMAR</NAME>
          <DESCRIPTION>DMA Run Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </HSSPIDMACS>
      <HSSPIDMADH>
        <NAME>HSSPIDMADH</NAME>
        <DESCRIPTION>HSSPI DMA Address Register High</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$DE</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT5>
          <NAME>HSSPIDMAD13</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>HSSPIDMAD12</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>HSSPIDMAD11</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>HSSPIDMAD10</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>HSSPIDMAD9</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>HSSPIDMAD8</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT0>
      </HSSPIDMADH>
      <HSSPIDMADL>
        <NAME>HSSPIDMADL</NAME>
        <DESCRIPTION>HSSPI DMA Address Register Low</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$DD</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>HSSPIDMAD7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>HSSPIDMAD6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>HSSPIDMAD5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>HSSPIDMAD4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>HSSPIDMAD3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>HSSPIDMAD2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>HSSPIDMAD1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>HSSPIDMAD0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </HSSPIDMADL>
      <HSSPIDMAB>
        <NAME>HSSPIDMAB</NAME>
        <DESCRIPTION>HSSPI DMA Amount of Bytes Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$DF</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT4>
          <NAME>HSSPIDMAB4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>HSSPIDMAB3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>HSSPIDMAB2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>HSSPIDMAB1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>HSSPIDMAB0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </HSSPIDMAB>
    </HSSPI>
    <CPU>
      <LIST>[SREG:SPH:SPL:OSCCAL:PLLCR:MCUCR:MCUSR:CLKPR:SMCR:RAMPZ:GPIOR2:GPIOR1:GPIOR0:PRR0:PRR1]</LIST>
      <LINK>[SPH:SPL]</LINK>
      <ICON>io_cpu.bmp</ICON>
      <ID />
      <TEXT />
      <SREG>
        <NAME>SREG</NAME>
        <DESCRIPTION>Status Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$3F</IO_ADDR>
        <MEM_ADDR>$5F</MEM_ADDR>
        <ICON>io_sreg.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>I</NAME>
          <DESCRIPTION>Global Interrupt Enable</DESCRIPTION>
          <TEXT>The global interrupt enable bit must be set (one) for the interrupts to be enabled. The individual interrupt enable control is then performed in separate control registers. If the global interrupt enable bit is cleared (zero), none of the interrupts are enabled independent of the individual interrupt enable settings. The I-bit is cleared by hardware after an interrupt has occurred, and is set by the RETI instruction to enable subsequent interrupts.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>T</NAME>
          <DESCRIPTION>Bit Copy Storage</DESCRIPTION>
          <TEXT>The bit copy instructions BLD (Bit LoaD) and BST (Bit STore) use the T bit as source and destination for the operated bit. A bit from a register in the register file can be copied into T by the BST instruction, and a bit in T can be copied into a bit in a register in the register file by the BLD instruction.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>H</NAME>
          <DESCRIPTION>Half Carry Flag</DESCRIPTION>
          <TEXT>The half carry flag H indicates a half carry in some arithmetic operations. See the Instruction Set Description for detailed information.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>S</NAME>
          <DESCRIPTION>Sign Bit</DESCRIPTION>
          <TEXT>The S-bit is always an exclusive or between the negative flag N and the two’s complement overflow flag V. See the Instruc-tion Set Description for detailed information.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>V</NAME>
          <DESCRIPTION>Two's Complement Overflow Flag</DESCRIPTION>
          <TEXT>The two’s complement overflow flag V supports two’s complement arithmetics. See the Instruction Set Description for detailed information.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>N</NAME>
          <DESCRIPTION>Negative Flag</DESCRIPTION>
          <TEXT>The negative flag N indicates a negative result after the different arithmetic and logic operations. See the Instruction Set Description for detailed information.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>Z</NAME>
          <DESCRIPTION>Zero Flag</DESCRIPTION>
          <TEXT>The zero flag Z indicates a zero result after the different arithmetic and logic operations. See the Instruction Set Description for detailed information.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>C</NAME>
          <DESCRIPTION>Carry Flag</DESCRIPTION>
          <TEXT>The carry flag C indicates a carry in an arithmetic or logic operation. See the Instruction Set Description for detailed information. Note that the status register is not automatically stored when entering an interrupt routine and restored when returning from an interrupt routine. This must be handled by software.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SREG>
      <SPH>
        <NAME>SPH</NAME>
        <DESCRIPTION>Stack Pointer High</DESCRIPTION>
        <TEXT>The general AVR 16-bit Stack Pointer is effectively built up of two 8-bit registers in the I/O space locations $3E ($5E) and $3D ($5D). As the AT90S4414/8515 supports up to 64 kB external SRAM, all 16-bits are used. The Stack Pointer points to the data SRAM stack area where the Subroutine and Interrupt Stacks are located. This Stack space in the data SRAM must be defined by the program before any subroutine calls are executed or interrupts are enabled. The stack pointer must be set to point above $60. The Stack Pointer is decremented by one when data is pushed onto the Stack with the PUSH instruction, and it is decremented by two when an address is pushed onto the Stack with subroutine calls and interrupts. The Stack Pointer is incremented by one when data is popped from the Stack with the POP instruction, and it is incremented by two when an address is popped from the Stack with return from subroutine RET or return from interrupt R</TEXT>
        <IO_ADDR>$3E</IO_ADDR>
        <MEM_ADDR>$5E</MEM_ADDR>
        <ICON>io_sph.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT4>
          <NAME>SP12</NAME>
          <DESCRIPTION>Stack pointer bit 12</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>SP11</NAME>
          <DESCRIPTION>Stack pointer bit 11</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>SP10</NAME>
          <DESCRIPTION>Stack pointer bit 10</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>SP9</NAME>
          <DESCRIPTION>Stack pointer bit 9</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>SP8</NAME>
          <DESCRIPTION>Stack pointer bit 8</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SPH>
      <SPL>
        <NAME>SPL</NAME>
        <DESCRIPTION>Stack Pointer Low</DESCRIPTION>
        <TEXT>The general AVR 16-bit Stack Pointer is effectively built up of two 8-bit registers in the I/O space locations $3E ($5E) and $3D ($5D). As the AT90S4414/8515 supports up to 64 kB external SRAM, all 16-bits are used. The Stack Pointer points to the data SRAM stack area where the Subroutine and Interrupt Stacks are located. This Stack space in the data SRAM must be defined by the program before any subroutine calls are executed or interrupts are enabled. The stack pointer must be set to point above $60. The Stack Pointer is decremented by one when data is pushed onto the Stack with the PUSH instruction, and it is decremented by two when an address is pushed onto the Stack with subroutine calls and interrupts. The Stack Pointer is incremented by one when data is popped from the Stack with the POP instruction, and it is incremented by two when an address is popped from the Stack with return from subroutine RET or return from interrupt </TEXT>
        <IO_ADDR>$3D</IO_ADDR>
        <MEM_ADDR>$5D</MEM_ADDR>
        <ICON>io_sph.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>SP7</NAME>
          <DESCRIPTION>Stack pointer bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>SP6</NAME>
          <DESCRIPTION>Stack pointer bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>SP5</NAME>
          <DESCRIPTION>Stack pointer bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>SP4</NAME>
          <DESCRIPTION>Stack pointer bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>SP3</NAME>
          <DESCRIPTION>Stack pointer bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>SP2</NAME>
          <DESCRIPTION>Stack pointer bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>SP1</NAME>
          <DESCRIPTION>Stack pointer bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>SP0</NAME>
          <DESCRIPTION>Stack pointer bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT0>
      </SPL>
      <OSCCAL>
        <NAME>OSCCAL</NAME>
        <DESCRIPTION>Oscillator Calibration Value</DESCRIPTION>
        <TEXT>Writing the calibration byte to this address will trim the internal oscillator to remove process variations from the oscillator frequency. This is done automatically during chip reset. When OSCCAL is zero, the lowest available frequency is chosen. Writing non-zero values to this register will increase the frequency of the internal oscillator. Writing $FF to the register gives the highest available frequency. The calibrated oscillator is used to time EEPROM and Flash access. If EEPROM or Flash is written, do not calibrate to more than 10% above the nominal frequency. Otherwise, the EEPROM or Flash write may fail. Note that the Oscillator is intended for calibration to 1.0 MHz, 2.0 MHz, 4.0 MHz, or 8.0MHz. Tuning to other values is not guaranteed, as indicated in Table 14</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$66</MEM_ADDR>
        <ICON>io_cpu.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>CAL7</NAME>
          <DESCRIPTION>Oscillator Calibration Value Bit7</DESCRIPTION>
          <TEXT />
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>CAL6</NAME>
          <DESCRIPTION>Oscillator Calibration Value Bit6</DESCRIPTION>
          <TEXT />
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>CAL5</NAME>
          <DESCRIPTION>Oscillator Calibration Value Bit5</DESCRIPTION>
          <TEXT />
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>CAL4</NAME>
          <DESCRIPTION>Oscillator Calibration Value Bit4</DESCRIPTION>
          <TEXT />
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>CAL3</NAME>
          <DESCRIPTION>Oscillator Calibration Value Bit3</DESCRIPTION>
          <TEXT />
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>CAL2</NAME>
          <DESCRIPTION>Oscillator Calibration Value Bit2</DESCRIPTION>
          <TEXT />
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>CAL1</NAME>
          <DESCRIPTION>Oscillator Calibration Value Bit1</DESCRIPTION>
          <TEXT />
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>CAL0</NAME>
          <DESCRIPTION>Oscillator Calibration Value Bit0</DESCRIPTION>
          <TEXT />
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </OSCCAL>
      <PLLCR>
        <NAME>PLLCR</NAME>
        <DESCRIPTION>Phase Lock Loop Control Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$62</MEM_ADDR>
        <ICON>io_cpu.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>PLLMUX</NAME>
          <DESCRIPTION>PLL Clock Multiplexer Control Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT1>
          <NAME>LOCK</NAME>
          <DESCRIPTION>PLL Lock Bit Signal</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>ON</NAME>
          <DESCRIPTION>PLL Start Bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PLLCR>
      <MCUCR>
        <NAME>MCUCR</NAME>
        <DESCRIPTION>MCU Control Register</DESCRIPTION>
        <TEXT>The MCU Control Register contains control bits for general MCU functions.</TEXT>
        <IO_ADDR>$35</IO_ADDR>
        <MEM_ADDR>$55</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>JTD</NAME>
          <DESCRIPTION>JTAG Interface Disable</DESCRIPTION>
          <TEXT>When this bit is zero, the JTAG interface is enabled if the JTAGEN Fuse is programmed.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>BODS</NAME>
          <DESCRIPTION>BOD Power Down in Sleep</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>BODSE</NAME>
          <DESCRIPTION>BOD Power Down in Sleep Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PUD</NAME>
          <DESCRIPTION>Pull-up disable</DESCRIPTION>
          <TEXT>When this bit is written to one,the pull-ups in the I/O ports are disabled even if the DDxn and PORTxn registers are configured to enable the pull-ups ({DDxn,PORTxn}=0b01).      </TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT1>
          <NAME>IVSEL</NAME>
          <DESCRIPTION>Interrupt Vector Select</DESCRIPTION>
          <TEXT>When the IVSEL bit is cleared (zero),the interrupt vectors are placed at the start of the Flash memory.When this bit is set (one),the interrupt vectors are moved to the beginning of the Boot Loader section of the flash.The actual address of the start of the boot flash section is determined by the BOOTSZ fuses.      </TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>IVCE</NAME>
          <DESCRIPTION>Interrupt Vector Change Enable</DESCRIPTION>
          <TEXT>The IVCE bit must be written to logic one to enable change of the IVSEL bit.IVCE is cleared by hardware four cycles after it is written or when IVSEL is written.Setting the IVCE bit will disable interrupts.      </TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </MCUCR>
      <MCUSR>
        <NAME>MCUSR</NAME>
        <DESCRIPTION>MCU Status Register</DESCRIPTION>
        <TEXT>The MCU Status Register provides information on which reset source caused an MCU reset.</TEXT>
        <IO_ADDR>$34</IO_ADDR>
        <MEM_ADDR>$54</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT4>
          <NAME>JTRF</NAME>
          <DESCRIPTION>JTAG Reset Flag</DESCRIPTION>
          <TEXT>This bit is set if a reset is being caused by a logic one in the JTAG Reset Register selected by the JTAG instruction AVR_RESET. This bit is reset by a Power-on reset, or by writing a logic zero to the flag. • Bit 3 - WDRF: Watchdog Reset Flag</TEXT>
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>WDRF</NAME>
          <DESCRIPTION>Watchdog Reset Flag</DESCRIPTION>
          <TEXT>This bit is set if a watchdog reset occurs. The bit is reset by a power-on reset, or by writing a logic zero to the flag.</TEXT>
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>BORF</NAME>
          <DESCRIPTION>Brown-out Reset Flag</DESCRIPTION>
          <TEXT>This bit is set if a brown-out reset occurs. The bit is reset by a power-on reset, or by writing a logic zero to the flag.</TEXT>
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>EXTRF</NAME>
          <DESCRIPTION>External Reset Flag</DESCRIPTION>
          <TEXT>This bit is set if an external reset occurs. The bit is reset by a power-on reset, or by writing a logic zero to the flag.</TEXT>
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PORF</NAME>
          <DESCRIPTION>Power-on reset flag</DESCRIPTION>
          <TEXT>This bit is set if a power-on reset occurs. The bit is reset only by writing a logic zero to the flag. To make use of the reset flags to identify a reset condition, the user should read and then reset the MCUCSR as early as possible in the program. If the register is cleared before another reset occurs, the source of the reset can be found by examining the reset flags.</TEXT>
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </MCUSR>
      <CLKPR>
        <NAME>CLKPR</NAME>
        <DESCRIPTION />
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$61</MEM_ADDR>
        <ICON>io_cpu.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>CLKPCE</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS />
          <INIT_VAL />
        </BIT7>
        <BIT3>
          <NAME>CLKPS3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS />
          <ENUM>CPU_CLK_PRESCALE_4_BITS_SMALL</ENUM>
          <INIT_VAL />
        </BIT3>
        <BIT2>
          <NAME>CLKPS2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS />
          <INIT_VAL />
        </BIT2>
        <BIT1>
          <NAME>CLKPS1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS />
          <INIT_VAL />
        </BIT1>
        <BIT0>
          <NAME>CLKPS0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS />
          <INIT_VAL />
        </BIT0>
      </CLKPR>
      <SMCR>
        <NAME>SMCR</NAME>
        <DESCRIPTION>Sleep Mode Control Register</DESCRIPTION>
        <TEXT>The Sleep Mode Control Register contains control bits for power management.</TEXT>
        <IO_ADDR>$33</IO_ADDR>
        <MEM_ADDR>$53</MEM_ADDR>
        <ICON>io_cpu.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT3>
          <NAME>SM2</NAME>
          <DESCRIPTION>Sleep Mode Select bit 2</DESCRIPTION>
          <TEXT>These bits select between the five available sleep modes.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>SM1</NAME>
          <DESCRIPTION>Sleep Mode Select bit 1</DESCRIPTION>
          <TEXT>These bits select between the five available sleep modes.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>SM0</NAME>
          <DESCRIPTION>Sleep Mode Select bit 0</DESCRIPTION>
          <TEXT>These bits select between the five available sleep modes.</TEXT>
          <ACCESS>RW</ACCESS>
          <ENUM>CPU_SLEEP_MODE_3BITS</ENUM>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>SE</NAME>
          <DESCRIPTION>Sleep Enable</DESCRIPTION>
          <TEXT>The SE bit must be written to logic one to make the MCU enter the sleep mode when the SLEEP instruction is executed.To</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SMCR>
      <RAMPZ>
        <NAME>RAMPZ</NAME>
        <DESCRIPTION>RAM Page Z Select Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$3B</IO_ADDR>
        <MEM_ADDR>$5B</MEM_ADDR>
        <ICON>io_cpu.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT0>
          <NAME>RAMPZ0</NAME>
          <DESCRIPTION>RAM Page Z Select Register Bit 0</DESCRIPTION>
          <TEXT>The RAMPZ register is normally used to select which 64K RAM Page is accessed by the Z pointer.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </RAMPZ>
      <GPIOR2>
        <NAME>GPIOR2</NAME>
        <DESCRIPTION>General Purpose IO Register 2</DESCRIPTION>
        <TEXT>The ATmega169 contains three General Purpose I/O Registers.These registers can be used for storing any information, and they are particularly useful for storing global variables and status flags.General Purpose I/O Registers within the address range $00 -$1F are directly bit-accessible using the SBI,CBI,SBIS,and SBIC instructions.     </TEXT>
        <IO_ADDR>$2B</IO_ADDR>
        <MEM_ADDR>$4B</MEM_ADDR>
        <ICON>io_cpu.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>GPIOR27</NAME>
          <DESCRIPTION>General Purpose IO Register 2 bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>GPIOR26</NAME>
          <DESCRIPTION>General Purpose IO Register 2 bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>GPIOR25</NAME>
          <DESCRIPTION>General Purpose IO Register 2 bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>GPIOR24</NAME>
          <DESCRIPTION>General Purpose IO Register 2 bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>GPIOR23</NAME>
          <DESCRIPTION>General Purpose IO Register 2 bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>GPIOR22</NAME>
          <DESCRIPTION>General Purpose IO Register 2 bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>GPIOR21</NAME>
          <DESCRIPTION>General Purpose IO Register 2 bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>GPIOR20</NAME>
          <DESCRIPTION>General Purpose IO Register 2 bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </GPIOR2>
      <GPIOR1>
        <NAME>GPIOR1</NAME>
        <DESCRIPTION>General Purpose IO Register 1</DESCRIPTION>
        <TEXT>The ATmega169 contains three General Purpose I/O Registers.These registers can be used for storing any information, and they are particularly useful for storing global variables and status flags.General Purpose I/O Registers within the address range $00 -$1F are directly bit-accessible using the SBI,CBI,SBIS,and SBIC instructions.     </TEXT>
        <IO_ADDR>$2A</IO_ADDR>
        <MEM_ADDR>$4A</MEM_ADDR>
        <ICON>io_cpu.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>GPIOR17</NAME>
          <DESCRIPTION>General Purpose IO Register 1 bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>GPIOR16</NAME>
          <DESCRIPTION>General Purpose IO Register 1 bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>GPIOR15</NAME>
          <DESCRIPTION>General Purpose IO Register 1 bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>GPIOR14</NAME>
          <DESCRIPTION>General Purpose IO Register 1 bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>GPIOR13</NAME>
          <DESCRIPTION>General Purpose IO Register 1 bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>GPIOR12</NAME>
          <DESCRIPTION>General Purpose IO Register 1 bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>GPIOR11</NAME>
          <DESCRIPTION>General Purpose IO Register 1 bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>GPIOR10</NAME>
          <DESCRIPTION>General Purpose IO Register 1 bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </GPIOR1>
      <GPIOR0>
        <NAME>GPIOR0</NAME>
        <DESCRIPTION>General Purpose IO Register 0</DESCRIPTION>
        <TEXT>The ATmega169 contains three General Purpose I/O Registers.These registers can be used for storing any information, and they are particularly useful for storing global variables and status flags.General Purpose I/O Registers within the address range $00 -$1F are directly bit-accessible using the SBI,CBI,SBIS,and SBIC instructions.     </TEXT>
        <IO_ADDR>$1E</IO_ADDR>
        <MEM_ADDR>$3E</MEM_ADDR>
        <ICON>io_cpu.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>GPIOR07</NAME>
          <DESCRIPTION>General Purpose IO Register 0 bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>GPIOR06</NAME>
          <DESCRIPTION>General Purpose IO Register 0 bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>GPIOR05</NAME>
          <DESCRIPTION>General Purpose IO Register 0 bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>GPIOR04</NAME>
          <DESCRIPTION>General Purpose IO Register 0 bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>GPIOR03</NAME>
          <DESCRIPTION>General Purpose IO Register 0 bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>GPIOR02</NAME>
          <DESCRIPTION>General Purpose IO Register 0 bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>GPIOR01</NAME>
          <DESCRIPTION>General Purpose IO Register 0 bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>GPIOR00</NAME>
          <DESCRIPTION>General Purpose IO Register 0 bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </GPIOR0>
      <PRR1>
        <NAME>PRR1</NAME>
        <DESCRIPTION>Power Reduction Register1</DESCRIPTION>
        <TEXT>The Power Reduction Register, PRR, provides a method to stop the clock to individual peripherals to reduce power consumption.</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$65</MEM_ADDR>
        <ICON>io_cpu.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT5>
          <NAME>PRKB</NAME>
          <DESCRIPTION>Power Reduction Keyboard</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PRAES</NAME>
          <DESCRIPTION>Power Reduction AES Module</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PRSCI</NAME>
          <DESCRIPTION>Power Reduction Smart Card Interface</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PRHSSPI</NAME>
          <DESCRIPTION>Power Reduction High-Speed SPI</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PRUSB</NAME>
          <DESCRIPTION>Power Reduction USB Device</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PRUSBH</NAME>
          <DESCRIPTION>Power Reduction USB Host Controller</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PRR1>
      <PRR0>
        <NAME>PRR0</NAME>
        <DESCRIPTION>Power Reduction Register0</DESCRIPTION>
        <TEXT>The Power Reduction Register, PRR, provides a method to stop the clock to individual peripherals to reduce power consumption.</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$64</MEM_ADDR>
        <ICON>io_cpu.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>PRTWI</NAME>
          <DESCRIPTION>Power Reduction TWI</DESCRIPTION>
          <TEXT />
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PRTIM2</NAME>
          <DESCRIPTION>Power Reduction Timer/Counter2</DESCRIPTION>
          <TEXT />
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PRTIM0</NAME>
          <DESCRIPTION>Power Reduction Timer/Counter0</DESCRIPTION>
          <TEXT />
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT3>
          <NAME>PRTIM1</NAME>
          <DESCRIPTION>Power Reduction Timer/Counter1</DESCRIPTION>
          <TEXT />
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PRSPI</NAME>
          <DESCRIPTION>Power Reduction Serial Peripheral Interface</DESCRIPTION>
          <TEXT />
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PRUSART0</NAME>
          <DESCRIPTION>Power Reduction USART 0</DESCRIPTION>
          <TEXT />
          <ACCESS>R/W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
      </PRR0>
    </CPU>
    <SPI>
      <LIST>[SPDR:SPSR:SPCR]</LIST>
      <LINK />
      <ICON>io_com.bmp</ICON>
      <ID>SPI_01</ID>
      <TEXT>The Serial Peripheral Interface (SPI) allows high-speed synchronous data transfer between the device and peripheral devices or between several AVR devices. The SPI includes the following features: • Full-duplex, 3-wire Synchronous Data Transfer • Master or Slave Operation • LSB First or MSB First Data Transfer • Seven Programmable Bit Rates • End of Transmission Interrupt Flag • Write Collision Flag Protection • Wake-up from Idle Mode • Double Speed (CK/2) Master SPI Mode</TEXT>
      <SPDR>
        <NAME>SPDR</NAME>
        <DESCRIPTION>SPI Data Register</DESCRIPTION>
        <TEXT>The SPI Data Register is a read/write register used for data transfer between the register file and the SPI Shift register. Writing to the register initiates data transmission. Reading the register causes the Shift Register Receive buffer to be read.</TEXT>
        <IO_ADDR>$2E</IO_ADDR>
        <MEM_ADDR>$4E</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>SPDR7</NAME>
          <DESCRIPTION>SPI Data Register bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>X</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>SPDR6</NAME>
          <DESCRIPTION>SPI Data Register bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>X</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>SPDR5</NAME>
          <DESCRIPTION>SPI Data Register bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>X</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>SPDR4</NAME>
          <DESCRIPTION>SPI Data Register bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>X</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>SPDR3</NAME>
          <DESCRIPTION>SPI Data Register bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>X</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>SPDR2</NAME>
          <DESCRIPTION>SPI Data Register bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>X</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>SPDR1</NAME>
          <DESCRIPTION>SPI Data Register bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>SPDR0</NAME>
          <DESCRIPTION>SPI Data Register bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SPDR>
      <SPSR>
        <NAME>SPSR</NAME>
        <DESCRIPTION>SPI Status Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$2D</IO_ADDR>
        <MEM_ADDR>$4D</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>SPIF</NAME>
          <DESCRIPTION>SPI Interrupt Flag</DESCRIPTION>
          <TEXT>When a serial transfer is complete, the SPIF bit is set (one) and an interrupt is generated if SPIE in SPCR is set (one) and global interrupts are enabled. If SS is an input and is driven low when the SPI is in master mode, this will also set the SPIF flag. SPIF is cleared by hardware when executing the corresponding interrupt handling vector. Alternatively, the SPIF bit is cleared by first reading the SPI status register when SPIF is set (one), then accessing the SPI Data Register (SPDR).</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>WCOL</NAME>
          <DESCRIPTION>Write Collision Flag</DESCRIPTION>
          <TEXT>The WCOL bit is set if the SPI data register (SPDR) is written during a data transfer. The WCOL bit (and the SPIF bit) are cleared (zero) by first reading the SPI Status Register when WCOL is set (one), and then accessing the SPI Data Register.</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT0>
          <NAME>SPI2X</NAME>
          <DESCRIPTION>Double SPI Speed Bit</DESCRIPTION>
          <TEXT>When this bit is written logic one the SPI speed (SCK Frequency) will be doubled when the SPI is in master mode (see Table 71). This means that the minimum SCK period will be 2 CPU clock periods. When the SPI is configured as Slave, the SPI is only guaranteed to work at f ck / 4 or lower. The SPI interface on the ATmega104 is also used for program memory and EEPROM downloading or uploading. See page 253 for serial programming and verification.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SPSR>
      <SPCR>
        <NAME>SPCR</NAME>
        <DESCRIPTION>SPI Control Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$2C</IO_ADDR>
        <MEM_ADDR>$4C</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>SPIE</NAME>
          <DESCRIPTION>SPI Interrupt Enable</DESCRIPTION>
          <TEXT>This bit causes the SPI interrupt to be executed if SPIF bit in the SPSR register is set and the global interrupts are enabled.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>SPE</NAME>
          <DESCRIPTION>SPI Enable</DESCRIPTION>
          <TEXT>When the SPE bit is set (one), the SPI is enabled. This bit must be set to enable any SPI operations.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>DORD</NAME>
          <DESCRIPTION>Data Order</DESCRIPTION>
          <TEXT>When the DORD bit is set (one), the LSB of the data word is transmitted first. When the DORD bit is cleared (zero), the MSB of the data word is transmitted first.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>MSTR</NAME>
          <DESCRIPTION>Master/Slave Select</DESCRIPTION>
          <TEXT>This bit selects Master SPI mode when set (one), and Slave SPI mode when cleared (zero). If SS is configured as an input and is driven low while MSTR is set, MSTR will be cleared, and SPIF in SPSR will become set. The user will then have to set MSTR to re-enable SPI master mode.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>CPOL</NAME>
          <DESCRIPTION>Clock polarity</DESCRIPTION>
          <TEXT>When this bit is set (one), SCK is high when idle. When CPOL is cleared (zero), SCK is low when idle. Refer to Figure 36 and Figure 37 for additional information.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>CPHA</NAME>
          <DESCRIPTION>Clock Phase</DESCRIPTION>
          <TEXT>Refer to Figure 36 or Figure 37 for the functionality of this bit.</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>SPR1</NAME>
          <DESCRIPTION>SPI Clock Rate Select 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>SPR0</NAME>
          <DESCRIPTION>SPI Clock Rate Select 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <ENUM>COMM_SCK_RATE_3BIT</ENUM>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SPCR>
    </SPI>
    <AES>
      <LIST>[AESCR:AESACR:AESADDR:AESDR]</LIST>
      <LINK />
      <ICON>io_com.bmp</ICON>
      <ID>SCR_AES_00</ID>
      <TEXT>AES128/256 encryption/decryption module</TEXT>
      <AESCR>
        <NAME>AESCR</NAME>
        <DESCRIPTION>AES Control Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$78</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>AESIE</NAME>
          <DESCRIPTION>AES Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>AESIF</NAME>
          <DESCRIPTION>AES Interrupt Flag</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>AUTOKEY</NAME>
          <DESCRIPTION>Encrypt/Decrypt Automatic Key Generator Mode</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>KEYGN</NAME>
          <DESCRIPTION>Key Generation Mode</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>KS</NAME>
          <DESCRIPTION>Key Selection bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT1>
          <NAME>ENCRYPT</NAME>
          <DESCRIPTION>Encryption/Decryption bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>AESGO</NAME>
          <DESCRIPTION>AES Run bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </AESCR>
      <AESACR>
        <NAME>AESACR</NAME>
        <DESCRIPTION>AES Access Control Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$79</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT3>
          <NAME>XOR</NAME>
          <DESCRIPTION>XOR mode</DESCRIPTION>
          <TEXT>This mode is designed to support CBC mode</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>MANINC</NAME>
          <DESCRIPTION>Manual Increment bit</DESCRIPTION>
          <TEXT>Writing a 1 to this bit disable the read of any other bit in this AESACR register</TEXT>
          <ACCESS>W</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>AUTOINC</NAME>
          <DESCRIPTION>Automatic Increment bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>KD</NAME>
          <DESCRIPTION>Key/Data bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </AESACR>
      <AESADDR>
        <NAME>AESADDR</NAME>
        <DESCRIPTION>AES Address Register</DESCRIPTION>
        <TEXT>According to AESACR.KD value, the Address points to Key or data registers. If AESACR.AUTOINC is set, writing AESDR register automatically increment this register. Writing this AESADDR register automatically update AESDR register.</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$7A</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>ADDR7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>ADDR6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>ADDR5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>ADDR4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>ADDR3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>ADDR2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>ADDR1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>ADDR0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </AESADDR>
      <AESDR>
        <NAME>AESDR</NAME>
        <DESCRIPTION>AES Data Register</DESCRIPTION>
        <TEXT>According to AESACR.KD value, the data displayed is Key or Data. If AESACR.AUTOINC is set, writing this register automatically increment AESADDR register. Updating AESADDR register automatically update this register to the newly pointed register in AES memory</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$7B</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>DATA7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>DATA6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>DATA5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>DATA4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>DATA3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>DATA2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>DATA1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>DATA0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </AESDR>
    </AES>
    <KB>
      <LIST>[KBFR:KBER:KBLSR]</LIST>
      <LINK />
      <ICON>io_com.bmp</ICON>
      <ID>SCR_KB_00</ID>
      <TEXT>Keyboard Control Module</TEXT>
      <KBFR>
        <NAME>KBFR</NAME>
        <DESCRIPTION>KeyBoard Flag Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$8F</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>KBF7</NAME>
          <DESCRIPTION>KeyBoard Flag for KbIN7 pin</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>KBF6</NAME>
          <DESCRIPTION>KeyBoard Flag for KbIN6 pin</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>KBF5</NAME>
          <DESCRIPTION>KeyBoard Flag for KbIN5 pin</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>KBF4</NAME>
          <DESCRIPTION>KeyBoard Flag for KbIN4 pin</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>KBF3</NAME>
          <DESCRIPTION>KeyBoard Flag for KbIN3 pin</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>KBF2</NAME>
          <DESCRIPTION>KeyBoard Flag for KbIN2 pin</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>KBF1</NAME>
          <DESCRIPTION>KeyBoard Flag for KbIN1 pin</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>KBF0</NAME>
          <DESCRIPTION>KeyBoard Flag for KbIN0 pin</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </KBFR>
      <KBER>
        <NAME>KBER</NAME>
        <DESCRIPTION>KeyBoard Enable Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$8E</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>KBE7</NAME>
          <DESCRIPTION>KeyBoard KbIN7 Enable bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>KBE6</NAME>
          <DESCRIPTION>KeyBoard KbIN6 Enable bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>KBE5</NAME>
          <DESCRIPTION>KeyBoard KbIN5 Enable bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>KBE4</NAME>
          <DESCRIPTION>KeyBoard KbIN4 Enable bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>KBE3</NAME>
          <DESCRIPTION>KeyBoard KbIN3 Enable bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>KBE2</NAME>
          <DESCRIPTION>KeyBoard KbIN2 Enable bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>KBE1</NAME>
          <DESCRIPTION>KeyBoard KbIN1 Enable bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>KBE0</NAME>
          <DESCRIPTION>KeyBoard KbIN0 Enable bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </KBER>
      <KBLSR>
        <NAME>KBLSR</NAME>
        <DESCRIPTION>KeyBoard Level Selection Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$8D</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>KBLS7</NAME>
          <DESCRIPTION>KeyBoard KbIN7 Level Selection bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>KBLS6</NAME>
          <DESCRIPTION>KeyBoard KbIN6 Level Selection bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>KBLS5</NAME>
          <DESCRIPTION>KeyBoard KbIN5 Level Selection bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>KBLS4</NAME>
          <DESCRIPTION>KeyBoard KbIN4 Level Selection bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>KBLS3</NAME>
          <DESCRIPTION>KeyBoard KbIN3 Level Selection bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>KBLS2</NAME>
          <DESCRIPTION>KeyBoard KbIN2 Level Selection bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>KBLS1</NAME>
          <DESCRIPTION>KeyBoard KbIN1 Level Selection bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>KBLS0</NAME>
          <DESCRIPTION>KeyBoard KbIN0 Level Selection bit</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </KBLSR>
    </KB>
    <RNG>
      <LIST>[RNGCR:LFSR3:LFSR2:LFSR1:LFSR0:RDWDR]</LIST>
      <LINK />
      <ICON>io_com.bmp</ICON>
      <ID>SCR_RNG_00</ID>
      <TEXT>Random Number Generator</TEXT>
      <RNGCR>
        <NAME>RNGCR</NAME>
        <DESCRIPTION>Random Number Generator Control Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$95</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT0>
          <NAME>ROSCE</NAME>
          <DESCRIPTION>Random Oscillator Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </RNGCR>
      <LFSR3>
        <NAME>LFSR3</NAME>
        <DESCRIPTION>Initialization Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$94</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>LFSD31</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 31</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT7>
        <BIT6>
          <NAME>LFSD30</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 30</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT6>
        <BIT5>
          <NAME>LFSD29</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 29</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT5>
        <BIT4>
          <NAME>LFSD28</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 28</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT4>
        <BIT3>
          <NAME>LFSD27</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 27</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT3>
        <BIT2>
          <NAME>LFSD26</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 26</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT2>
        <BIT1>
          <NAME>LFSD25</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 25</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT1>
        <BIT0>
          <NAME>LFSD24</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 24</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT0>
      </LFSR3>
      <LFSR2>
        <NAME>LFSR2</NAME>
        <DESCRIPTION>Initialization Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$93</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>LFSD23</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 23</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT7>
        <BIT6>
          <NAME>LFSD22</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 22</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT6>
        <BIT5>
          <NAME>LFSD21</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 21</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT5>
        <BIT4>
          <NAME>LFSD20</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 20</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT4>
        <BIT3>
          <NAME>LFSD19</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 19</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT3>
        <BIT2>
          <NAME>LFSD18</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 18</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT2>
        <BIT1>
          <NAME>LFSD17</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 17</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT1>
        <BIT0>
          <NAME>LFSD16</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 16</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT0>
      </LFSR2>
      <LFSR1>
        <NAME>LFSR1</NAME>
        <DESCRIPTION>Initialization Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$92</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>LFSD15</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 15</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT7>
        <BIT6>
          <NAME>LFSD14</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 14</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT6>
        <BIT5>
          <NAME>LFSD13</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 13</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT5>
        <BIT4>
          <NAME>LFSD12</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 12</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT4>
        <BIT3>
          <NAME>LFSD11</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 11</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT3>
        <BIT2>
          <NAME>LFSD10</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 10</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT2>
        <BIT1>
          <NAME>LFSD9</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 9</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT1>
        <BIT0>
          <NAME>LFSD8</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 8</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT0>
      </LFSR1>
      <LFSR0>
        <NAME>LFSR0</NAME>
        <DESCRIPTION>Initialization Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$91</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>LFSD7</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT7>
        <BIT6>
          <NAME>LFSD6</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT6>
        <BIT5>
          <NAME>LFSD5</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT5>
        <BIT4>
          <NAME>LFSD4</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT4>
        <BIT3>
          <NAME>LFSD3</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT3>
        <BIT2>
          <NAME>LFSD2</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT2>
        <BIT1>
          <NAME>LFSD1</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT1>
        <BIT0>
          <NAME>LFSD0</NAME>
          <DESCRIPTION>Current LFSR Generator Value bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
        </BIT0>
      </LFSR0>
      <RDWDR>
        <NAME>RDWDR</NAME>
        <DESCRIPTION>Random Word Data Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$90</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>RDD7</NAME>
          <DESCRIPTION>Random Word Generator Result Value bit 7</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
        </BIT7>
        <BIT6>
          <NAME>RDD6</NAME>
          <DESCRIPTION>Random Word Generator Result Value bit 6</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
        </BIT6>
        <BIT5>
          <NAME>RDD5</NAME>
          <DESCRIPTION>Random Word Generator Result Value bit 5</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
        </BIT5>
        <BIT4>
          <NAME>RDD4</NAME>
          <DESCRIPTION>Random Word Generator Result Value bit 4</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
        </BIT4>
        <BIT3>
          <NAME>RDD3</NAME>
          <DESCRIPTION>Random Word Generator Result Value bit 3</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
        </BIT3>
        <BIT2>
          <NAME>RDD2</NAME>
          <DESCRIPTION>Random Word Generator Result Value bit 2</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
        </BIT2>
        <BIT1>
          <NAME>RDD1</NAME>
          <DESCRIPTION>Random Word Generator Result Value bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
        </BIT1>
        <BIT0>
          <NAME>RDD0</NAME>
          <DESCRIPTION>Random Word Generator Result Value bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
        </BIT0>
      </RDWDR>
    </RNG>
    <USB_HOST>
      <LIST>[UHCR:UHSR:UHINT:UHIEN:UHADDR:UHFNUMH:UHFNUML:UHFLEN:UPNUM:UPRST:UPCRX:UPCFG0X:UPCFG1X:UPCFG2X:UPSTAX:UPINRQX:UPERRX:UPINTX:UPIENX:UPDATX:UPBCXH:UPBCXL:UPINT]</LIST>
      <LINK>[UHFNUMH:UHFNUML];[UPBCXH:UPBCXL]</LINK>
      <ICON>io_com.bmp</ICON>
      <ID>SCR_Usb_Host_00</ID>
      <TEXT />
      <UHCR>
        <NAME>UHCR</NAME>
        <DESCRIPTION>USB Host Control Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$9E</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>UHEN</NAME>
          <DESCRIPTION>USB Host Enable</DESCRIPTION>
          <TEXT>1: Connect CC4/CC8 to USB Host block outputs</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PAD1</NAME>
          <DESCRIPTION>With PAD0, Select Pad type for USB Host</DESCRIPTION>
          <TEXT>must = 0</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PAD0</NAME>
          <DESCRIPTION>With PAD1, Select Pad type for USB Host</DESCRIPTION>
          <TEXT>0: USB2.0 pull-down attached;1: Direct access to outside</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>FRZCLK</NAME>
          <DESCRIPTION>Cut the 48Mhz clock into the controller. Reduce consumption but avoid all communication</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT4>
        <BIT2>
          <NAME>RESUME</NAME>
          <DESCRIPTION>Generate a USB Resume on USB bus</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>RESET</NAME>
          <DESCRIPTION>Send USB Reset on USB bus</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>SOFEN</NAME>
          <DESCRIPTION>Generate Start Of Frame on USB bus</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UHCR>
      <UHSR>
        <NAME>UHSR</NAME>
        <DESCRIPTION>USB Host Status Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$99</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT3>
          <NAME>SPEED</NAME>
          <DESCRIPTION>Speed Status Flag</DESCRIPTION>
          <TEXT>1: Full-Speed; 0: Low-Speed</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>1</INIT_VAL>
        </BIT3>
      </UHSR>
      <UHINT>
        <NAME>UHINT</NAME>
        <DESCRIPTION>USB Host Interrupt Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$9F</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT6>
          <NAME>HWUPI</NAME>
          <DESCRIPTION>Host Wake-Up Interrupt</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>HSOFI</NAME>
          <DESCRIPTION>Host Start Of Frame Interrupt</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>RXRSMI</NAME>
          <DESCRIPTION>Upstream Resume Received Interrupt</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>RSMEDI</NAME>
          <DESCRIPTION>Downstream Resume Sent Interrupt</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>RSTI</NAME>
          <DESCRIPTION>USB Reset Sent Interrupt</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>DDISCI</NAME>
          <DESCRIPTION>Device Disconnection Interrupt</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>DCONNI</NAME>
          <DESCRIPTION>Device Connection Interrupt</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UHINT>
      <UHIEN>
        <NAME>UHIEN</NAME>
        <DESCRIPTION>USB Host Interrupt Enable Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A0</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT6>
          <NAME>HWUPE</NAME>
          <DESCRIPTION>Host Wake-Up Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>HSOFE</NAME>
          <DESCRIPTION>Host Start Of Frame Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>RXRSME</NAME>
          <DESCRIPTION>Upstream Resume Received Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>RSMEDE</NAME>
          <DESCRIPTION>Downstream Resume Sent Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>RSTE</NAME>
          <DESCRIPTION>USB Reset Sent Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>DDISCE</NAME>
          <DESCRIPTION>Device Disconnection Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>DCONNE</NAME>
          <DESCRIPTION>Device Connection Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UHIEN>
      <UHADDR>
        <NAME>UHADDR</NAME>
        <DESCRIPTION>USB Host Address Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A1</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT6>
          <NAME>HADDR6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>HADDR5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>HADDR4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>HADDR3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>HADDR2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>HADDR1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>HADDR0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UHADDR>
      <UHFNUMH>
        <NAME>USB Host Frame Number Register High</NAME>
        <DESCRIPTION />
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A3</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT2>
          <NAME>FNUM10</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>FNUM9</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>FNUM8</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UHFNUMH>
      <UHFNUML>
        <NAME>UHFNUML</NAME>
        <DESCRIPTION>USB Host Frame Number Register Low</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A2</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>FNUM7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>FNUM6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>FNUM5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>FNUM4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>FNUM3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>FNUM2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>FNUM1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>FNUM0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UHFNUML>
      <UHFLEN>
        <NAME>UHFLEN</NAME>
        <DESCRIPTION>USB Host Frame Length Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A4</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>FLEN7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>FLEN6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>FLEN5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>FLEN4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>FLEN3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>FLEN2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>FLEN1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>FLEN0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UHFLEN>
      <UPNUM>
        <NAME>UPNUM</NAME>
        <DESCRIPTION>USB Pipe Number Register</DESCRIPTION>
        <TEXT>Select the pipe to configure, control</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A7</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT1>
          <NAME>PNUM1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PNUM0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UPNUM>
      <UPRST>
        <NAME>UPRST</NAME>
        <DESCRIPTION>USB Pipe Reset Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A8</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT3>
          <NAME>P3RST</NAME>
          <DESCRIPTION>If Set, Pipe 3 is reset</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>P2RST</NAME>
          <DESCRIPTION>If Set, Pipe 2 is reset</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>P1RST</NAME>
          <DESCRIPTION>If Set, Pipe 1 is reset</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>P0RST</NAME>
          <DESCRIPTION>If Set, Pipe 0 is reset</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UPRST>
      <UPCRX>
        <NAME>UPCRX</NAME>
        <DESCRIPTION>USB Pipe Control Register for Pipe X</DESCRIPTION>
        <TEXT>UPNUM must have been update to the pipe to control previously</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A9</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT6>
          <NAME>PFREEZE</NAME>
          <DESCRIPTION>Pipe Freeze</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>INMODE</NAME>
          <DESCRIPTION>IN Request Mode</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT3>
          <NAME>RSTDT</NAME>
          <DESCRIPTION>Reset Data Toggle</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT0>
          <NAME>PEN</NAME>
          <DESCRIPTION>Pipe Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UPCRX>
      <UPCFG0X>
        <NAME>UPCFG0X</NAME>
        <DESCRIPTION>USB Pipe Configuration Register 0 for Pipe X</DESCRIPTION>
        <TEXT>UPNUM must have been update to the pipe to control previously</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$AA</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>PTYPE1</NAME>
          <DESCRIPTION>Pipe Type together with PTYPE0 bit</DESCRIPTION>
          <TEXT>00:Control; 01:Isochronous;10:Bulk;11:Interrupt</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PTYPE0</NAME>
          <DESCRIPTION>Pipe Type together with PTYPE1 bit</DESCRIPTION>
          <TEXT>00:Control; 01:Isochronous;10:Bulk;11:Interrupt</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PTOKEN1</NAME>
          <DESCRIPTION>Pipe Token together with PTOKEN0</DESCRIPTION>
          <TEXT>00:SETUP;01:IN;10:OUT;11:Reserved</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PTOKEN0</NAME>
          <DESCRIPTION>Pipe Token together with PTOKEN1</DESCRIPTION>
          <TEXT>00:SETUP;01:IN;10:OUT;11:Reserved</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PEPNUM3</NAME>
          <DESCRIPTION>Pipe Endpoint Number3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PEPNUM2</NAME>
          <DESCRIPTION>Pipe Endpoint Number2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PEPNUM1</NAME>
          <DESCRIPTION>Pipe Endpoint Number1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PEPNUM0</NAME>
          <DESCRIPTION>Pipe Endpoint Number0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UPCFG0X>
      <UPCFG1X>
        <NAME>UPCFG1X</NAME>
        <DESCRIPTION>USB Pipe Configuration Register 1 for Pipe X</DESCRIPTION>
        <TEXT>UPNUM must have been update to the pipe to control previously</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$AB</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT6>
          <NAME>PSIZE2</NAME>
          <DESCRIPTION>Pipe Size 2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PSIZE1</NAME>
          <DESCRIPTION>Pipe Size 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PSIZE0</NAME>
          <DESCRIPTION>Pipe Size0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PBK1</NAME>
          <DESCRIPTION>Pipe Bank1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PBK0</NAME>
          <DESCRIPTION>Pipe Bank0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>ALLOC</NAME>
          <DESCRIPTION>Configure Pipe Memory</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
      </UPCFG1X>
      <UPCFG2X>
        <NAME>UPCFG2X</NAME>
        <DESCRIPTION>US Pipe Configuration Register 2 for Pipe X</DESCRIPTION>
        <TEXT>UPNUM must have been update to the pipe to control previously</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$AD</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>INTFRQ7</NAME>
          <DESCRIPTION>Interrupt Pipe Request Frequency7</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>INTFRQ6</NAME>
          <DESCRIPTION>Interrupt Pipe Request Frequency6</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>INTFRQ5</NAME>
          <DESCRIPTION>Interrupt Pipe Request Frequency5</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>INTFRQ4</NAME>
          <DESCRIPTION>Interrupt Pipe Request Frequency4</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>INTFRQ3</NAME>
          <DESCRIPTION>Interrupt Pipe Request Frequency3</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>INTFRQ2</NAME>
          <DESCRIPTION>Interrupt Pipe Request Frequency2</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>INTFRQ1</NAME>
          <DESCRIPTION>Interrupt Pipe Request Frequency1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>INTFRQ0</NAME>
          <DESCRIPTION>Interrupt Pipe Request Frequency0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UPCFG2X>
      <UPSTAX>
        <NAME>UPSTAX</NAME>
        <DESCRIPTION>USB Pipe Status Register for Pipe X</DESCRIPTION>
        <TEXT>UPNUM must have been update to the pipe to control previously</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$AC</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>CFGOK</NAME>
          <DESCRIPTION>Configure Pipe Memory OK</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>OVERFI</NAME>
          <DESCRIPTION>Overflow</DESCRIPTION>
          <TEXT>shall be cleared by sofware</TEXT>
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>UNDERFI</NAME>
          <DESCRIPTION>Underflow</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT3>
          <NAME>DTSEQ1</NAME>
          <DESCRIPTION>Toggle Sequencing Flag1</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>DTSEQ0</NAME>
          <DESCRIPTION>Toggle Sequencing Flag0</DESCRIPTION>
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>NBUSYBK1</NAME>
          <DESCRIPTION>Busy Bank Flag1</DESCRIPTION>
          <TEXT>00: All Banks free, 01: 1 busy bank, 10: 2 busy banks, 11: Reserved</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>NBUSYBK0</NAME>
          <DESCRIPTION>Busy Bank Flag0</DESCRIPTION>
          <TEXT>00: All Banks free, 01: 1 busy bank, 10: 2 busy banks, 11: Reserved</TEXT>
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UPSTAX>
      <UPINRQX>
        <NAME>UPINRQX</NAME>
        <DESCRIPTION>USB Pipe IN Reequest Register for Pipe X</DESCRIPTION>
        <TEXT>UPNUM must have been update to the pipe to control previously</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A5</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>INRQ7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>INRQ6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>INRQ5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>INRQ4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>INRQ3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>INRQ2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>INRQ1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>INRQ0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UPINRQX>
      <UPERRX>
        <NAME>UPERRX</NAME>
        <DESCRIPTION>USB Pipe Error Register for Pipe X</DESCRIPTION>
        <TEXT>UPNUM must have been update to the pipe to control previously</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$9D</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT6>
          <NAME>COUNTER1</NAME>
          <DESCRIPTION>Error Counter1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>COUNTER0</NAME>
          <DESCRIPTION>Error Counter0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>CRC16</NAME>
          <DESCRIPTION>CRC16 Error</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PTIMEOUT</NAME>
          <DESCRIPTION>Pipe Time-Out Error</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PID</NAME>
          <DESCRIPTION>PID Error</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>DATAPID</NAME>
          <DESCRIPTION>Data PID Error</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>DATATGL</NAME>
          <DESCRIPTION>Bad Data Toggle</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UPERRX>
      <UPINTX>
        <NAME>UPINTX</NAME>
        <DESCRIPTION>USB Pipe Interrupt Register for Pipe X</DESCRIPTION>
        <TEXT>UPNUM must have been update to the pipe to control previously</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$A6</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>FIFOCON</NAME>
          <DESCRIPTION>FIFO Control</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>NAKEDI</NAME>
          <DESCRIPTION>NAK Handshake received</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>RWAL</NAME>
          <DESCRIPTION>Read/Write Allowed</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PERRI</NAME>
          <DESCRIPTION>Pipe Error</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>TXSTPI</NAME>
          <DESCRIPTION>SETUP Bank Ready</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>TXOUTI</NAME>
          <DESCRIPTION>OUT Bank Ready</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>RXSTALLI</NAME>
          <DESCRIPTION>STALL Received/Isochronous CRC Error</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>RXINI</NAME>
          <DESCRIPTION>IN Data Received</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UPINTX>
      <UPIENX>
        <NAME>UPIENX</NAME>
        <DESCRIPTION>USB Pipe Interrupt Enable Register for Pipe X</DESCRIPTION>
        <TEXT>UPNUM must have been update to the pipe to control previously</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$AE</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>FLERRE</NAME>
          <DESCRIPTION>Flow Error Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>NAKEDE</NAME>
          <DESCRIPTION>NAK Handshake Received Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT4>
          <NAME>PERRE</NAME>
          <DESCRIPTION>PIPE Error Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>TXSTPE</NAME>
          <DESCRIPTION>SETUP Bank Ready Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>TXOUTE</NAME>
          <DESCRIPTION>OUT Bank Ready Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>RXSTALLE</NAME>
          <DESCRIPTION>STALL Received Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>RXINE</NAME>
          <DESCRIPTION>In Data Received Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UPIENX>
      <UPDATX>
        <NAME>UPDATX</NAME>
        <DESCRIPTION>USB Pipe Data Register for Pipe X</DESCRIPTION>
        <TEXT>UPNUM must have been update to the pipe to control previously</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$AF</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>PDAT7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PDAT6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PDAT5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PDAT4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PDAT3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PDAT2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PDAT1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PDAT0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UPDATX>
      <UPBCXH>
        <NAME>UPBCXH</NAME>
        <DESCRIPTION>USB Pipe Byte Count High Register for Pipe X</DESCRIPTION>
        <TEXT>UPNUM must have been update to the pipe to control previously</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$9C</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT2>
          <NAME>PBYTCT10</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PBYTCT9</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PBYTCT8</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UPBCXH>
      <UPBCXL>
        <NAME>UPBCXL</NAME>
        <DESCRIPTION>USB Pipe Byte Count Low Register for Pipe X</DESCRIPTION>
        <TEXT>UPNUM must have been update to the pipe to control previously</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$9B</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>PBYTCT7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PBYTCT6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PBYTCT5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PBYTCT4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PBYTCT3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PBYTCT2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PBYTCT1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PBYTCT0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UPBCXL>
      <UPINT>
        <NAME>UPINT</NAME>
        <DESCRIPTION>USB Pipe Interrupt Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$9A</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT3>
          <NAME>PINT3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PINT2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PINT1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PINT0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </UPINT>
    </USB_HOST>
    <LED>
      <LIST>[LEDCR]</LIST>
      <LINK />
      <ICON>io_com.bmp</ICON>
      <ID>SCR_LED_00</ID>
      <TEXT>LED Control Module</TEXT>
      <LEDCR>
        <NAME>LEDCR</NAME>
        <DESCRIPTION>LED Control Register</DESCRIPTION>
        <TEXT />
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$75</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT7>
          <NAME>LED31</NAME>
          <DESCRIPTION>LED 3 Port Configuration Bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>lED30</NAME>
          <DESCRIPTION>LED 3 Port Configuration Bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>LED21</NAME>
          <DESCRIPTION>LED 2 Port Configuration Bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>LED20</NAME>
          <DESCRIPTION>LED 2 Port Configuration Bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>LED11</NAME>
          <DESCRIPTION>LED 1 Port Configuration Bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>LED10</NAME>
          <DESCRIPTION>LED 1 Port Configuration Bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>LED01</NAME>
          <DESCRIPTION>LED 0 Port Configuration Bit 1</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>LED00</NAME>
          <DESCRIPTION>LED 0 Port Configuration Bit 0</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </LEDCR>
    </LED>
    <Supply_Monitor>
      <LIST>[SMONCR]</LIST>
      <LINK />
      <ICON>io_com.bmp</ICON>
      <ID>SCR_SUPPLYMONITOR_00</ID>
      <TEXT>Supply Monitor Module</TEXT>
      <SMONCR>
        <NAME>SMONCR</NAME>
        <DESCRIPTION>Supply Monitor Control Register</DESCRIPTION>
        <TEXT>Indicates whether the supply voltage level drops below a certain value</TEXT>
        <IO_ADDR>NA</IO_ADDR>
        <MEM_ADDR>$63</MEM_ADDR>
        <ICON>io_com.bmp</ICON>
        <DISPLAY_BITS>Y</DISPLAY_BITS>
        <BIT4>
          <NAME>SMONIF</NAME>
          <DESCRIPTION>Supply Monitor Interrupt Flag</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT1>
          <NAME>SMONIE</NAME>
          <DESCRIPTION>Supply Monitor Interrupt Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>SMONEN</NAME>
          <DESCRIPTION>Supply Monitor Enable</DESCRIPTION>
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </SMONCR>
    </Supply_Monitor>
    <PORTE>
      <LIST>[PORTE:DDRE:PINE]</LIST>
      <LINK />
      <ICON>io_port.bmp</ICON>
      <ID>AVRSimIOPort.SimIOPort</ID>
      <TEXT />
      <PORTE>
        <NAME>PORTE</NAME>
        <DESCRIPTION>Data Register, Port E</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$0E</IO_ADDR>
        <MEM_ADDR>$2E</MEM_ADDR>
        <ICON>io_port.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>PORTE7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PORTE6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PORTE5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PORTE4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PORTE3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PORTE2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PORTE1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PORTE0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PORTE>
      <DDRE>
        <NAME>DDRE</NAME>
        <DESCRIPTION>Data Direction Register, Port E</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$0D</IO_ADDR>
        <MEM_ADDR>$2D</MEM_ADDR>
        <ICON>io_flag.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>DDE7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>DDE6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>DDE5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>DDE4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>DDE3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>DDE2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>DDE1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>DDE0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>RW</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </DDRE>
      <PINE>
        <NAME>PINE</NAME>
        <DESCRIPTION>Input Pins, Port E</DESCRIPTION>
        <TEXT />
        <IO_ADDR>$0C</IO_ADDR>
        <MEM_ADDR>$2C</MEM_ADDR>
        <ICON>io_port.bmp</ICON>
        <DISPLAY_BITS>N</DISPLAY_BITS>
        <BIT7>
          <NAME>PINE7</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT7>
        <BIT6>
          <NAME>PINE6</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT6>
        <BIT5>
          <NAME>PINE5</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT5>
        <BIT4>
          <NAME>PINE4</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT4>
        <BIT3>
          <NAME>PINE3</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT3>
        <BIT2>
          <NAME>PINE2</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT2>
        <BIT1>
          <NAME>PINE1</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT1>
        <BIT0>
          <NAME>PINE0</NAME>
          <DESCRIPTION />
          <TEXT />
          <ACCESS>R</ACCESS>
          <INIT_VAL>0</INIT_VAL>
        </BIT0>
      </PINE>
    </PORTE>
  </IO_MODULE>
  <ICE_SETTINGS>
    <MODULE_LIST>[ICE50:JTAGICEmkII:AVRISPmkII]</MODULE_LIST>
    <ICE50>
      <MMU_ACCESS>
        <MemTypeSram8Bit>0x05</MemTypeSram8Bit>
        <MemTypeSram16Bit>0x0F</MemTypeSram16Bit>
        <MemTypeSramShdw8Bit>0x0F</MemTypeSramShdw8Bit>
        <MemTypeSramShdw16Bit>0x0F</MemTypeSramShdw16Bit>
        <MemTypeEeprom>0x05</MemTypeEeprom>
        <MemTypeProgram>0x05</MemTypeProgram>
        <MemTypePrgEventBreak>0x05</MemTypePrgEventBreak>
        <MemTypePrgEventTrigOut>0x05</MemTypePrgEventTrigOut>
        <MemTypePrgEventTraceCtrl>0x05</MemTypePrgEventTraceCtrl>
        <MemTypePrgEventComplex>0x05</MemTypePrgEventComplex>
        <MemTypeSramEventLow>0x05</MemTypeSramEventLow>
        <MemTypeSramEventHigh>0x05</MemTypeSramEventHigh>
        <MemTypeEepromEvent>0x05</MemTypeEepromEvent>
        <MemTypeRegisterEvent>0x0F</MemTypeRegisterEvent>
        <MemTypeIoEvent>0x0F</MemTypeIoEvent>
        <MemTypePreTrace>0x0F</MemTypePreTrace>
        <MemTypeTrace>0x15</MemTypeTrace>
        <MemTypeCoreShdw>0x14</MemTypeCoreShdw>
        <MemTypeCoreMem>0x14</MemTypeCoreMem>
      </MMU_ACCESS>
      <MMU_NOXRAM>
        <MemTypeSram8Bit>0x000010FF</MemTypeSram8Bit>
        <MemTypeSram16Bit>0x00000000</MemTypeSram16Bit>
        <MemTypeSramShdw8Bit>0x00000000</MemTypeSramShdw8Bit>
        <MemTypeSramShdw16Bit>0x00000000</MemTypeSramShdw16Bit>
        <MemTypeEeprom>0x000007FF</MemTypeEeprom>
        <MemTypeProgram>0x0000FFFF</MemTypeProgram>
        <MemTypePrgEventBreak>0x00007FFF</MemTypePrgEventBreak>
        <MemTypePrgEventTrigOut>0x00007FFF</MemTypePrgEventTrigOut>
        <MemTypePrgEventTraceCtrl>0x00007FFF</MemTypePrgEventTraceCtrl>
        <MemTypePrgEventComplex>0x00007FFF</MemTypePrgEventComplex>
        <MemTypeSramEventLow>0x000010FF</MemTypeSramEventLow>
        <MemTypeSramEventHigh>0x0000FFFF</MemTypeSramEventHigh>
        <MemTypeEepromEvent>0x000007FF</MemTypeEepromEvent>
        <MemTypeRegisterEvent>0x00000000</MemTypeRegisterEvent>
        <MemTypeIoEvent>0x00000000</MemTypeIoEvent>
        <MemTypePreTrace>0x00000000</MemTypePreTrace>
        <MemTypeTrace>0x0023FFFF</MemTypeTrace>
        <MemTypeCoreShdw>0x00000FFF</MemTypeCoreShdw>
        <MemTypeCoreMem>0x0000000FF</MemTypeCoreMem>
      </MMU_NOXRAM>
      <DEFAULT_SETTINGS>
        <HighFuse>0x99</HighFuse>
        <ExtendedFuse>0xff</ExtendedFuse>
        <LowFuse>0x62</LowFuse>
        <Lockbit>0xff</Lockbit>
        <ADDROSC>0x66</ADDROSC>
        <VALOSC>0xC7</VALOSC>
        <BINFILE>ATmega644P.bin</BINFILE>
        <PARAM_MMU_DMEM_PARTION>0x02</PARAM_MMU_DMEM_PARTION>
        <PARAM_MMU_MEMCFG>0x00</PARAM_MMU_MEMCFG>
        <FREQUENCY>1000000</FREQUENCY>
        <MAXFREQUENCY>20000000</MAXFREQUENCY>
        <MINFREQUENCY>7</MINFREQUENCY>
        <CLOCK>2    ; INTOSC = 1, INTRC=2;EXTCLK=4</CLOCK>
        <TIMEROSC>1    ;NOTUSE = 1, EXTERNAL = 4, INTERNAL = 2 </TIMEROSC>
        <XTAL2SOURCING>1 </XTAL2SOURCING>
        <PARAM_AVR_RMR>0</PARAM_AVR_RMR>
        <PARAM_POD_ADMUXCONFIG>0x00</PARAM_POD_ADMUXCONFIG>
        <PARAM_OSC_WD_FREQ>0x80</PARAM_OSC_WD_FREQ>
        <XRAMENABLE>0x00</XRAMENABLE>
        <XRAMOTHER>0x00</XRAMOTHER>
        <DIVCLOCK>8</DIVCLOCK>
      </DEFAULT_SETTINGS>
      <SETTINGS>
        <BOOTSIZE>
          <OPT1>
            <LFMASK>0x00000600</LFMASK>
            <LFBITS>0x00000600</LFBITS>
            <TEXT>Boot Size 512 Words, 4 pages,  $7E00-$7FFF, Boot reset $7E00</TEXT>
          </OPT1>
          <OPT2>
            <LFMASK>0x00000600</LFMASK>
            <LFBITS>0x00000400</LFBITS>
            <TEXT>Boot Size 1024 Words, 8 pages,  $7C00-$7FFF, Boot reset $7C00</TEXT>
          </OPT2>
          <OPT3>
            <LFMASK>0x00000600</LFMASK>
            <LFBITS>0x00000200</LFBITS>
            <TEXT>Boot Size 2048 Words, 16 pages, $7800-$7FFF, Boot reset $7800</TEXT>
          </OPT3>
          <OPT4>
            <LFMASK>0x00000600</LFMASK>
            <LFBITS>0x00000000</LFBITS>
            <TEXT>Boot Size 4096 Words, 32 pages, $7000-$7FFF, Boot reset $7000</TEXT>
          </OPT4>
        </BOOTSIZE>
        <CLOCK>
          <STARTUP>
            <INTOSC>
              <OPT1>
                <LFMASK>0x00000031</LFMASK>
                <LFBITS>0x00000000</LFBITS>
                <TEXT>258 CK, 4.1 ms </TEXT>
              </OPT1>
              <OPT2>
                <LFMASK>0x00000031</LFMASK>
                <LFBITS>0x00000010</LFBITS>
                <TEXT>258 CK, 65 ms</TEXT>
              </OPT2>
              <OPT3>
                <LFMASK>0x00000031</LFMASK>
                <LFBITS>0x00000020</LFBITS>
                <TEXT>1K CK</TEXT>
              </OPT3>
              <OPT4>
                <LFMASK>0x00000031</LFMASK>
                <LFBITS>0x00000030</LFBITS>
                <TEXT>1K CK, 4.1 ms</TEXT>
              </OPT4>
              <OPT5>
                <LFMASK>0x00000031</LFMASK>
                <LFBITS>0x00000001</LFBITS>
                <TEXT>1K CK, 65 ms</TEXT>
              </OPT5>
              <OPT6>
                <LFMASK>0x00000031</LFMASK>
                <LFBITS>0x00000011</LFBITS>
                <TEXT>16K CK</TEXT>
              </OPT6>
              <OPT7>
                <LFMASK>0x00000031</LFMASK>
                <LFBITS>0x00000021</LFBITS>
                <TEXT>16K CK, 4.1 ms</TEXT>
              </OPT7>
              <OPT8>
                <LFMASK>0x00000031</LFMASK>
                <LFBITS>0x00000031</LFBITS>
                <TEXT>16K CK, 65 ms</TEXT>
              </OPT8>
            </INTOSC>
            <INTRC>
              <OPT1>
                <LFMASK>0x00000030</LFMASK>
                <LFBITS>0x00000000</LFBITS>
                <TEXT>6 CK,14 CK</TEXT>
              </OPT1>
              <OPT2>
                <LFMASK>0x00000030</LFMASK>
                <LFBITS>0x00000010</LFBITS>
                <TEXT>6 CK, 14 CK + 4.1ms</TEXT>
              </OPT2>
              <OPT3>
                <LFMASK>0x00000030</LFMASK>
                <LFBITS>0x00000020</LFBITS>
                <TEXT>6 CK, 65 ms</TEXT>
              </OPT3>
            </INTRC>
            <EXTCLK>
              <OPT1>
                <LFMASK>0x00000030</LFMASK>
                <LFBITS>0x00000000</LFBITS>
                <TEXT>6 CK, 14 CK</TEXT>
              </OPT1>
              <OPT2>
                <LFMASK>0x00000030</LFMASK>
                <LFBITS>0x00000010</LFBITS>
                <TEXT>6 CK, 14 CK + 4.1ms</TEXT>
              </OPT2>
              <OPT3>
                <LFMASK>0x00000030</LFMASK>
                <LFBITS>0x00000020</LFBITS>
                <TEXT>6 CK, 14 CK + 65 ms</TEXT>
              </OPT3>
            </EXTCLK>
          </STARTUP>
          <CLOCK>
            <INTOSC>
              <LFMASK>0x0000000e</LFMASK>
              <LFBITS>0x0000000e</LFBITS>
            </INTOSC>
            <INTRC>
              <OPT1>
                <LFMASK>0x0000000f</LFMASK>
                <LFBITS>0x00000002</LFBITS>
                <TEXT>8.0</TEXT>
              </OPT1>
            </INTRC>
            <EXTCLK>
              <LFMASK>0x0000000f</LFMASK>
              <LFBITS>0x00000000</LFBITS>
            </EXTCLK>
          </CLOCK>
        </CLOCK>
        <BOOTRESET>
          <OPT1>
            <LFMASK>0x00000100</LFMASK>
            <LFBITS>0x00000100</LFBITS>
            <TEXT>Application reset, address $0</TEXT>
          </OPT1>
          <OPT2>
            <LFMASK>0x00000100</LFMASK>
            <LFBITS>0x00000000</LFBITS>
            <TEXT>Boot loader reset</TEXT>
          </OPT2>
        </BOOTRESET>
        <BOOTLOCK0>
          <OPT1>
            <LFMASK>0x0c000000</LFMASK>
            <LFBITS>0x0c000000</LFBITS>
            <TEXT>No restrictions for SPM or (E)LPM</TEXT>
          </OPT1>
          <OPT2>
            <LFMASK>0x0c000000</LFMASK>
            <LFBITS>0x08000000</LFBITS>
            <TEXT>No write to the Application section</TEXT>
          </OPT2>
          <OPT3>
            <LFMASK>0x0c000000</LFMASK>
            <LFBITS>0x00000000</LFBITS>
            <TEXT>No write to Application section,  No read from the Application section</TEXT>
          </OPT3>
          <OPT4>
            <LFMASK>0x0c000000</LFMASK>
            <LFBITS>0x04000000</LFBITS>
            <TEXT>No read from the Application section</TEXT>
          </OPT4>
        </BOOTLOCK0>
        <BOOTLOCK1>
          <OPT1>
            <LFMASK>0x30000000</LFMASK>
            <LFBITS>0x30000000</LFBITS>
            <TEXT>No restrictions for SPM or (E)LPM</TEXT>
          </OPT1>
          <OPT2>
            <LFMASK>0x30000000</LFMASK>
            <LFBITS>0x20000000</LFBITS>
            <TEXT>No write to the Boot Loader section</TEXT>
          </OPT2>
          <OPT3>
            <LFMASK>0x30000000</LFMASK>
            <LFBITS>0x00000000</LFBITS>
            <TEXT>No write to Boot Loader section, No read from the Boot Loader section</TEXT>
          </OPT3>
          <OPT4>
            <LFMASK>0x30000000</LFMASK>
            <LFBITS>0x10000000</LFBITS>
            <TEXT>No read from the Boot Loader section</TEXT>
          </OPT4>
        </BOOTLOCK1>
        <WATCHDOG>
          <TRUE>
            <LFMASK>0x00001000</LFMASK>
            <LFBITS>0x00000000</LFBITS>
            <TEXT>Watchdog always ON</TEXT>
          </TRUE>
          <FALSE>
            <LFMASK>0x00001000</LFMASK>
            <LFBITS>0x00001000</LFBITS>
            <TEXT>Watchdog disabled</TEXT>
          </FALSE>
        </WATCHDOG>
        <CLKDIV>
          <VALUE>8</VALUE>
          <TRUE>
            <LFMASK>0x00000080</LFMASK>
            <LFBITS>0x00000000</LFBITS>
            <TEXT>CKDIV8 Fuse</TEXT>
          </TRUE>
          <FALSE>
            <LFMASK>0x00000080</LFMASK>
            <LFBITS>0x00000080</LFBITS>
            <TEXT>CKDIV8 Fuse</TEXT>
          </FALSE>
        </CLKDIV>
        <CKOUT>
          <TRUE>
            <LFMASK>0x00000040</LFMASK>
            <LFBITS>0x00000000</LFBITS>
            <TEXT>CKOUT Fuse</TEXT>
          </TRUE>
          <FALSE>
            <LFMASK>0x00000040</LFMASK>
            <LFBITS>0x00000040</LFBITS>
            <TEXT>CKOUT Fuse</TEXT>
          </FALSE>
        </CKOUT>
        <BOD>
          <OPT1>
            <LFMASK>0x00070000</LFMASK>
            <LFBITS>0x00070000</LFBITS>
            <TEXT>BOD disabled</TEXT>
          </OPT1>
          <OPT2>
            <LFMASK>0x00070000</LFMASK>
            <LFBITS>0x00060000</LFBITS>
            <TEXT>BOD enabled, 1.8 V</TEXT>
          </OPT2>
          <OPT3>
            <LFMASK>0x00070000</LFMASK>
            <LFBITS>0x00050000</LFBITS>
            <TEXT>BOD enabled, 2.7 V</TEXT>
          </OPT3>
          <OPT4>
            <LFMASK>0x00070000</LFMASK>
            <LFBITS>0x00040000</LFBITS>
            <TEXT>BOD enabled, 4.0 V</TEXT>
          </OPT4>
        </BOD>
      </SETTINGS>
    </ICE50>
    <JTAGICEmkII>
      <ID>0x096C103f</ID>
      <Interface>JTAG</Interface>
      <!--Bit 0 in byte 0 is I/O location, bit 7 in byte 7 is I/O location 63-->
      <ucRead>0xFF,0x0F,0xE0,0xF8,0xFF,0x3D,0xB9,0xE8</ucRead>
      <ucWrite>0xB6,0x0D,0x00,0xE0,0xFF,0x1D,0xB8,0xE8</ucWrite>
      <ucReadShadow>0X00,0X00,0X00,0X00,0X01,0X00,0X00,0X00</ucReadShadow>
      <ucWriteShadow>0X00,0X00,0X00,0X00,0X01,0X00,0X00,0X00</ucWriteShadow>
      <!--Bit 0 in byte 0 is extended I/O location, bit 7 in byte 7 is I/O location 63-->
      <ucExtRead>0x53,0xFB,0x09,0xDF,0xF7,0x0F,0x00,0x00,0x00,0x00,0x5F,0x3F,0x37,0x37,0x00,0x00,0x00,0x00,0x00,0x00</ucExtRead>
      <ucExtWrite>0x53,0xFB,0x09,0xD8,0xF7,0x0F,0x00,0x00,0x00,0x00,0x5F,0x2F,0x36,0x36,0x00,0x00,0x00,0x00,0x00,0x00</ucExtWrite>
      <ucExtReadShadow>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00</ucExtReadShadow>
      <ucExtWriteShadow>0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00</ucExtWriteShadow>
      <!--Register locations etc.-->
      <ucIDRAddress>0x31</ucIDRAddress>
      <ucSPMCAddress>0X57</ucSPMCAddress>
      <ucRAMPZAddress>0x00</ucRAMPZAddress>
      <ulFlashPageSize>256</ulFlashPageSize>
      <ulEepromPageSize>8</ulEepromPageSize>
      <ulBootAddress>0x7e00</ulBootAddress>
      <BootAddress11>0x7e00</BootAddress11>
      <BootAddress10>0x7c00</BootAddress10>
      <BootAddress01>0x7800</BootAddress01>
      <BootAddress00>0x7000</BootAddress00>
      <ucUpperExtIOLoc>0xCE</ucUpperExtIOLoc>
      <ulFlashSize>0x10000</ulFlashSize>
      <ulRegStart>0x0000,32</ulRegStart>
      <ulIoStart>0x0020,64</ulIoStart>
      <!--Other stuff-->
      <DWENmaskExt>0x00</DWENmaskExt>
      <DWENmaskHigh>0x00</DWENmaskHigh>
      <DWENmaskLow>0x00</DWENmaskLow>
      <SPIENmaskExt>0x00</SPIENmaskExt>
      <SPIENmaskHigh>0x00</SPIENmaskHigh>
      <SPIENmaskLow>0x00</SPIENmaskLow>
      <ucEepromInst>0x00</ucEepromInst>
      <ucFlashInst>0x00</ucFlashInst>
      <ucSPHaddr>0x3e</ucSPHaddr>
      <ucSPLaddr>0x3d</ucSPLaddr>
      <DWdatareg>0x00</DWdatareg>
      <DWbasePC>0x00</DWbasePC>
      <Osccalshared>0x00</Osccalshared>
      <ucAllowFullPageBitstream>0x00</ucAllowFullPageBitstream>
      <uiStartSmallestBootLoaderSection>0x00</uiStartSmallestBootLoaderSection>
      <ucUseJTAGID>0x01</ucUseJTAGID>
      <DaisyChainProgModes>1,1,1,1,1,1,1,1</DaisyChainProgModes>
    </JTAGICEmkII>
    <AVRISPmkII />
    <STK500_2>
      <IspEnterProgMode>
        <timeout>200</timeout>
        <stabDelay>100</stabDelay>
        <cmdexeDelay>25</cmdexeDelay>
        <synchLoops>32</synchLoops>
        <byteDelay>0</byteDelay>
        <pollIndex>3</pollIndex>
        <pollValue>0x53</pollValue>
      </IspEnterProgMode>
      <IspLeaveProgMode>
        <preDelay>1</preDelay>
        <postDelay>1</postDelay>
      </IspLeaveProgMode>
      <IspChipErase>
        <eraseDelay>20</eraseDelay>
        <pollMethod>0</pollMethod>
      </IspChipErase>
      <IspProgramFlash>
        <mode>0x21</mode>
        <blockSize>128</blockSize>
        <delay>10</delay>
        <cmd1>0x40</cmd1>
        <cmd2>0x4C</cmd2>
        <cmd3>0x20</cmd3>
        <pollVal1>0xFF</pollVal1>
        <pollVal2>0x00</pollVal2>
      </IspProgramFlash>
      <IspProgramEeprom>
        <mode>0x04</mode>
        <blockSize>128</blockSize>
        <delay>20</delay>
        <cmd1>0xC0</cmd1>
        <cmd2>0x00</cmd2>
        <cmd3>0xA0</cmd3>
        <pollVal1>0xFF</pollVal1>
        <pollVal2>0xFF</pollVal2>
      </IspProgramEeprom>
      <IspReadFlash>
        <blockSize>256</blockSize>
      </IspReadFlash>
      <IspReadEeprom>
        <blockSize>256</blockSize>
      </IspReadEeprom>
      <IspReadFuse>
        <pollIndex>4</pollIndex>
      </IspReadFuse>
      <IspReadLock>
        <pollIndex>4</pollIndex>
      </IspReadLock>
      <IspReadSign>
        <pollIndex>4</pollIndex>
      </IspReadSign>
      <IspReadOsccal>
        <pollIndex>4</pollIndex>
      </IspReadOsccal>
    </STK500_2>
  </ICE_SETTINGS>
  <V2>
    <templates>
      <module class="FUSE">
        <registers name="FUSE" memspace="FUSE">
          <reg size="1" name="EXTENDED" offset="0x02">
            <bitfield name="BODENABLE" mask="0x01" text="Brown-out Detector Enable Control" icon="" enum="ENUM_BODLEVEL" />
          </reg>
          <reg size="1" name="HIGH" offset="0x01">
            <bitfield name="OCDEN" mask="0x80" text="On-Chip Debug Enabled" icon="" />
            <bitfield name="JTAGEN" mask="0x40" text="JTAG Interface Enabled" icon="" />
            <bitfield name="SPIEN" mask="0x20" text="Serial program downloading (SPI) enabled" icon="" />
            <bitfield name="WDTON" mask="0x10" text="Watchdog timer always on" icon="" />
            <bitfield name="EESAVE" mask="0x08" text="Preserve EEPROM through the Chip Erase cycle" icon="" />
            <bitfield name="BOOTSZ" mask="0x06" text="Select Boot Size" icon="" enum="ENUM_BOOTSZ" />
            <bitfield name="BOOTRST" mask="0x01" text="Boot Reset vector Enabled" icon="" />
          </reg>
          <reg size="1" name="LOW" offset="0x00">
            <bitfield name="CKOUT" mask="0x40" text="Clock output on PORTB1" icon="" />
            <bitfield name="SUTCKSEL" mask="0x39" text="Select Startup Time and Clock Source" icon="" enum="ENUM_SUT_CKSEL" />
          </reg>
        </registers>
        <enumerator name="ENUM_SUT_CKSEL">
          <enum val="0x02" text="[CKSEL=10 SUT=00] Ceramic res., fast rising power, 14 CK + 4.1 ms" />
          <enum val="0x06" text="[CKSEL=10 SUT=01] Ceramic res., slowly rising power, 14 CK + 65 ms" />
          <enum val="0x0A" text="[CKSEL=10 SUT=10] Ceramic res., BOD enabled, 14 CK" />
          <enum val="0x0E" text="[CKSEL=10 SUT=11] Ceramic res., fast rising power, 14 CK + 4.1 ms" />
          <enum val="0x03" text="[CKSEL=11 SUT=00] Ceramic res., slowly rising power, 14 CK + 65 ms" />
          <enum val="0x07" text="[CKSEL=11 SUT=01] Crystal Osc., BOD enabled, 14 CK" />
          <enum val="0x0B" text="[CKSEL=11 SUT=10] Crystal Osc., fast rising power, 14 CK + 4.1 ms" />
          <enum val="0x0F" text="[CKSEL=11 SUT=11] Crystal Osc., slowly rising power, 14 CK + 65 ms" />
          <enum val="0x00" text="[CKSEL=00 SUT=00] Ext. Clock, BOD enabled, 14 CK" />
          <enum val="0x04" text="[CKSEL=00 SUT=01] Ext. Clock, fast rising power, 14 CK + 4.1 ms" />
          <enum val="0x08" text="[CKSEL=00 SUT=10] Ext. Clock, slowly rising power, 14 CK + 65 ms" />
          <enum val="0x01" text="[CKSEL=01 SUT=00] Ext. Clock, BOD enabled, 14 CK" />
          <enum val="0x05" text="[CKSEL=01 SUT=01] Ext. Clock, fast rising power, 14 CK + 4.1 ms" />
          <enum val="0x09" text="[CKSEL=01 SUT=10] Ext. Clock, slowly rising power, 14 CK + 65 ms" />
        </enumerator>
        <enumerator name="ENUM_BOOTSZ">
          <enum val="0x03" text="Boot Flash size=512 words Boot start address=$7E00" />
          <enum val="0x02" text="Boot Flash size=1024 words Boot address=$7C00" />
          <enum val="0x01" text="Boot Flash size=2048 words Boot address=$7800" />
          <enum val="0x00" text="Boot Flash size=4096 words Boot address=$7000" />
        </enumerator>
        <enumerator name="ENUM_BODLEVEL">
          <enum val="0x01" text="Brown-out detection enabled" />
          <enum val="0x00" text="Brown-out detection disabled" />
        </enumerator>
      </module>
      <module class="LOCKBIT">
        <registers name="LOCKBIT" memspace="LOCKBIT">
          <reg size="1" name="LOCKBIT" offset="0x00">
            <bitfield name="LB" mask="0x03" text="Memory Lock" icon="" enum="ENUM_LB" />
            <bitfield name="BLB0" mask="0x0C" text="Boot Loader Protection Mode" icon="" enum="ENUM_BLB" />
            <bitfield name="BLB1" mask="0x30" text="Boot Loader Protection Mode" icon="" enum="ENUM_BLB2" />
          </reg>
        </registers>
        <enumerator name="ENUM_LB">
          <enum val="0x00" text="Further programming and verification disabled" />
          <enum val="0x02" text="Further programming disabled" />
          <enum val="0x03" text="No memory lock features enabled" />
        </enumerator>
        <enumerator name="ENUM_BLB">
          <enum val="0x00" text="LPM and SPM prohibited in Application Section" />
          <enum val="0x01" text="LPM prohibited in Application Section" />
          <enum val="0x02" text="SPM prohibited in Application Section" />
          <enum val="0x03" text="No lock on SPM and LPM in Application Section" />
        </enumerator>
        <enumerator name="ENUM_BLB2">
          <enum val="0x00" text="LPM and SPM prohibited in Boot Section" />
          <enum val="0x01" text="LPM prohibited in Boot Section" />
          <enum val="0x02" text="SPM prohibited in Boot Section" />
          <enum val="0x03" text="No lock on SPM and LPM in Boot Section" />
        </enumerator>
      </module>
      <module class="USB_DEVICE" text="">
        <registers name="USB_DEVICE" memspace="DATAMEM" text="" icon="io_com.bmp">
          <reg size="1" name="USBCR" offset="0xE0" text="USB Control Register" icon="io_flag.bmp">
            <bitfield name="URMWU" mask="0x80" text="USB Remote Wake-Up Signal Generation" icon="" />
            <bitfield name="UPUC" mask="0x20" text="Attachment pullup control" icon="" />
            <bitfield name="USBE" mask="0x02" text="USB Module enable" icon="" />
          </reg>
          <reg size="1" name="USBPI" offset="0xE1" text="USB Protocol Interrupt Register" icon="io_flag.bmp">
            <bitfield name="FEURI" mask="0x10" text="This bit indicates the end of the USB Bus Reset" icon="" />
            <bitfield name="SOFI" mask="0x08" text="Start Of Frame Interrupt" icon="" />
            <bitfield name="RMWUI" mask="0x04" text="Remote Wake Up Interrupt" icon="" />
            <bitfield name="RESI" mask="0x02" text="Resume Interrupt Bit" icon="" />
            <bitfield name="SUSI" mask="0x01" text="Suspend Interrupt Bit" icon="" />
          </reg>
          <reg size="1" name="USBPIM" offset="0xE2" text="USB Protocol Interrupt Mask Register" icon="io_flag.bmp">
            <bitfield name="SOFIM" mask="0x08" text="Start Of Frame Interrupt Mask" icon="" />
            <bitfield name="RMWUIM" mask="0x04" text="Remote Wake Up Interrupt Mask" icon="" />
            <bitfield name="RESIM" mask="0x02" text="Resume Interrupt Mask" icon="" />
            <bitfield name="SUSIM" mask="0x01" text="Suspend Interrupt Mask" icon="" />
          </reg>
          <reg size="1" name="USBEI" offset="0xE3" text="USB Endpoint Interrupt Register" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="USBEIM" offset="0xE4" text="USB Endpoint Interrupt Mask Register" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="USBENUM" offset="0xCA" text="Select an endpoint to control, using USB..X registers" icon="io_flag.bmp" mask="0x07" />
          <reg size="1" name="USBCSEX" offset="0xCB" text="USB Control and Status register for Endpoint X" icon="io_flag.bmp">
            <bitfield name="IERR" mask="0x40" text="Isochronous Error Bit" icon="" />
            <bitfield name="FSTALL" mask="0x20" text="Force Stall Bit" icon="" />
            <bitfield name="TXPB" mask="0x10" text="Tx Packet Busy Bit" icon="" />
            <bitfield name="STSENT" mask="0x08" text="Stall Sent Bit" icon="" />
            <bitfield name="RXSETUP" mask="0x04" text="Rx Setup Bit" icon="" />
            <bitfield name="RCVD" mask="0x02" text="Received Data Bit" icon="" />
            <bitfield name="TXC" mask="0x01" text="Tx Complete Bit" icon="" />
          </reg>
          <reg size="1" name="USBDBCEX" offset="0xCC" text="USB Data Byte Count Register for Endpoint X" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="USBFCEX" offset="0xCD" text="USB Function Control Register for Endpoint X" icon="io_flag.bmp">
            <bitfield name="EPE" mask="0x80" text="Endpoint Enable BIt" icon="" />
            <bitfield name="EPDIR" mask="0x04" text="Endpoint Direction Bit" icon="" />
            <bitfield name="EPTYP" mask="0x03" text="Endpoint Type bits" icon="" />
          </reg>
          <reg size="1" name="USBRSTE" offset="0xE5" text="USB Reset Endpoint Register" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="USBGS" offset="0xE6" text="USB Global State Register" icon="io_flag.bmp">
            <bitfield name="RSMON" mask="0x08" text="Resume Is Currently ON" icon="" />
            <bitfield name="RMWUE" mask="0x04" text="Remote Wake Up Feature Enable" icon="" />
            <bitfield name="FCF" mask="0x02" text="Function Configured Flag Bit" icon="" />
            <bitfield name="FAF" mask="0x01" text="Function Addressed Flag Bit" icon="" />
          </reg>
          <reg size="1" name="USBFA" offset="0xE7" text="USB Function Address Register" icon="io_flag.bmp" mask="0x7F" />
          <reg size="2" name="USBFN" offset="0xE8" text="USB Frame Number Register " icon="io_flag.bmp" mask="0x1FFF" />
          <reg size="1" name="USBDMACS" offset="0xEA" text="USB DMA Control and Status Register" icon="io_flag.bmp">
            <bitfield name="EPS" mask="0x70" text="Endpoint Selection Bit2" icon="" />
            <bitfield name="USBDMAERR" mask="0x04" text="DMA Error Flag" icon="" />
            <bitfield name="USBDMADIR" mask="0x02" text="DMA Direction Bit" icon="" />
            <bitfield name="USBDMAR" mask="0x01" text="DMA Run Bit" icon="" />
          </reg>
          <reg size="2" name="USBDMAD" offset="0xEB" text="USB DMA Address register " icon="io_flag.bmp" mask="0x3FFF" />
          <reg size="1" name="USBDMAB" offset="0xED" text="USB DMA Amount of Byte Register" icon="io_flag.bmp" mask="0x7F" />
        </registers>
      </module>
      <module class="USART0" text="">
        <registers name="USART0" memspace="DATAMEM" text="" icon="io_com.bmp">
          <reg size="1" name="UDR0" offset="0xC6" text="USART I/O Data Register" icon="io_com.bmp" mask="0xFF" />
          <reg size="1" name="UCSR0A" offset="0xC0" text="USART Control and Status Register A" icon="io_flag.bmp">
            <bitfield name="RXC0" mask="0x80" text="USART Receive Complete" icon="" />
            <bitfield name="TXC0" mask="0x40" text="USART Transmitt Complete" icon="" />
            <bitfield name="UDRE0" mask="0x20" text="USART Data Register Empty" icon="" />
            <bitfield name="FE0" mask="0x10" text="Framing Error" icon="" />
            <bitfield name="DOR0" mask="0x08" text="Data overRun" icon="" />
            <bitfield name="UPE0" mask="0x04" text="Parity Error" icon="" />
            <bitfield name="U2X0" mask="0x02" text="Double the USART transmission speed" icon="" />
            <bitfield name="MPCM0" mask="0x01" text="Multi-processor Communication Mode" icon="" />
          </reg>
          <reg size="1" name="UCSR0B" offset="0xC1" text="USART Control and Status Register B" icon="io_flag.bmp">
            <bitfield name="RXCIE0" mask="0x80" text="RX Complete Interrupt Enable" icon="" />
            <bitfield name="TXCIE0" mask="0x40" text="TX Complete Interrupt Enable" icon="" />
            <bitfield name="UDRIE0" mask="0x20" text="USART Data register Empty Interrupt Enable" icon="" />
            <bitfield name="RXEN0" mask="0x10" text="Receiver Enable" icon="" />
            <bitfield name="TXEN0" mask="0x08" text="Transmitter Enable" icon="" />
            <bitfield name="UCSZ02" mask="0x04" text="Character Size" icon="" />
            <bitfield name="RXB80" mask="0x02" text="Receive Data Bit 8" icon="" />
            <bitfield name="TXB80" mask="0x01" text="Transmit Data Bit 8" icon="" />
          </reg>
          <reg size="1" name="UCSR0C" offset="0xC2" text="USART Control and Status Register C" icon="io_flag.bmp">
            <bitfield name="UMSEL0" mask="0xC0" text="USART Mode Select" icon="" enum="COMM_USART_MODE" />
            <bitfield name="UPM0" mask="0x30" text="Parity Mode Bits" icon="" enum="COMM_UPM_PARITY_MODE" />
            <bitfield name="USBS0" mask="0x08" text="Stop Bit Select" icon="" enum="COMM_STOP_BIT_SEL" />
            <bitfield name="UCSZ0" mask="0x06" text="Character Size" icon="" />
            <bitfield name="UCPOL0" mask="0x01" text="Clock Polarity" icon="" />
          </reg>
          <reg size="2" name="UBRR0" offset="0xC4" text="USART Baud Rate Register  Bytes" icon="io_com.bmp" mask="0x0FFF" />
        </registers>
        <enumerator name="COMM_USART_MODE">
          <enum val="0x00" text="Asynchronous Operation" />
          <enum val="0x01" text="Synchronous Operation" />
        </enumerator>
        <enumerator name="COMM_UPM_PARITY_MODE">
          <enum val="0x00" text="Disabled" />
          <enum val="0x01" text="Reserved" />
          <enum val="0x02" text="Enabled, Even Parity" />
          <enum val="0x03" text="Enabled, Odd Parity" />
        </enumerator>
        <enumerator name="COMM_STOP_BIT_SEL">
          <enum val="0x00" text="1-bit" />
          <enum val="0x01" text="2-bit" />
        </enumerator>
      </module>
      <module class="PORTA" text="">
        <registers name="PORTA" memspace="DATAMEM" text="" icon="io_port.bmp">
          <reg size="1" name="PORTA" offset="0x22" text="Port A Data Register" icon="io_port.bmp" mask="0xFF" />
          <reg size="1" name="DDRA" offset="0x21" text="Port A Data Direction Register" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="PINA" offset="0x20" text="Port A Input Pins" icon="io_port.bmp" mask="0xFF" />
        </registers>
      </module>
      <module class="PORTB" text="">
        <registers name="PORTB" memspace="DATAMEM" text="" icon="io_port.bmp">
          <reg size="1" name="PORTB" offset="0x25" text="Port B Data Register" icon="io_port.bmp" mask="0xFF" />
          <reg size="1" name="DDRB" offset="0x24" text="Port B Data Direction Register" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="PINB" offset="0x23" text="Port B Input Pins" icon="io_port.bmp" mask="0xFF" />
        </registers>
      </module>
      <module class="PORTC" text="">
        <registers name="PORTC" memspace="DATAMEM" text="" icon="io_port.bmp">
          <reg size="1" name="PORTC" offset="0x28" text="Port C Data Register" icon="io_port.bmp" mask="0xFF" />
          <reg size="1" name="DDRC" offset="0x27" text="Port C Data Direction Register" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="PINC" offset="0x26" text="Port C Input Pins" icon="io_port.bmp" mask="0xFF" />
        </registers>
      </module>
      <module class="PORTD" text="">
        <registers name="PORTD" memspace="DATAMEM" text="" icon="io_port.bmp">
          <reg size="1" name="PORTD" offset="0x2B" text="Port D Data Register" icon="io_port.bmp" mask="0xFF" />
          <reg size="1" name="DDRD" offset="0x2A" text="Port D Data Direction Register" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="PIND" offset="0x29" text="Port D Input Pins" icon="io_port.bmp" mask="0xFF" />
        </registers>
      </module>
      <module class="TIMER_COUNTER_0" text="">
        <registers name="TIMER_COUNTER_0" memspace="DATAMEM" text="" icon="io_timer.bmp">
          <reg size="1" name="OCR0B" offset="0x48" text="Timer/Counter0 Output Compare Register" icon="io_timer.bmp" mask="0xFF" />
          <reg size="1" name="OCR0A" offset="0x47" text="Timer/Counter0 Output Compare Register" icon="io_timer.bmp" mask="0xFF" />
          <reg size="1" name="TCNT0" offset="0x46" text="Timer/Counter0" icon="io_timer.bmp" mask="0xFF" />
          <reg size="1" name="TCCR0B" offset="0x45" text="Timer/Counter Control Register B" icon="io_flag.bmp">
            <bitfield name="FOC0A" mask="0x80" text="Force Output Compare A" icon="" />
            <bitfield name="FOC0B" mask="0x40" text="Force Output Compare B" icon="" />
            <bitfield name="WGM02" mask="0x08" text="" icon="" />
            <bitfield name="CS0" mask="0x07" text="Clock Select" icon="" enum="CLK_SEL_3BIT_EXT" />
          </reg>
          <reg size="1" name="TCCR0A" offset="0x44" text="Timer/Counter  Control Register A" icon="io_flag.bmp">
            <bitfield name="COM0A" mask="0xC0" text="Compare Output Mode, Phase Correct PWM Mode" icon="" />
            <bitfield name="COM0B" mask="0x30" text="Compare Output Mode, Fast PWm" icon="" />
            <bitfield name="WGM0" mask="0x03" text="Waveform Generation Mode" icon="" />
          </reg>
          <reg size="1" name="TIMSK0" offset="0x6E" text="Timer/Counter0 Interrupt Mask Register" icon="io_flag.bmp">
            <bitfield name="OCIE0B" mask="0x04" text="Timer/Counter0 Output Compare Match B Interrupt Enable" icon="" />
            <bitfield name="OCIE0A" mask="0x02" text="Timer/Counter0 Output Compare Match A Interrupt Enable" icon="" />
            <bitfield name="TOIE0" mask="0x01" text="Timer/Counter0 Overflow Interrupt Enable" icon="" />
          </reg>
          <reg size="1" name="TIFR0" offset="0x35" text="Timer/Counter0 Interrupt Flag register" icon="io_flag.bmp">
            <bitfield name="OCF0B" mask="0x04" text="Timer/Counter0 Output Compare Flag 0B" icon="" />
            <bitfield name="OCF0A" mask="0x02" text="Timer/Counter0 Output Compare Flag 0A" icon="" />
            <bitfield name="TOV0" mask="0x01" text="Timer/Counter0 Overflow Flag" icon="" />
          </reg>
          <reg size="1" name="GTCCR" offset="0x43" text="General Timer/Counter Control Register" icon="io_flag.bmp">
            <bitfield name="TSM" mask="0x80" text="Timer/Counter Synchronization Mode" icon="" />
            <bitfield name="PSRSYNC" mask="0x01" text="Prescaler Reset Timer/Counter1 and Timer/Counter0" icon="" />
          </reg>
        </registers>
        <enumerator name="CLK_SEL_3BIT_EXT">
          <enum val="0x00" text="No Clock Source (Stopped)" />
          <enum val="0x01" text="Running, No Prescaling" />
          <enum val="0x02" text="Running, CLK/8" />
          <enum val="0x03" text="Running, CLK/64" />
          <enum val="0x04" text="Running, CLK/256" />
          <enum val="0x05" text="Running, CLK/1024" />
          <enum val="0x06" text="Running, ExtClk Tx Falling Edge" />
          <enum val="0x07" text="Running, ExtClk Tx Rising Edge" />
        </enumerator>
      </module>
      <module class="TIMER_COUNTER_2" text="">
        <registers name="TIMER_COUNTER_2" memspace="DATAMEM" text="" icon="io_timer.bmp">
          <reg size="1" name="TIMSK2" offset="0x70" text="Timer/Counter Interrupt Mask register" icon="io_flag.bmp">
            <bitfield name="OCIE2B" mask="0x04" text="Timer/Counter2 Output Compare Match B Interrupt Enable" icon="" />
            <bitfield name="OCIE2A" mask="0x02" text="Timer/Counter2 Output Compare Match A Interrupt Enable" icon="" />
            <bitfield name="TOIE2" mask="0x01" text="Timer/Counter2 Overflow Interrupt Enable" icon="" />
          </reg>
          <reg size="1" name="TIFR2" offset="0x37" text="Timer/Counter Interrupt Flag Register" icon="io_flag.bmp">
            <bitfield name="OCF2B" mask="0x04" text="Output Compare Flag 2B" icon="" />
            <bitfield name="OCF2A" mask="0x02" text="Output Compare Flag 2A" icon="" />
            <bitfield name="TOV2" mask="0x01" text="Timer/Counter2 Overflow Flag" icon="" />
          </reg>
          <reg size="1" name="TCCR2A" offset="0xB0" text="Timer/Counter2 Control Register A" icon="io_flag.bmp">
            <bitfield name="COM2A" mask="0xC0" text="Compare Output Mode bits" icon="" />
            <bitfield name="COM2B" mask="0x30" text="Compare Output Mode bits" icon="" />
            <bitfield name="WGM2" mask="0x03" text="Waveform Genration Mode" icon="" />
          </reg>
          <reg size="1" name="TCCR2B" offset="0xB1" text="Timer/Counter2 Control Register B" icon="io_flag.bmp">
            <bitfield name="FOC2A" mask="0x80" text="Force Output Compare A" icon="" />
            <bitfield name="FOC2B" mask="0x40" text="Force Output Compare B" icon="" />
            <bitfield name="WGM22" mask="0x08" text="Waveform Generation Mode" icon="" />
            <bitfield name="CS2" mask="0x07" text="Clock Select bits" icon="" enum="CLK_SEL_3BIT" />
          </reg>
          <reg size="1" name="TCNT2" offset="0xB2" text="Timer/Counter2" icon="io_timer.bmp" mask="0xFF" />
          <reg size="1" name="OCR2B" offset="0xB4" text="Timer/Counter2 Output Compare Register B" icon="io_timer.bmp" mask="0xFF" />
          <reg size="1" name="OCR2A" offset="0xB3" text="Timer/Counter2 Output Compare Register A" icon="io_timer.bmp" mask="0xFF" />
          <reg size="1" name="ASSR" offset="0xB6" text="Asynchronous Status Register" icon="io_flag.bmp">
            <bitfield name="EXCLK" mask="0x40" text="Enable External Clock Input" icon="" />
            <bitfield name="AS2" mask="0x20" text="Asynchronous Timer/Counter2" icon="" />
            <bitfield name="TCN2UB" mask="0x10" text="Timer/Counter2 Update Busy" icon="" />
            <bitfield name="OCR2AUB" mask="0x08" text="Output Compare Register2 Update Busy" icon="" />
            <bitfield name="OCR2BUB" mask="0x04" text="Output Compare Register 2 Update Busy" icon="" />
            <bitfield name="TCR2AUB" mask="0x02" text="Timer/Counter Control Register2 Update Busy" icon="" />
            <bitfield name="TCR2BUB" mask="0x01" text="Timer/Counter Control Register2 Update Busy" icon="" />
          </reg>
          <reg size="1" name="GTCCR" offset="0x43" text="General Timer Counter Control register" icon="io_flag.bmp">
            <bitfield name="TSM" mask="0x80" text="Timer/Counter Synchronization Mode" icon="" />
            <bitfield name="PSRASY" mask="0x02" text="Prescaler Reset Timer/Counter2" icon="" />
          </reg>
        </registers>
        <enumerator name="CLK_SEL_3BIT">
          <enum val="0x00" text="No Clock Source (Stopped)" />
          <enum val="0x01" text="Running, No Prescaling" />
          <enum val="0x02" text="Running, CLK/8" />
          <enum val="0x03" text="Running, CLK/32" />
          <enum val="0x04" text="Running, CLK/64" />
          <enum val="0x05" text="Running, CLK/128" />
          <enum val="0x06" text="Running, CLK/256" />
          <enum val="0x07" text="Running, CLK/1024" />
        </enumerator>
      </module>
      <module class="WATCHDOG" text="">
        <registers name="WATCHDOG" memspace="DATAMEM" text="" icon="io_watch.bmp">
          <reg size="1" name="WDTCSR" offset="0x60" text="Watchdog Timer Control Register" icon="io_flag.bmp">
            <bitfield name="WDIF" mask="0x80" text="Watchdog Timeout Interrupt Flag" icon="" />
            <bitfield name="WDIE" mask="0x40" text="Watchdog Timeout Interrupt Enable" icon="" />
            <bitfield name="WDP" mask="0x27" text="Watchdog Timer Prescaler Bits" icon="" enum="WDOG_TIMER_PRESCALE_4BITS" />
            <bitfield name="WDCE" mask="0x10" text="Watchdog Change Enable" icon="" />
            <bitfield name="WDE" mask="0x08" text="Watch Dog Enable" icon="" />
          </reg>
        </registers>
        <enumerator name="WDOG_TIMER_PRESCALE_4BITS">
          <enum val="0x00" text="Oscillator Cycles 2K" />
          <enum val="0x01" text="Oscillator Cycles 4K" />
          <enum val="0x02" text="Oscillator Cycles 8K" />
          <enum val="0x03" text="Oscillator Cycles 16K" />
          <enum val="0x04" text="Oscillator Cycles 32K" />
          <enum val="0x05" text="Oscillator Cycles 64K" />
          <enum val="0x06" text="Oscillator Cycles 128K" />
          <enum val="0x07" text="Oscillator Cycles 256K" />
          <enum val="0x08" text="Oscillator Cycles 512K" />
          <enum val="0x09" text="Oscillator Cycles 1024K" />
        </enumerator>
      </module>
      <module class="JTAG" text="">
        <registers name="JTAG" memspace="DATAMEM" text="" icon="io_com.bmp">
          <reg size="1" name="OCDR" offset="0x51" text="On-Chip Debug Related Register in I/O Memory" icon="io_com.bmp" mask="0xFF" />
          <reg size="1" name="MCUCR" offset="0x55" text="MCU Control Register" icon="io_flag.bmp">
            <bitfield name="JTD" mask="0x80" text="JTAG Interface Disable" icon="" />
          </reg>
          <reg size="1" name="MCUSR" offset="0x54" text="MCU Status Register" icon="io_flag.bmp">
            <bitfield name="JTRF" mask="0x10" text="JTAG Reset Flag" icon="" />
          </reg>
        </registers>
      </module>
      <module class="BOOT_LOAD" text="">
        <registers name="BOOT_LOAD" memspace="DATAMEM" text="" icon="io_cpu.bmp">
          <reg size="1" name="SPMCSR" offset="0x57" text="Store Program Memory Control Register" icon="io_flag.bmp">
            <bitfield name="SPMIE" mask="0x80" text="SPM Interrupt Enable" icon="" />
            <bitfield name="RWWSB" mask="0x40" text="Read While Write Section Busy" icon="" />
            <bitfield name="SIGRD" mask="0x20" text="Signature Row Read" icon="" />
            <bitfield name="RWWSRE" mask="0x10" text="Read While Write section read enable" icon="" />
            <bitfield name="BLBSET" mask="0x08" text="Boot Lock Bit Set" icon="" />
            <bitfield name="PGWRT" mask="0x04" text="Page Write" icon="" />
            <bitfield name="PGERS" mask="0x02" text="Page Erase" icon="" />
            <bitfield name="SPMEN" mask="0x01" text="Store Program Memory Enable" icon="" />
          </reg>
        </registers>
      </module>
      <module class="EXTERNAL_INTERRUPT" text="">
        <registers name="EXTERNAL_INTERRUPT" memspace="DATAMEM" text="" icon="io_ext.bmp">
          <reg size="1" name="EICRA" offset="0x69" text="External Interrupt Control Register A" icon="io_flag.bmp">
            <bitfield name="ISC3" mask="0xC0" text="External Interrupt Sense Control Bit" icon="" />
            <bitfield name="ISC2" mask="0x30" text="External Interrupt Sense Control Bit" icon="" enum="INTERRUPT_SENSE_CONTROL" />
            <bitfield name="ISC1" mask="0x0C" text="External Interrupt Sense Control Bit" icon="" enum="INTERRUPT_SENSE_CONTROL" />
            <bitfield name="ISC0" mask="0x03" text="External Interrupt Sense Control Bit" icon="" enum="INTERRUPT_SENSE_CONTROL" />
          </reg>
          <reg size="1" name="EIMSK" offset="0x3D" text="External Interrupt Mask Register" icon="io_flag.bmp">
            <bitfield name="INT" mask="0x0F" text="External Interrupt Request 3 Enable" icon="" />
          </reg>
          <reg size="1" name="EIFR" offset="0x3C" text="External Interrupt Flag Register" icon="io_flag.bmp">
            <bitfield name="INTF" mask="0x0F" text="External Interrupt Flags" icon="" />
          </reg>
          <reg size="1" name="EIRR" offset="0x3A" text="External Interrupt Redirection Register" icon="io_flag.bmp">
            <bitfield name="INTD" mask="0x0C" text="External Interrupt 3 Direction" icon="" lsb="2" />
          </reg>
          <reg size="1" name="PCMSK3" offset="" text="Pin Change Mask Register 3" icon="io_flag.bmp">
            <bitfield name="PCINT" mask="0xFF" text="Pin Change Enable Masks" icon="" lsb="24" />
          </reg>
          <reg size="1" name="PCMSK2" offset="0x6D" text="Pin Change Mask Register 2" icon="io_flag.bmp">
            <bitfield name="PCINT" mask="0xFF" text="Pin Change Enable Masks" icon="" lsb="16" />
          </reg>
          <reg size="1" name="PCMSK1" offset="0x6C" text="Pin Change Mask Register 1" icon="io_flag.bmp">
            <bitfield name="PCINT" mask="0xFF" text="Pin Change Enable Masks" icon="" lsb="8" />
          </reg>
          <reg size="1" name="PCMSK0" offset="0x6B" text="Pin Change Mask Register 0" icon="io_flag.bmp">
            <bitfield name="PCINT" mask="0xFF" text="Pin Change Enable Masks" icon="" />
          </reg>
          <reg size="1" name="PCIFR" offset="0x3B" text="Pin Change Interrupt Flag Register" icon="io_flag.bmp">
            <bitfield name="PCIF" mask="0x0F" text="Pin Change Interrupt Flags" icon="" />
          </reg>
          <reg size="1" name="PCICR" offset="0x68" text="Pin Change Interrupt Control Register" icon="io_flag.bmp">
            <bitfield name="PCIE" mask="0x0F" text="Pin Change Interrupt Enables" icon="" />
          </reg>
        </registers>
        <enumerator name="INTERRUPT_SENSE_CONTROL">
          <enum val="0x00" text="Low Level of INTX" />
          <enum val="0x01" text="Reserved" />
          <enum val="0x02" text="Falling Edge of INTX" />
          <enum val="0x03" text="Rising Edge of INTX" />
        </enumerator>
      </module>
      <module class="SCIB" text="">
        <registers name="SCIB" memspace="DATAMEM" text="" icon="io_com.bmp">
          <reg size="1" name="SCICR" offset="0xFF" text="Smart Card Interface Control Register" icon="io_flag.bmp">
            <bitfield name="SCIRESET" mask="0x80" text="Reset Bit" icon="" />
            <bitfield name="CARDDET" mask="0x40" text="Card Presence Detector Sense" icon="" />
            <bitfield name="VCARD" mask="0x30" text="Card Voltage Selections" icon="" />
            <bitfield name="UART" mask="0x08" text="Card UART Selection" icon="" />
            <bitfield name="WTEN" mask="0x04" text="Waiting Time Counter Enable" icon="" />
            <bitfield name="CREP" mask="0x02" text="Character Repetition" icon="" />
            <bitfield name="CONV" mask="0x01" text="ISO Convention" icon="" />
          </reg>
          <reg size="1" name="SCCON" offset="0xFE" text="Smart Card Contacts Register" icon="io_flag.bmp">
            <bitfield name="CLK" mask="0x80" text="Card Clock Selection" icon="" />
            <bitfield name="CARDC8" mask="0x20" text="Card C8 Pad Control" icon="" />
            <bitfield name="CARDC4" mask="0x10" text="Card C4 Pad Control" icon="" />
            <bitfield name="CARDIO" mask="0x08" text="Card I/O Pad Control" icon="" />
            <bitfield name="CARDCLK" mask="0x04" text="Card CLK" icon="" />
            <bitfield name="CARDRST" mask="0x02" text="Card RST" icon="" />
            <bitfield name="CARDVCC" mask="0x01" text="Card Vcc Control" icon="" />
          </reg>
          <reg size="1" name="SCISR" offset="0xFD" text="Smart Card UART Interface Status Register" icon="io_flag.bmp">
            <bitfield name="SCTBE" mask="0x80" text="UART Transmit Buffer Empty Status" icon="" />
            <bitfield name="CARDIN" mask="0x40" text="Card Presence Status" icon="" />
            <bitfield name="VCARDOK" mask="0x10" text="Card Voltage Correct Status" icon="" />
            <bitfield name="SCWTO" mask="0x08" text="Waiting Time Counter Timeout Status" icon="" />
            <bitfield name="SCTC" mask="0x04" text="UART Transmitted Character Status" icon="" />
            <bitfield name="SCRC" mask="0x02" text="UART Received Character Status" icon="" />
            <bitfield name="SCPE" mask="0x01" text="Character Reception Parity Error Status" icon="" />
          </reg>
          <reg size="1" name="SCIIR" offset="0xFC" text="Smart Card UART Interrupt Identification Register" icon="io_flag.bmp">
            <bitfield name="SCTBI" mask="0x80" text="UART Transmit Buffer Empty Interrupt" icon="" />
            <bitfield name="VCARDERR" mask="0x10" text="Card Voltage Error Interrupt" icon="" />
            <bitfield name="SCWTI" mask="0x08" text="Waiting Time Counter Timeout Interrupt" icon="" />
            <bitfield name="SCTI" mask="0x04" text="UART Transmitted Character Interrupt" icon="" />
            <bitfield name="SCRI" mask="0x02" text="UART Received Character Interrupt" icon="" />
            <bitfield name="SCPI" mask="0x01" text="Character Reception Parity Error Interrupt" icon="" />
          </reg>
          <reg size="1" name="SCIER" offset="0xFB" text="Smart Card UART Interrupt Enable Register" icon="io_flag.bmp">
            <bitfield name="ESCTBI" mask="0x80" text="UART Transmit Buffer Empty Interrupt Enable" icon="" />
            <bitfield name="CARDINE" mask="0x40" text="Card In Interrupt Enable" icon="" />
            <bitfield name="EVCARDER" mask="0x10" text="Card Voltage Error Interrupt Enable" icon="" />
            <bitfield name="ESCWTI" mask="0x08" text="Waiting Time Counter Timeout Interrupt Enable" icon="" />
            <bitfield name="ESCTI" mask="0x04" text="UART Transmitted Character Interrupt Enable" icon="" />
            <bitfield name="ESCRI" mask="0x02" text="UART Received Character Interrupt Enable" icon="" />
            <bitfield name="ESCPI" mask="0x01" text="Character Rception Parity Error Interrupt Enable" icon="" />
          </reg>
          <reg size="1" name="SCSR" offset="0xFA" text="Smart Card Selection Register" icon="io_flag.bmp">
            <bitfield name="BGTEN" mask="0x40" text="Block Guard Time Enable" icon="" />
            <bitfield name="CREPSEL" mask="0x10" text="Character Repetition Selection" icon="" />
            <bitfield name="CPRESRES" mask="0x08" text="Card Presence Pull-up Resistor" icon="" />
          </reg>
          <reg size="1" name="SCIBUF" offset="0xF9" text="Smart Card Transmit/Receive Buffer" icon="io_flag.bmp" mask="0xFF" />
          <reg size="2" name="SCETU" offset="0xF7" text="Smart Card ETU Register " icon="io_flag.bmp" mask="0x87FF" />
          <reg size="2" name="SCGT" offset="0xF5" text="Smart Card Gurad Time Register " icon="io_flag.bmp" mask="0x01FF" />
          <reg size="1" name="SCWT3" offset="0xF4" text="Smart Card Character/Block Waiting Time Register 3" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="SCWT2" offset="0xF3" text="Smart Card Character/Block Waiting Time Register 2" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="SCWT1" offset="0xF2" text="Smart Card Character/Block Waiting Time Register 1" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="SCWT0" offset="0xF1" text="Smart Card Character/Block Waiting Time Register 0" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="SCICLK" offset="0xF0" text="Smart Card Clock Register" icon="io_flag.bmp" mask="0x3F" />
          <reg size="1" name="DCCR" offset="0xEF" text="DCDC Converter Register" icon="io_flag.bmp">
            <bitfield name="DCON" mask="0x80" text="DC/DC ON bit" icon="" />
            <bitfield name="DCRDY" mask="0x40" text="DC/DC Ready bit" icon="" />
            <bitfield name="DCBUSY" mask="0x20" text="DC/DC Busy bit" icon="" />
          </reg>
        </registers>
      </module>
      <module class="TIMER_COUNTER_1" text="">
        <registers name="TIMER_COUNTER_1" memspace="DATAMEM" text="" icon="io_timer.bmp">
          <reg size="1" name="TIMSK1" offset="0x6F" text="Timer/Counter1 Interrupt Mask Register" icon="io_flag.bmp">
            <bitfield name="ICIE1" mask="0x20" text="Timer/Counter1 Input Capture Interrupt Enable" icon="" />
            <bitfield name="OCIE1B" mask="0x04" text="Timer/Counter1 Output Compare B Match Interrupt Enable" icon="" />
            <bitfield name="OCIE1A" mask="0x02" text="Timer/Counter1 Output Compare A Match Interrupt Enable" icon="" />
            <bitfield name="TOIE1" mask="0x01" text="Timer/Counter1 Overflow Interrupt Enable" icon="" />
          </reg>
          <reg size="1" name="TIFR1" offset="0x36" text="Timer/Counter Interrupt Flag register" icon="io_flag.bmp">
            <bitfield name="ICF1" mask="0x20" text="Timer/Counter1 Input Capture Flag" icon="" />
            <bitfield name="OCF1B" mask="0x04" text="Timer/Counter1 Output Compare B Match Flag" icon="" />
            <bitfield name="OCF1A" mask="0x02" text="Timer/Counter1 Output Compare A Match Flag" icon="" />
            <bitfield name="TOV1" mask="0x01" text="Timer/Counter1 Overflow Flag" icon="" />
          </reg>
          <reg size="1" name="TCCR1A" offset="0x80" text="Timer/Counter1 Control Register A" icon="io_flag.bmp">
            <bitfield name="COM1A" mask="0xC0" text="Compare Output Mode 1A, bits" icon="" />
            <bitfield name="COM1B" mask="0x30" text="Compare Output Mode 1B, bits" icon="" />
            <bitfield name="WGM1" mask="0x03" text="Pulse Width Modulator Select Bits" icon="" />
          </reg>
          <reg size="1" name="TCCR1B" offset="0x81" text="Timer/Counter1 Control Register B" icon="io_flag.bmp">
            <bitfield name="ICNC1" mask="0x80" text="Input Capture 1 Noise Canceler" icon="" />
            <bitfield name="ICES1" mask="0x40" text="Input Capture 1 Edge Select" icon="" />
            <bitfield name="WGM1" mask="0x18" text="Waveform Generation Mode Bits" icon="" lsb="2" />
            <bitfield name="CS1" mask="0x07" text="Clock Select1 bits" icon="" enum="CLK_SEL_3BIT_EXT" />
          </reg>
          <reg size="1" name="TCCR1C" offset="0x82" text="Timer/Counter1 Control Register C" icon="io_flag.bmp">
            <bitfield name="FOC1A" mask="0x80" text="Force Output Compare for Channel A" icon="" />
            <bitfield name="FOC1B" mask="0x40" text="Force Output Compare for Channel B" icon="" />
          </reg>
          <reg size="2" name="TCNT1" offset="0x84" text="Timer/Counter1  Bytes" icon="io_timer.bmp" mask="0xFFFF" />
          <reg size="2" name="OCR1A" offset="0x88" text="Timer/Counter1 Output Compare Register A  Bytes" icon="io_timer.bmp" mask="0xFFFF" />
          <reg size="2" name="OCR1B" offset="0x8A" text="Timer/Counter1 Output Compare Register B  Bytes" icon="io_timer.bmp" mask="0xFFFF" />
          <reg size="2" name="ICR1" offset="0x86" text="Timer/Counter1 Input Capture Register  Bytes" icon="io_timer.bmp" mask="0xFFFF" />
        </registers>
        <enumerator name="CLK_SEL_3BIT_EXT">
          <enum val="0x00" text="No Clock Source (Stopped)" />
          <enum val="0x01" text="Running, No Prescaling" />
          <enum val="0x02" text="Running, CLK/8" />
          <enum val="0x03" text="Running, CLK/64" />
          <enum val="0x04" text="Running, CLK/256" />
          <enum val="0x05" text="Running, CLK/1024" />
          <enum val="0x06" text="Running, ExtClk Tx Falling Edge" />
          <enum val="0x07" text="Running, ExtClk Tx Rising Edge" />
        </enumerator>
      </module>
      <module class="EEPROM" text="">
        <registers name="EEPROM" memspace="DATAMEM" text="" icon="io_cpu.bmp">
          <reg size="2" name="EEAR" offset="0x41" text="EEPROM Address Register Low Bytes" icon="io_cpu.bmp" mask="0x0FFF" />
          <reg size="1" name="EEDR" offset="0x40" text="EEPROM Data Register" icon="io_cpu.bmp" mask="0xFF" />
          <reg size="1" name="EECR" offset="0x3F" text="EEPROM Control Register" icon="io_flag.bmp">
            <bitfield name="EEPM" mask="0x30" text="EEPROM Programming Mode Bits" icon="" enum="EEP_MODE" />
            <bitfield name="EERIE" mask="0x08" text="EEPROM Ready Interrupt Enable" icon="" />
            <bitfield name="EEMPE" mask="0x04" text="EEPROM Master Write Enable" icon="" />
            <bitfield name="EEPE" mask="0x02" text="EEPROM Write Enable" icon="" />
            <bitfield name="EERE" mask="0x01" text="EEPROM Read Enable" icon="" />
          </reg>
        </registers>
        <enumerator name="EEP_MODE">
          <enum val="0x00" text="Erase and Write in one operation" />
          <enum val="0x01" text="Erase Only" />
          <enum val="0x02" text="Write Only" />
        </enumerator>
      </module>
      <module class="TWI" text="">
        <registers name="TWI" memspace="DATAMEM" text="" icon="io_com.bmp">
          <reg size="1" name="TWAMR" offset="0xBD" text="TWI (Slave) Address Mask Register" icon="io_com.bmp">
            <bitfield name="TWAM" mask="0xFE" text="" icon="" />
          </reg>
          <reg size="1" name="TWBR" offset="0xB8" text="TWI Bit Rate register" icon="io_com.bmp" mask="0xFF" />
          <reg size="1" name="TWCR" offset="0xBC" text="TWI Control Register" icon="io_flag.bmp">
            <bitfield name="TWINT" mask="0x80" text="TWI Interrupt Flag" icon="" />
            <bitfield name="TWEA" mask="0x40" text="TWI Enable Acknowledge Bit" icon="" />
            <bitfield name="TWSTA" mask="0x20" text="TWI Start Condition Bit" icon="" />
            <bitfield name="TWSTO" mask="0x10" text="TWI Stop Condition Bit" icon="" />
            <bitfield name="TWWC" mask="0x08" text="TWI Write Collition Flag" icon="" />
            <bitfield name="TWEN" mask="0x04" text="TWI Enable Bit" icon="" />
            <bitfield name="TWIE" mask="0x01" text="TWI Interrupt Enable" icon="" />
          </reg>
          <reg size="1" name="TWSR" offset="0xB9" text="TWI Status Register" icon="io_flag.bmp">
            <bitfield name="TWS" mask="0xF8" text="TWI Status" icon="" lsb="3" />
            <bitfield name="TWPS" mask="0x03" text="TWI Prescaler" icon="" enum="COMM_TWI_PRESACLE" />
          </reg>
          <reg size="1" name="TWDR" offset="0xBB" text="TWI Data register" icon="io_com.bmp" mask="0xFF" />
          <reg size="1" name="TWAR" offset="0xBA" text="TWI (Slave) Address register" icon="io_com.bmp">
            <bitfield name="TWA" mask="0xFE" text="TWI (Slave) Address register Bits" icon="" />
            <bitfield name="TWGCE" mask="0x01" text="TWI General Call Recognition Enable Bit" icon="" />
          </reg>
        </registers>
        <enumerator name="COMM_TWI_PRESACLE">
          <enum val="0x00" text="1" />
          <enum val="0x01" text="4" />
          <enum val="0x02" text="16" />
          <enum val="0x03" text="64" />
        </enumerator>
      </module>
      <module class="HSSPI" text="">
        <registers name="HSSPI" memspace="DATAMEM" text="" icon="io_com.bmp">
          <reg size="1" name="HSSPICFG" offset="0xD9" text="HSSPI Config Register" icon="io_com.bmp">
            <bitfield name="SPICKDIV" mask="0xE0" text="SPI Clock Divider Ratio bits" icon="" />
            <bitfield name="DPRAM" mask="0x10" text="DPRAM bit 4" icon="" />
            <bitfield name="HSCPHA" mask="0x08" text="HighSpeed SPI Clock PHAse bit 3" icon="" />
            <bitfield name="HSCPOL" mask="0x04" text="HighSpeed SPI Clock POLarity bit 2" icon="" />
            <bitfield name="HSMSTR" mask="0x02" text="HighSpeed SPI Master/Slave Select bit 1" icon="" />
            <bitfield name="HSSPIEN" mask="0x01" text="HighSpeed SPI Enable bit 0" icon="" />
          </reg>
          <reg size="1" name="HSSPIIR" offset="0xDA" text="HSSPI Interrupt Register" icon="io_flag.bmp">
            <bitfield name="TIMEOUT" mask="0x80" text="Timeout Interrupt Bit" icon="" />
            <bitfield name="BTD" mask="0x40" text="Byte Transfer Done bit" icon="" />
            <bitfield name="RCVOF" mask="0x20" text="Receive Overflow Bit" icon="" />
            <bitfield name="NSSRE" mask="0x10" text="NSS Rising Edge bit" icon="" />
            <bitfield name="NSSFE" mask="0x08" text="NSS Failing Edge bit" icon="" />
          </reg>
          <reg size="1" name="HSSPISR" offset="0xD8" text="HSSPI Status Register" icon="io_flag.bmp">
            <bitfield name="DPRAMRDY" mask="0x10" text="DPRAM Ready bit" icon="" />
            <bitfield name="NSS" mask="0x08" text="NSS bit" icon="" />
            <bitfield name="RXBUFF" mask="0x04" text="Reception Buffer Full bit" icon="" />
            <bitfield name="TXBUFE" mask="0x02" text="Transmission Buffer Empty bit" icon="" />
            <bitfield name="SPICKRDY" mask="0x01" text="SPI Clock Ready bit" icon="" />
          </reg>
          <reg size="1" name="HSSPITDR" offset="0xD7" text="HSSPI Transmit Data Register" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="HSSPIRDR" offset="0xD6" text="HSSPI Received Data Register" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="HSSPIGTR" offset="0xD5" text="HSSPI Gaurd Time Register" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="HSSPIIER" offset="0xD4" text="HSSPI Interrupt Enable Register" icon="io_flag.bmp">
            <bitfield name="TIMEOUTIE" mask="0x80" text="Timeout Interrupt Enable bit" icon="" />
            <bitfield name="BTDIE" mask="0x40" text="Byte Transfer Done Interrupt Enable bit" icon="" />
            <bitfield name="RCVOFIE" mask="0x20" text="Receive Overflow Interrupt Enable bit" icon="" />
            <bitfield name="NSSIE" mask="0x10" text="NSS Interrupt Enable" icon="" />
          </reg>
          <reg size="1" name="HSSPICR" offset="0xDB" text="HSSPI Control Register" icon="io_flag.bmp">
            <bitfield name="STTTO" mask="0x04" text="Start Time-Out bit" icon="" />
            <bitfield name="RETTO" mask="0x02" text="Rearm Timeout Interrupt Enable bit" icon="" />
            <bitfield name="CS" mask="0x01" text="HSSPI CS bit" icon="" />
          </reg>
          <reg size="1" name="HSSPICNT" offset="0xD3" text="HSSPI Byte Count Register" icon="io_flag.bmp" mask="0x1F" />
          <reg size="2" name="HSSPITO" offset="0xD1" text="HSSPI Timeout  Register" icon="io_flag.bmp" mask="0xFFFF" />
          <reg size="1" name="HSSPIDMACS" offset="0xDC" text="HSSPI DMA Control and Status Register" icon="io_flag.bmp">
            <bitfield name="HSSPIDMAERR" mask="0x04" text="DMA Error Bit" icon="" />
            <bitfield name="HSSPIDMADIR" mask="0x02" text="DMA Direction Bit" icon="" />
            <bitfield name="HSSPIDMAR" mask="0x01" text="DMA Run Bit" icon="" />
          </reg>
          <reg size="2" name="HSSPIDMAD" offset="0xDD" text="HSSPI DMA Address Register " icon="io_flag.bmp" mask="0x3FFF" />
          <reg size="1" name="HSSPIDMAB" offset="0xDF" text="HSSPI DMA Amount of Bytes Register" icon="io_flag.bmp" mask="0x1F" />
        </registers>
      </module>
      <module class="CPU" text="">
        <registers name="CPU" memspace="DATAMEM" text="" icon="io_cpu.bmp">
          <reg size="1" name="SREG" offset="0x5F" text="Status Register" icon="io_sreg.bmp">
            <bitfield name="I" mask="0x80" text="Global Interrupt Enable" icon="" />
            <bitfield name="T" mask="0x40" text="Bit Copy Storage" icon="" />
            <bitfield name="H" mask="0x20" text="Half Carry Flag" icon="" />
            <bitfield name="S" mask="0x10" text="Sign Bit" icon="" />
            <bitfield name="V" mask="0x08" text="Two's Complement Overflow Flag" icon="" />
            <bitfield name="N" mask="0x04" text="Negative Flag" icon="" />
            <bitfield name="Z" mask="0x02" text="Zero Flag" icon="" />
            <bitfield name="C" mask="0x01" text="Carry Flag" icon="" />
          </reg>
          <reg size="2" name="SP" offset="0x5D" text="Stack Pointer " icon="io_sph.bmp" mask="0x1FFF" />
          <reg size="1" name="OSCCAL" offset="0x66" text="Oscillator Calibration Value" icon="io_cpu.bmp" mask="0xFF" />
          <reg size="1" name="PLLCR" offset="0x62" text="Phase Lock Loop Control Register" icon="io_cpu.bmp">
            <bitfield name="PLLMUX" mask="0x80" text="PLL Clock Multiplexer Control Bit" icon="" />
            <bitfield name="LOCK" mask="0x02" text="PLL Lock Bit Signal" icon="" />
            <bitfield name="ON" mask="0x01" text="PLL Start Bit" icon="" />
          </reg>
          <reg size="1" name="MCUCR" offset="0x55" text="MCU Control Register" icon="io_flag.bmp">
            <bitfield name="JTD" mask="0x80" text="JTAG Interface Disable" icon="" />
            <bitfield name="BODS" mask="0x40" text="BOD Power Down in Sleep" icon="" />
            <bitfield name="BODSE" mask="0x20" text="BOD Power Down in Sleep Enable" icon="" />
            <bitfield name="PUD" mask="0x10" text="Pull-up disable" icon="" />
            <bitfield name="IVSEL" mask="0x02" text="Interrupt Vector Select" icon="" />
            <bitfield name="IVCE" mask="0x01" text="Interrupt Vector Change Enable" icon="" />
          </reg>
          <reg size="1" name="MCUSR" offset="0x54" text="MCU Status Register" icon="io_flag.bmp">
            <bitfield name="JTRF" mask="0x10" text="JTAG Reset Flag" icon="" />
            <bitfield name="WDRF" mask="0x08" text="Watchdog Reset Flag" icon="" />
            <bitfield name="BORF" mask="0x04" text="Brown-out Reset Flag" icon="" />
            <bitfield name="EXTRF" mask="0x02" text="External Reset Flag" icon="" />
            <bitfield name="PORF" mask="0x01" text="Power-on reset flag" icon="" />
          </reg>
          <reg size="1" name="CLKPR" offset="0x61" text="" icon="io_cpu.bmp">
            <bitfield name="CLKPCE" mask="0x80" text="" icon="" />
            <bitfield name="CLKPS" mask="0x0F" text="" icon="" enum="CPU_CLK_PRESCALE_4_BITS_SMALL" />
          </reg>
          <reg size="1" name="SMCR" offset="0x53" text="Sleep Mode Control Register" icon="io_cpu.bmp">
            <bitfield name="SM" mask="0x0E" text="Sleep Mode Select bits" icon="" enum="CPU_SLEEP_MODE_3BITS" />
            <bitfield name="SE" mask="0x01" text="Sleep Enable" icon="" />
          </reg>
          <reg size="1" name="RAMPZ" offset="0x5B" text="RAM Page Z Select Register" icon="io_cpu.bmp" mask="0x01" />
          <reg size="1" name="GPIOR2" offset="0x4B" text="General Purpose IO Register 2" icon="io_cpu.bmp">
            <bitfield name="GPIOR" mask="0xFF" text="General Purpose IO Register 2 bis" icon="" lsb="20" />
          </reg>
          <reg size="1" name="GPIOR1" offset="0x4A" text="General Purpose IO Register 1" icon="io_cpu.bmp">
            <bitfield name="GPIOR" mask="0xFF" text="General Purpose IO Register 1 bis" icon="" lsb="10" />
          </reg>
          <reg size="1" name="GPIOR0" offset="0x3E" text="General Purpose IO Register 0" icon="io_cpu.bmp">
            <bitfield name="GPIOR07" mask="0x80" text="General Purpose IO Register 0 bit 7" icon="" />
            <bitfield name="GPIOR06" mask="0x40" text="General Purpose IO Register 0 bit 6" icon="" />
            <bitfield name="GPIOR05" mask="0x20" text="General Purpose IO Register 0 bit 5" icon="" />
            <bitfield name="GPIOR04" mask="0x10" text="General Purpose IO Register 0 bit 4" icon="" />
            <bitfield name="GPIOR03" mask="0x08" text="General Purpose IO Register 0 bit 3" icon="" />
            <bitfield name="GPIOR02" mask="0x04" text="General Purpose IO Register 0 bit 2" icon="" />
            <bitfield name="GPIOR01" mask="0x02" text="General Purpose IO Register 0 bit 1" icon="" />
            <bitfield name="GPIOR00" mask="0x01" text="General Purpose IO Register 0 bit 0" icon="" />
          </reg>
          <reg size="1" name="PRR1" offset="0x65" text="Power Reduction Register1" icon="io_cpu.bmp">
            <bitfield name="PRKB" mask="0x20" text="Power Reduction Keyboard" icon="" />
            <bitfield name="PRAES" mask="0x10" text="Power Reduction AES Module" icon="" />
            <bitfield name="PRSCI" mask="0x08" text="Power Reduction Smart Card Interface" icon="" />
            <bitfield name="PRHSSPI" mask="0x04" text="Power Reduction High-Speed SPI" icon="" />
            <bitfield name="PRUSB" mask="0x02" text="Power Reduction USB Device" icon="" />
            <bitfield name="PRUSBH" mask="0x01" text="Power Reduction USB Host Controller" icon="" />
          </reg>
          <reg size="1" name="PRR0" offset="0x64" text="Power Reduction Register0" icon="io_cpu.bmp">
            <bitfield name="PRTWI" mask="0x80" text="Power Reduction TWI" icon="" />
            <bitfield name="PRTIM2" mask="0x40" text="Power Reduction Timer/Counter2" icon="" />
            <bitfield name="PRTIM0" mask="0x20" text="Power Reduction Timer/Counter0" icon="" />
            <bitfield name="PRTIM1" mask="0x08" text="Power Reduction Timer/Counter1" icon="" />
            <bitfield name="PRSPI" mask="0x04" text="Power Reduction Serial Peripheral Interface" icon="" />
            <bitfield name="PRUSART0" mask="0x02" text="Power Reduction USART 0" icon="" />
          </reg>
        </registers>
        <enumerator name="CPU_CLK_PRESCALE_4_BITS_SMALL">
          <enum val="0x00" text="1" />
          <enum val="0x01" text="2" />
          <enum val="0x02" text="4" />
          <enum val="0x03" text="8" />
          <enum val="0x04" text="16" />
          <enum val="0x05" text="32" />
          <enum val="0x06" text="64" />
          <enum val="0x07" text="128" />
          <enum val="0x08" text="256" />
        </enumerator>
        <enumerator name="CPU_SLEEP_MODE_3BITS">
          <enum val="0x00" text="Idle" />
          <enum val="0x01" text="ADC Noise Reduction (If Available)" />
          <enum val="0x02" text="Power Down" />
          <enum val="0x03" text="Power Save" />
          <enum val="0x04" text="Reserved" />
          <enum val="0x05" text="Reserved" />
          <enum val="0x06" text="Standby" />
          <enum val="0x07" text="Extended Standby" />
        </enumerator>
      </module>
      <module class="SPI" text="">
        <registers name="SPI" memspace="DATAMEM" text="" icon="io_com.bmp">
          <reg size="1" name="SPDR" offset="0x4E" text="SPI Data Register" icon="io_com.bmp" mask="0xFF" />
          <reg size="1" name="SPSR" offset="0x4D" text="SPI Status Register" icon="io_flag.bmp">
            <bitfield name="SPIF" mask="0x80" text="SPI Interrupt Flag" icon="" />
            <bitfield name="WCOL" mask="0x40" text="Write Collision Flag" icon="" />
            <bitfield name="SPI2X" mask="0x01" text="Double SPI Speed Bit" icon="" />
          </reg>
          <reg size="1" name="SPCR" offset="0x4C" text="SPI Control Register" icon="io_flag.bmp">
            <bitfield name="SPIE" mask="0x80" text="SPI Interrupt Enable" icon="" />
            <bitfield name="SPE" mask="0x40" text="SPI Enable" icon="" />
            <bitfield name="DORD" mask="0x20" text="Data Order" icon="" />
            <bitfield name="MSTR" mask="0x10" text="Master/Slave Select" icon="" />
            <bitfield name="CPOL" mask="0x08" text="Clock polarity" icon="" />
            <bitfield name="CPHA" mask="0x04" text="Clock Phase" icon="" />
            <bitfield name="SPR" mask="0x03" text="SPI Clock Rate Selects" icon="" enum="COMM_SCK_RATE_3BIT" />
          </reg>
        </registers>
        <enumerator name="COMM_SCK_RATE_3BIT">
          <enum val="0x00" text="fosc/4" />
          <enum val="0x01" text="fosc/16" />
          <enum val="0x02" text="fosc/64" />
          <enum val="0x03" text="fosc/128" />
          <enum val="0x04" text="fosc/2" />
          <enum val="0x05" text="fosc/8" />
          <enum val="0x06" text="fosc/32" />
          <enum val="0x07" text="fosc/64" />
        </enumerator>
      </module>
      <module class="AES" text="">
        <registers name="AES" memspace="DATAMEM" text="" icon="io_com.bmp">
          <reg size="1" name="AESCR" offset="0x78" text="AES Control Register" icon="io_com.bmp">
            <bitfield name="AESIE" mask="0x80" text="AES Interrupt Enable" icon="" />
            <bitfield name="AESIF" mask="0x40" text="AES Interrupt Flag" icon="" />
            <bitfield name="AUTOKEY" mask="0x20" text="Encrypt/Decrypt Automatic Key Generator Mode" icon="" />
            <bitfield name="KEYGN" mask="0x10" text="Key Generation Mode" icon="" />
            <bitfield name="KS" mask="0x08" text="Key Selection bit" icon="" />
            <bitfield name="ENCRYPT" mask="0x02" text="Encryption/Decryption bit" icon="" />
            <bitfield name="AESGO" mask="0x01" text="AES Run bit" icon="" />
          </reg>
          <reg size="1" name="AESACR" offset="0x79" text="AES Access Control Register" icon="io_com.bmp">
            <bitfield name="XOR" mask="0x08" text="XOR mode" icon="" />
            <bitfield name="MANINC" mask="0x04" text="Manual Increment bit" icon="" />
            <bitfield name="AUTOINC" mask="0x02" text="Automatic Increment bit" icon="" />
            <bitfield name="KD" mask="0x01" text="Key/Data bit" icon="" />
          </reg>
          <reg size="1" name="AESADDR" offset="0x7A" text="AES Address Register" icon="io_com.bmp" mask="0xFF" />
          <reg size="1" name="AESDR" offset="0x7B" text="AES Data Register" icon="io_com.bmp" mask="0xFF" />
        </registers>
      </module>
      <module class="KB" text="">
        <registers name="KB" memspace="DATAMEM" text="" icon="io_com.bmp">
          <reg size="1" name="KBFR" offset="0x8F" text="KeyBoard Flag Register" icon="io_com.bmp">
            <bitfield name="KBF" mask="0xFF" text="KeyBoard Flag for KbIN7 pin" icon="" />
          </reg>
          <reg size="1" name="KBER" offset="0x8E" text="KeyBoard Enable Register" icon="io_flag.bmp">
            <bitfield name="KBE" mask="0xFF" text="KeyBoard KbIN7 Enable bit" icon="" />
          </reg>
          <reg size="1" name="KBLSR" offset="0x8D" text="KeyBoard Level Selection Register" icon="io_flag.bmp">
            <bitfield name="KBLS" mask="0xFF" text="KeyBoard KbIN7 Level Selection bit" icon="" />
          </reg>
        </registers>
      </module>
      <module class="RNG" text="">
        <registers name="RNG" memspace="DATAMEM" text="" icon="io_com.bmp">
          <reg size="1" name="RNGCR" offset="0x95" text="Random Number Generator Control Register" icon="io_com.bmp">
            <bitfield name="ROSCE" mask="0x01" text="Random Oscillator Enable" icon="" />
          </reg>
          <reg size="1" name="LFSR3" offset="0x94" text="Initialization Register" icon="io_com.bmp" mask="0xFF" />
          <reg size="1" name="LFSR2" offset="0x93" text="Initialization Register" icon="io_com.bmp" mask="0xFF" />
          <reg size="1" name="LFSR1" offset="0x92" text="Initialization Register" icon="io_com.bmp" mask="0xFF" />
          <reg size="1" name="LFSR0" offset="0x91" text="Initialization Register" icon="io_com.bmp" mask="0xFF" />
          <reg size="1" name="RDWDR" offset="0x90" text="Random Word Data Register" icon="io_com.bmp" mask="0xFF" />
        </registers>
      </module>
      <module class="USB_HOST" text="">
        <registers name="USB_HOST" memspace="DATAMEM" text="" icon="io_com.bmp">
          <reg size="1" name="UHCR" offset="0x9E" text="USB Host Control Register" icon="io_flag.bmp">
            <bitfield name="UHEN" mask="0x80" text="USB Host Enable" icon="" />
            <bitfield name="PAD" mask="0x60" text="With PAD0, Select Pad type for USB Host" icon="" />
            <bitfield name="FRZCLK" mask="0x10" text="Cut the 48Mhz clock into the controller. Reduce consumption but avoid all communication" icon="" />
            <bitfield name="RESUME" mask="0x04" text="Generate a USB Resume on USB bus" icon="" />
            <bitfield name="RESET" mask="0x02" text="Send USB Reset on USB bus" icon="" />
            <bitfield name="SOFEN" mask="0x01" text="Generate Start Of Frame on USB bus" icon="" />
          </reg>
          <reg size="1" name="UHSR" offset="0x99" text="USB Host Status Register" icon="io_flag.bmp">
            <bitfield name="SPEED" mask="0x08" text="Speed Status Flag" icon="" />
          </reg>
          <reg size="1" name="UHINT" offset="0x9F" text="USB Host Interrupt Register" icon="io_flag.bmp">
            <bitfield name="HWUPI" mask="0x40" text="Host Wake-Up Interrupt" icon="" />
            <bitfield name="HSOFI" mask="0x20" text="Host Start Of Frame Interrupt" icon="" />
            <bitfield name="RXRSMI" mask="0x10" text="Upstream Resume Received Interrupt" icon="" />
            <bitfield name="RSMEDI" mask="0x08" text="Downstream Resume Sent Interrupt" icon="" />
            <bitfield name="RSTI" mask="0x04" text="USB Reset Sent Interrupt" icon="" />
            <bitfield name="DDISCI" mask="0x02" text="Device Disconnection Interrupt" icon="" />
            <bitfield name="DCONNI" mask="0x01" text="Device Connection Interrupt" icon="" />
          </reg>
          <reg size="1" name="UHIEN" offset="0xA0" text="USB Host Interrupt Enable Register" icon="io_flag.bmp" mask="0x7F" />
          <reg size="1" name="UHADDR" offset="0xA1" text="USB Host Address Register" icon="io_flag.bmp" mask="0x7F" />
          <reg size="1" name="USB Host Frame Number Register High" offset="0xA3" text="" icon="io_flag.bmp" mask="0x07" />
          <reg size="1" name="UHFNUML" offset="0xA2" text="USB Host Frame Number Register Low" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="UHFLEN" offset="0xA4" text="USB Host Frame Length Register" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="UPNUM" offset="0xA7" text="USB Pipe Number Register" icon="io_flag.bmp" mask="0x03" />
          <reg size="1" name="UPRST" offset="0xA8" text="USB Pipe Reset Register" icon="io_flag.bmp">
            <bitfield name="P3RST" mask="0x08" text="If Set, Pipe 3 is reset" icon="" />
            <bitfield name="P2RST" mask="0x04" text="If Set, Pipe 2 is reset" icon="" />
            <bitfield name="P1RST" mask="0x02" text="If Set, Pipe 1 is reset" icon="" />
            <bitfield name="P0RST" mask="0x01" text="If Set, Pipe 0 is reset" icon="" />
          </reg>
          <reg size="1" name="UPCRX" offset="0xA9" text="USB Pipe Control Register for Pipe X" icon="io_flag.bmp">
            <bitfield name="PFREEZE" mask="0x40" text="Pipe Freeze" icon="" />
            <bitfield name="INMODE" mask="0x20" text="IN Request Mode" icon="" />
            <bitfield name="RSTDT" mask="0x08" text="Reset Data Toggle" icon="" />
            <bitfield name="PEN" mask="0x01" text="Pipe Enable" icon="" />
          </reg>
          <reg size="1" name="UPCFG0X" offset="0xAA" text="USB Pipe Configuration Register 0 for Pipe X" icon="io_flag.bmp">
            <bitfield name="PTYPE" mask="0xC0" text="Pipe Type together with PTYPE0 bit" icon="" />
            <bitfield name="PTOKEN" mask="0x30" text="Pipe Token together with PTOKEN0" icon="" />
            <bitfield name="PEPNUM" mask="0x0F" text="Pipe Endpoint Number3" icon="" />
          </reg>
          <reg size="1" name="UPCFG1X" offset="0xAB" text="USB Pipe Configuration Register 1 for Pipe X" icon="io_flag.bmp">
            <bitfield name="PSIZE" mask="0x70" text="Pipe Sizes" icon="" />
            <bitfield name="PBK" mask="0x0C" text="Pipe Bank1" icon="" />
            <bitfield name="ALLOC" mask="0x02" text="Configure Pipe Memory" icon="" />
          </reg>
          <reg size="1" name="UPCFG2X" offset="0xAD" text="US Pipe Configuration Register 2 for Pipe X" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="UPSTAX" offset="0xAC" text="USB Pipe Status Register for Pipe X" icon="io_flag.bmp">
            <bitfield name="CFGOK" mask="0x80" text="Configure Pipe Memory OK" icon="" />
            <bitfield name="OVERFI" mask="0x40" text="Overflow" icon="" />
            <bitfield name="UNDERFI" mask="0x20" text="Underflow" icon="" />
            <bitfield name="DTSEQ" mask="0x0C" text="Toggle Sequencing Flag1" icon="" />
            <bitfield name="NBUSYBK" mask="0x03" text="Busy Bank Flag1" icon="" />
          </reg>
          <reg size="1" name="UPINRQX" offset="0xA5" text="USB Pipe IN Reequest Register for Pipe X" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="UPERRX" offset="0x9D" text="USB Pipe Error Register for Pipe X" icon="io_flag.bmp">
            <bitfield name="COUNTER1" mask="0x40" text="Error Counter1" icon="" />
            <bitfield name="COUNTER0" mask="0x20" text="Error Counter0" icon="" />
            <bitfield name="CRC16" mask="0x10" text="CRC16 Error" icon="" />
            <bitfield name="PTIMEOUT" mask="0x08" text="Pipe Time-Out Error" icon="" />
            <bitfield name="PID" mask="0x04" text="PID Error" icon="" />
            <bitfield name="DATAPID" mask="0x02" text="Data PID Error" icon="" />
            <bitfield name="DATATGL" mask="0x01" text="Bad Data Toggle" icon="" />
          </reg>
          <reg size="1" name="UPINTX" offset="0xA6" text="USB Pipe Interrupt Register for Pipe X" icon="io_flag.bmp">
            <bitfield name="FIFOCON" mask="0x80" text="FIFO Control" icon="" />
            <bitfield name="NAKEDI" mask="0x40" text="NAK Handshake received" icon="" />
            <bitfield name="RWAL" mask="0x20" text="Read/Write Allowed" icon="" />
            <bitfield name="PERRI" mask="0x10" text="Pipe Error" icon="" />
            <bitfield name="TXSTPI" mask="0x08" text="SETUP Bank Ready" icon="" />
            <bitfield name="TXOUTI" mask="0x04" text="OUT Bank Ready" icon="" />
            <bitfield name="RXSTALLI" mask="0x02" text="STALL Received/Isochronous CRC Error" icon="" />
            <bitfield name="RXINI" mask="0x01" text="IN Data Received" icon="" />
          </reg>
          <reg size="1" name="UPIENX" offset="0xAE" text="USB Pipe Interrupt Enable Register for Pipe X" icon="io_flag.bmp">
            <bitfield name="FLERRE" mask="0x80" text="Flow Error Interrupt Enable" icon="" />
            <bitfield name="NAKEDE" mask="0x40" text="NAK Handshake Received Interrupt Enable" icon="" />
            <bitfield name="PERRE" mask="0x10" text="PIPE Error Interrupt Enable" icon="" />
            <bitfield name="TXSTPE" mask="0x08" text="SETUP Bank Ready Interrupt Enable" icon="" />
            <bitfield name="TXOUTE" mask="0x04" text="OUT Bank Ready Interrupt Enable" icon="" />
            <bitfield name="RXSTALLE" mask="0x02" text="STALL Received Interrupt Enable" icon="" />
            <bitfield name="RXINE" mask="0x01" text="In Data Received Interrupt Enable" icon="" />
          </reg>
          <reg size="1" name="UPDATX" offset="0xAF" text="USB Pipe Data Register for Pipe X" icon="io_flag.bmp" mask="0xFF" />
          <reg size="2" name="UPBCX" offset="0x9B" text="USB Pipe Bytes Count  Register for Pipe X" icon="io_flag.bmp" mask="0x07FF" />
          <reg size="1" name="UPINT" offset="0x9A" text="USB Pipe Interrupt Register" icon="io_flag.bmp">
            <bitfield name="PINT" mask="0x0F" text="" icon="" />
          </reg>
        </registers>
      </module>
      <module class="LED" text="">
        <registers name="LED" memspace="DATAMEM" text="" icon="io_com.bmp">
          <reg size="1" name="LEDCR" offset="0x75" text="LED Control Register" icon="io_com.bmp">
            <bitfield name="LED3" mask="0xC0" text="LED 3 Port Configuration Bits" icon="" />
            <bitfield name="LED2" mask="0x30" text="LED 2 Port Configuration Bits" icon="" />
            <bitfield name="LED1" mask="0x0C" text="LED 1 Port Configuration Bits" icon="" />
            <bitfield name="LED0" mask="0x03" text="LED 0 Port Configuration Bits" icon="" />
          </reg>
        </registers>
      </module>
      <module class="Supply_Monitor" text="">
        <registers name="Supply_Monitor" memspace="DATAMEM" text="" icon="io_com.bmp">
          <reg size="1" name="SMONCR" offset="0x63" text="Supply Monitor Control Register" icon="io_com.bmp">
            <bitfield name="SMONIF" mask="0x10" text="Supply Monitor Interrupt Flag" icon="" />
            <bitfield name="SMONIE" mask="0x02" text="Supply Monitor Interrupt Enable" icon="" />
            <bitfield name="SMONEN" mask="0x01" text="Supply Monitor Enable" icon="" />
          </reg>
        </registers>
      </module>
      <module class="PORTE" text="">
        <registers name="PORTE" memspace="DATAMEM" text="" icon="io_port.bmp">
          <reg size="1" name="PORTE" offset="0x2E" text="Data Register, Port E" icon="io_port.bmp" mask="0xFF" />
          <reg size="1" name="DDRE" offset="0x2D" text="Data Direction Register, Port E" icon="io_flag.bmp" mask="0xFF" />
          <reg size="1" name="PINE" offset="0x2C" text="Input Pins, Port E" icon="io_port.bmp" mask="0xFF" />
        </registers>
      </module>
    </templates>
    <modules>
      <module implements="USB_DEVICE" name="USB_DEVICE">
        <registers implements="USB_DEVICE" name="USB_DEVICE" offset="0x00" text="" />
      </module>
      <module implements="USART0" name="USART0">
        <registers implements="USART0" name="USART0" offset="0x00" text="" />
      </module>
      <module implements="PORTA" name="PORTA">
        <registers implements="PORTA" name="PORTA" offset="0x00" text="" />
      </module>
      <module implements="PORTB" name="PORTB">
        <registers implements="PORTB" name="PORTB" offset="0x00" text="" />
      </module>
      <module implements="PORTC" name="PORTC">
        <registers implements="PORTC" name="PORTC" offset="0x00" text="" />
      </module>
      <module implements="PORTD" name="PORTD">
        <registers implements="PORTD" name="PORTD" offset="0x00" text="" />
      </module>
      <module implements="TIMER_COUNTER_0" name="TIMER_COUNTER_0">
        <registers implements="TIMER_COUNTER_0" name="TIMER_COUNTER_0" offset="0x00" text="" />
      </module>
      <module implements="TIMER_COUNTER_2" name="TIMER_COUNTER_2">
        <registers implements="TIMER_COUNTER_2" name="TIMER_COUNTER_2" offset="0x00" text="" />
      </module>
      <module implements="WATCHDOG" name="WATCHDOG">
        <registers implements="WATCHDOG" name="WATCHDOG" offset="0x00" text="" />
      </module>
      <module implements="JTAG" name="JTAG">
        <registers implements="JTAG" name="JTAG" offset="0x00" text="" />
      </module>
      <module implements="BOOT_LOAD" name="BOOT_LOAD">
        <registers implements="BOOT_LOAD" name="BOOT_LOAD" offset="0x00" text="" />
      </module>
      <module implements="EXTERNAL_INTERRUPT" name="EXTERNAL_INTERRUPT">
        <registers implements="EXTERNAL_INTERRUPT" name="EXTERNAL_INTERRUPT" offset="0x00" text="" />
      </module>
      <module implements="SCIB" name="SCIB">
        <registers implements="SCIB" name="SCIB" offset="0x00" text="" />
      </module>
      <module implements="TIMER_COUNTER_1" name="TIMER_COUNTER_1">
        <registers implements="TIMER_COUNTER_1" name="TIMER_COUNTER_1" offset="0x00" text="" />
      </module>
      <module implements="EEPROM" name="EEPROM">
        <registers implements="EEPROM" name="EEPROM" offset="0x00" text="" />
      </module>
      <module implements="TWI" name="TWI">
        <registers implements="TWI" name="TWI" offset="0x00" text="" />
      </module>
      <module implements="HSSPI" name="HSSPI">
        <registers implements="HSSPI" name="HSSPI" offset="0x00" text="" />
      </module>
      <module implements="CPU" name="CPU">
        <registers implements="CPU" name="CPU" offset="0x00" text="" />
      </module>
      <module implements="SPI" name="SPI">
        <registers implements="SPI" name="SPI" offset="0x00" text="" />
      </module>
      <module implements="AES" name="AES">
        <registers implements="AES" name="AES" offset="0x00" text="" />
      </module>
      <module implements="KB" name="KB">
        <registers implements="KB" name="KB" offset="0x00" text="" />
      </module>
      <module implements="RNG" name="RNG">
        <registers implements="RNG" name="RNG" offset="0x00" text="" />
      </module>
      <module implements="USB_HOST" name="USB_HOST">
        <registers implements="USB_HOST" name="USB_HOST" offset="0x00" text="" />
      </module>
      <module implements="LED" name="LED">
        <registers implements="LED" name="LED" offset="0x00" text="" />
      </module>
      <module implements="Supply_Monitor" name="Supply_Monitor">
        <registers implements="Supply_Monitor" name="Supply_Monitor" offset="0x00" text="" />
      </module>
      <module implements="PORTE" name="PORTE">
        <registers implements="PORTE" name="PORTE" offset="0x00" text="" />
      </module>
    </modules>
    <fuses>
      <fuse implements="FUSE" name="FUSE">
        <registers implements="FUSE" name="FUSE" />
      </fuse>
    </fuses>
    <lockbits>
      <lockbit implements="LOCKBIT" name="LOCKBIT">
        <registers implements="LOCKBIT" name="LOCKBIT" />
      </lockbit>
    </lockbits>
  </V2>
</AVRPART>